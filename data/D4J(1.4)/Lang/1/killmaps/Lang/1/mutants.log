1:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:136:" " |==> null
2:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:142:"" |==> null
3:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:151:"\n" |==> null
4:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:160:"\r" |==> null
5:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:166:-1 |==> 0
6:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils:171:8192 |==> 0
7:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils:181:"(?: \\s|[\\s&&[^ ]])\\s*" |==> null
8:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isEmpty:217:cs == null |==> false
9:LVR:0:POS:org.apache.commons.lang3.StringUtils@isEmpty:217:0 |==> 1
10:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isEmpty:217:0 |==> -1
11:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isEmpty:217:cs.length() == 0 |==> cs.length() <= 0
12:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@isEmpty:217:cs.length() == 0 |==> cs.length() >= 0
13:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isEmpty:217:cs.length() == 0 |==> false
14:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isEmpty:217:cs == null || cs.length() == 0 |==> cs == null != (cs.length() == 0)
15:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isEmpty:217:cs == null || cs.length() == 0 |==> cs == null
16:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isEmpty:217:cs == null || cs.length() == 0 |==> cs.length() == 0
17:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isEmpty:217:cs == null || cs.length() == 0 |==> true
18:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@isNotEmpty:236:!StringUtils.isEmpty(cs) |==> false
19:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isBlank:257:cs == null |==> false
20:LVR:0:POS:org.apache.commons.lang3.StringUtils@isBlank:257:0 |==> 1
21:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isBlank:257:0 |==> -1
22:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isBlank:257:(strLen = cs.length()) == 0 |==> (strLen = cs.length()) <= 0
23:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@isBlank:257:(strLen = cs.length()) == 0 |==> (strLen = cs.length()) >= 0
24:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isBlank:257:cs == null || (strLen = cs.length()) == 0 |==> cs == null != ((strLen = cs.length()) == 0)
25:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isBlank:257:cs == null || (strLen = cs.length()) == 0 |==> (strLen = cs.length()) == 0
26:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isBlank:258:true |==> false
27:LVR:0:POS:org.apache.commons.lang3.StringUtils@isBlank:260:0 |==> 1
28:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isBlank:260:0 |==> -1
29:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isBlank:260:i < strLen |==> i != strLen
30:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isBlank:260:i < strLen |==> i <= strLen
31:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isBlank:260:i < strLen |==> false
32:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isBlank:261:false |==> true
33:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isBlank:261:Character.isWhitespace(cs.charAt(i)) == false |==> false
34:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isBlank:261:Character.isWhitespace(cs.charAt(i)) == false |==> Character.isWhitespace(cs.charAt(i))
35:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isBlank:261:Character.isWhitespace(cs.charAt(i)) == false |==> false
36:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isBlank:262:false |==> true
37:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isBlank:265:true |==> false
38:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@isNotBlank:286:!StringUtils.isBlank(cs) |==> false
39:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@trim:315:str == null |==> false
40:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@trimToNull:341:trim(str) |==> null
41:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@trimToNull:342:isEmpty(ts) ? null : ts |==> null
42:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@trimToEmpty:367:str == null |==> false
43:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@strip:395:strip(str, null) |==> null
44:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripToNull:422:str == null |==> false
45:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripToNull:425:str = strip(str, null) |==> <NO-OP>
46:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripToNull:426:str.isEmpty() ? null : str |==> null
47:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripToEmpty:452:str == null |==> false
48:COR:isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@strip:482:isEmpty(str) |==> false
49:COR:isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@strip:482:isEmpty(str) |==> true
50:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@strip:483:str |==> null
51:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@strip:485:str = stripStart(str, stripChars) |==> <NO-OP>
52:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@strip:486:stripEnd(str, stripChars) |==> null
53:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripStart:515:str == null |==> false
54:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripStart:515:0 |==> 1
55:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripStart:515:0 |==> -1
56:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@stripStart:515:(strLen = str.length()) == 0 |==> (strLen = str.length()) <= 0
57:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@stripStart:515:(strLen = str.length()) == 0 |==> (strLen = str.length()) >= 0
58:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:515:str == null || (strLen = str.length()) == 0 |==> str == null != ((strLen = str.length()) == 0)
59:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:515:str == null || (strLen = str.length()) == 0 |==> (strLen = str.length()) == 0
60:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripStart:516:str |==> null
61:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripStart:518:0 |==> 1
62:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripStart:518:0 |==> -1
63:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripStart:519:stripChars == null |==> false
64:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen |==> start < strLen
65:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen |==> start > strLen
66:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen |==> true
67:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen && Character.isWhitespace(str.charAt(start)) |==> start != strLen == Character.isWhitespace(str.charAt(start))
68:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen && Character.isWhitespace(str.charAt(start)) |==> false
69:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen && Character.isWhitespace(str.charAt(start)) |==> start != strLen
70:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:520:start != strLen && Character.isWhitespace(str.charAt(start)) |==> Character.isWhitespace(str.charAt(start))
71:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripStart:521:start++ |==> <NO-OP>
72:COR:stripChars.isEmpty():TRUE:org.apache.commons.lang3.StringUtils@stripStart:523:stripChars.isEmpty() |==> false
73:COR:stripChars.isEmpty():FALSE:org.apache.commons.lang3.StringUtils@stripStart:523:stripChars.isEmpty() |==> true
74:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripStart:524:str |==> null
75:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen |==> start < strLen
76:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen |==> start > strLen
77:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen |==> true
78:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(start)) < INDEX_NOT_FOUND
79:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(start)) > INDEX_NOT_FOUND
80:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripStart:526:stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> true
81:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> start != strLen == (stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND)
82:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> false
83:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> start != strLen
84:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripStart:526:start != strLen && stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(start)) != INDEX_NOT_FOUND
85:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripStart:527:start++ |==> <NO-OP>
86:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripStart:530:str.substring(start) |==> null
87:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripEnd:560:str == null |==> false
88:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripEnd:560:0 |==> 1
89:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripEnd:560:0 |==> -1
90:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@stripEnd:560:(end = str.length()) == 0 |==> (end = str.length()) <= 0
91:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@stripEnd:560:(end = str.length()) == 0 |==> (end = str.length()) >= 0
92:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:560:str == null || (end = str.length()) == 0 |==> str == null != ((end = str.length()) == 0)
93:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:560:str == null || (end = str.length()) == 0 |==> (end = str.length()) == 0
94:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripEnd:561:str |==> null
95:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripEnd:564:stripChars == null |==> false
96:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripEnd:565:0 |==> 1
97:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripEnd:565:0 |==> -1
98:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 |==> end < 0
99:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 |==> end > 0
100:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 |==> true
101:LVR:POS:0:org.apache.commons.lang3.StringUtils@stripEnd:565:1 |==> 0
102:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@stripEnd:565:1 |==> -1
103:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end - 1 |==> end % 1
104:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end - 1 |==> end * 1
105:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end - 1 |==> end + 1
106:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@stripEnd:565:end - 1 |==> end / 1
107:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 && Character.isWhitespace(str.charAt(end - 1)) |==> end != 0 == Character.isWhitespace(str.charAt(end - 1))
108:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 && Character.isWhitespace(str.charAt(end - 1)) |==> false
109:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 && Character.isWhitespace(str.charAt(end - 1)) |==> end != 0
110:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:565:end != 0 && Character.isWhitespace(str.charAt(end - 1)) |==> Character.isWhitespace(str.charAt(end - 1))
111:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripEnd:566:end-- |==> <NO-OP>
112:COR:stripChars.isEmpty():TRUE:org.apache.commons.lang3.StringUtils@stripEnd:568:stripChars.isEmpty() |==> false
113:COR:stripChars.isEmpty():FALSE:org.apache.commons.lang3.StringUtils@stripEnd:568:stripChars.isEmpty() |==> true
114:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripEnd:569:str |==> null
115:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripEnd:571:0 |==> 1
116:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripEnd:571:0 |==> -1
117:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 |==> end < 0
118:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 |==> end > 0
119:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 |==> true
120:LVR:POS:0:org.apache.commons.lang3.StringUtils@stripEnd:571:1 |==> 0
121:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@stripEnd:571:1 |==> -1
122:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end - 1 |==> end % 1
123:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end - 1 |==> end * 1
124:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end - 1 |==> end + 1
125:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:end - 1 |==> end / 1
126:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(end - 1)) < INDEX_NOT_FOUND
127:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(end - 1)) > INDEX_NOT_FOUND
128:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@stripEnd:571:stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> true
129:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> end != 0 == (stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND)
130:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> false
131:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> end != 0
132:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripEnd:571:end != 0 && stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND |==> stripChars.indexOf(str.charAt(end - 1)) != INDEX_NOT_FOUND
133:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripEnd:572:end-- |==> <NO-OP>
134:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripEnd:575:0 |==> 1
135:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripEnd:575:0 |==> -1
136:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAll:600:stripAll(strs, null) |==> null
137:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripAll:630:strs == null |==> false
138:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripAll:630:0 |==> 1
139:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripAll:630:0 |==> -1
140:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@stripAll:630:(strsLen = strs.length) == 0 |==> (strsLen = strs.length) <= 0
141:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@stripAll:630:(strsLen = strs.length) == 0 |==> (strsLen = strs.length) >= 0
142:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@stripAll:630:strs == null || (strsLen = strs.length) == 0 |==> strs == null != ((strsLen = strs.length) == 0)
143:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@stripAll:630:strs == null || (strsLen = strs.length) == 0 |==> (strsLen = strs.length) == 0
144:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAll:631:strs |==> null
145:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAll:633:new String[strsLen] |==> null
146:LVR:0:POS:org.apache.commons.lang3.StringUtils@stripAll:634:0 |==> 1
147:LVR:0:NEG:org.apache.commons.lang3.StringUtils@stripAll:634:0 |==> -1
148:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@stripAll:634:i < strsLen |==> i != strsLen
149:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@stripAll:634:i < strsLen |==> i <= strsLen
150:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@stripAll:634:i < strsLen |==> false
151:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAll:635:newArr[i] = strip(strs[i], stripChars) |==> <NO-OP>
152:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAll:637:newArr |==> null
153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@stripAccents:659:input == null |==> false
154:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@stripAccents:662:"\\p{InCombiningDiacriticalMarks}+" |==> null
155:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@stripAccents:663:Normalizer.normalize(input, Normalizer.Form.NFD) |==> null
156:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@stripAccents:665:"" |==> null
157:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equals:692:cs1 == cs2 |==> false
158:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@equals:693:true |==> false
159:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equals:695:cs1 == null |==> false
160:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equals:695:cs2 == null |==> false
161:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:695:cs1 == null || cs2 == null |==> cs1 == null != (cs2 == null)
162:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:695:cs1 == null || cs2 == null |==> cs1 == null
163:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:695:cs1 == null || cs2 == null |==> cs2 == null
164:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:695:cs1 == null || cs2 == null |==> true
165:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@equals:696:false |==> true
166:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:698:cs1 instanceof String && cs2 instanceof String |==> cs1 instanceof String == cs2 instanceof String
167:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:698:cs1 instanceof String && cs2 instanceof String |==> false
168:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:698:cs1 instanceof String && cs2 instanceof String |==> cs1 instanceof String
169:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equals:698:cs1 instanceof String && cs2 instanceof String |==> cs2 instanceof String
170:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@equals:699:cs1.equals(cs2) |==> false
171:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@equals:701:false |==> true
172:LVR:0:POS:org.apache.commons.lang3.StringUtils@equals:701:0 |==> 1
173:LVR:0:NEG:org.apache.commons.lang3.StringUtils@equals:701:0 |==> -1
174:LVR:0:POS:org.apache.commons.lang3.StringUtils@equals:701:0 |==> 1
175:LVR:0:NEG:org.apache.commons.lang3.StringUtils@equals:701:0 |==> -1
176:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str1 == null |==> false
177:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str2 == null |==> false
178:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str1 == null || str2 == null |==> str1 == null != (str2 == null)
179:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str1 == null || str2 == null |==> str1 == null
180:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str1 == null || str2 == null |==> str2 == null
181:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:726:str1 == null || str2 == null |==> true
182:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:727:str1 == str2 |==> false
183:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:728:str1 == str2 |==> false
184:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:729:true |==> false
185:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:730:str1.length() != str2.length() |==> str1.length() < str2.length()
186:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:730:str1.length() != str2.length() |==> str1.length() > str2.length()
187:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@equalsIgnoreCase:730:str1.length() != str2.length() |==> true
188:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:731:false |==> true
189:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:733:true |==> false
190:LVR:0:POS:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:733:0 |==> 1
191:LVR:0:NEG:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:733:0 |==> -1
192:LVR:0:POS:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:733:0 |==> 1
193:LVR:0:NEG:org.apache.commons.lang3.StringUtils@equalsIgnoreCase:733:0 |==> -1
194:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@indexOf:760:isEmpty(seq) |==> false
195:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@indexOf:760:isEmpty(seq) |==> true
196:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:761:INDEX_NOT_FOUND |==> 0
197:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOf:763:0 |==> 1
198:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOf:763:0 |==> -1
199:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@indexOf:793:isEmpty(seq) |==> false
200:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@indexOf:793:isEmpty(seq) |==> true
201:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:794:INDEX_NOT_FOUND |==> 0
202:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:796:CharSequenceUtils.indexOf(seq, searchChar, startPos) |==> 0
203:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOf:824:seq == null |==> false
204:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOf:824:searchSeq == null |==> false
205:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:824:seq == null || searchSeq == null |==> seq == null != (searchSeq == null)
206:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:824:seq == null || searchSeq == null |==> seq == null
207:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:824:seq == null || searchSeq == null |==> searchSeq == null
208:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:824:seq == null || searchSeq == null |==> true
209:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:825:INDEX_NOT_FOUND |==> 0
210:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOf:827:0 |==> 1
211:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOf:827:0 |==> -1
212:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOf:864:seq == null |==> false
213:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOf:864:searchSeq == null |==> false
214:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:864:seq == null || searchSeq == null |==> seq == null != (searchSeq == null)
215:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:864:seq == null || searchSeq == null |==> seq == null
216:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:864:seq == null || searchSeq == null |==> searchSeq == null
217:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOf:864:seq == null || searchSeq == null |==> true
218:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:865:INDEX_NOT_FOUND |==> 0
219:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOf:867:CharSequenceUtils.indexOf(seq, searchSeq, startPos) |==> 0
220:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@ordinalIndexOf:905:false |==> true
221:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null |==> false
222:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:searchStr == null |==> false
223:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null |==> str == null != (searchStr == null)
224:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null |==> str == null
225:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null |==> searchStr == null
226:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null |==> true
227:LVR:0:POS:org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:0 |==> 1
228:LVR:0:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:0 |==> -1
229:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:ordinal <= 0 |==> ordinal < 0
230:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:ordinal <= 0 |==> ordinal == 0
231:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:ordinal <= 0 |==> true
232:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null || ordinal <= 0 |==> (str == null || searchStr == null) != ordinal <= 0
233:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null || ordinal <= 0 |==> str == null || searchStr == null
234:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null || ordinal <= 0 |==> ordinal <= 0
235:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@ordinalIndexOf:923:str == null || searchStr == null || ordinal <= 0 |==> true
236:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:924:INDEX_NOT_FOUND |==> 0
237:LVR:0:POS:org.apache.commons.lang3.StringUtils@ordinalIndexOf:926:0 |==> 1
238:LVR:0:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:926:0 |==> -1
239:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:926:searchStr.length() == 0 |==> searchStr.length() <= 0
240:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:926:searchStr.length() == 0 |==> searchStr.length() >= 0
241:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:926:searchStr.length() == 0 |==> false
242:LVR:0:POS:org.apache.commons.lang3.StringUtils@ordinalIndexOf:927:0 |==> 1
243:LVR:0:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:927:0 |==> -1
244:LVR:0:POS:org.apache.commons.lang3.StringUtils@ordinalIndexOf:929:0 |==> 1
245:LVR:0:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:929:0 |==> -1
246:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:930:lastIndex ? str.length() : INDEX_NOT_FOUND |==> 0
247:COR:lastIndex:TRUE:org.apache.commons.lang3.StringUtils@ordinalIndexOf:932:lastIndex |==> false
248:COR:lastIndex:FALSE:org.apache.commons.lang3.StringUtils@ordinalIndexOf:932:lastIndex |==> true
249:LVR:POS:0:org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:1 |==> 0
250:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:1 |==> -1
251:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:index - 1 |==> index % 1
252:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:index - 1 |==> index * 1
253:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:index - 1 |==> index + 1
254:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:index - 1 |==> index / 1
255:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:933:index = CharSequenceUtils.lastIndexOf(str, searchStr, index - 1) |==> <NO-OP>
256:LVR:POS:0:org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:1 |==> 0
257:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:1 |==> -1
258:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:index + 1 |==> index % 1
259:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:index + 1 |==> index * 1
260:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:index + 1 |==> index - 1
261:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:index + 1 |==> index / 1
262:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:935:index = CharSequenceUtils.indexOf(str, searchStr, index + 1) |==> <NO-OP>
263:LVR:0:POS:org.apache.commons.lang3.StringUtils@ordinalIndexOf:937:0 |==> 1
264:LVR:0:NEG:org.apache.commons.lang3.StringUtils@ordinalIndexOf:937:0 |==> -1
265:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:937:index < 0 |==> index != 0
266:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:937:index < 0 |==> index <= 0
267:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:937:index < 0 |==> false
268:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:938:index |==> 0
269:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:940:found++ |==> <NO-OP>
270:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:941:found < ordinal |==> found != ordinal
271:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:941:found < ordinal |==> found <= ordinal
272:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@ordinalIndexOf:941:found < ordinal |==> false
273:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@ordinalIndexOf:942:index |==> 0
274:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:971:0 |==> 1
275:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:971:0 |==> -1
276:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:str == null |==> false
277:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:searchStr == null |==> false
278:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:str == null || searchStr == null |==> str == null != (searchStr == null)
279:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:str == null || searchStr == null |==> str == null
280:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:str == null || searchStr == null |==> searchStr == null
281:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1007:str == null || searchStr == null |==> true
282:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1008:INDEX_NOT_FOUND |==> 0
283:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1010:0 |==> 1
284:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1010:0 |==> -1
285:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1010:startPos < 0 |==> startPos != 0
286:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1010:startPos < 0 |==> startPos <= 0
287:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1010:startPos < 0 |==> false
288:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1011:0 |==> 1
289:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1011:0 |==> -1
290:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1011:startPos = 0 |==> <NO-OP>
291:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() |==> str.length() % searchStr.length()
292:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() |==> str.length() * searchStr.length()
293:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() |==> str.length() + searchStr.length()
294:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() |==> str.length() / searchStr.length()
295:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:1 |==> 0
296:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:1 |==> -1
297:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() + 1 |==> (str.length() - searchStr.length()) % 1
298:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() + 1 |==> (str.length() - searchStr.length()) * 1
299:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() + 1 |==> str.length() - searchStr.length() - 1
300:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1013:str.length() - searchStr.length() + 1 |==> (str.length() - searchStr.length()) / 1
301:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1014:startPos > endLimit |==> startPos != endLimit
302:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1014:startPos > endLimit |==> startPos >= endLimit
303:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1014:startPos > endLimit |==> false
304:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1015:INDEX_NOT_FOUND |==> 0
305:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1017:0 |==> 1
306:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1017:0 |==> -1
307:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1017:searchStr.length() == 0 |==> searchStr.length() <= 0
308:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1017:searchStr.length() == 0 |==> searchStr.length() >= 0
309:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1017:searchStr.length() == 0 |==> false
310:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1018:startPos |==> 0
311:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1020:startPos |==> 0
312:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1020:i < endLimit |==> i != endLimit
313:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1020:i < endLimit |==> i <= endLimit
314:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1020:i < endLimit |==> false
315:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1021:true |==> false
316:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1021:0 |==> 1
317:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1021:0 |==> -1
318:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()):TRUE:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1021:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()) |==> false
319:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()):FALSE:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1021:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()) |==> true
320:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1022:i |==> 0
321:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfIgnoreCase:1025:INDEX_NOT_FOUND |==> 0
322:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@lastIndexOf:1051:isEmpty(seq) |==> false
323:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@lastIndexOf:1051:isEmpty(seq) |==> true
324:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1052:INDEX_NOT_FOUND |==> 0
325:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1054:CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) |==> 0
326:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@lastIndexOf:1089:isEmpty(seq) |==> false
327:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@lastIndexOf:1089:isEmpty(seq) |==> true
328:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1090:INDEX_NOT_FOUND |==> 0
329:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1092:CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) |==> 0
330:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:seq == null |==> false
331:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:searchSeq == null |==> false
332:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:seq == null || searchSeq == null |==> seq == null != (searchSeq == null)
333:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:seq == null || searchSeq == null |==> seq == null
334:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:seq == null || searchSeq == null |==> searchSeq == null
335:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1119:seq == null || searchSeq == null |==> true
336:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1120:INDEX_NOT_FOUND |==> 0
337:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1122:CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) |==> 0
338:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@lastOrdinalIndexOf:1160:true |==> false
339:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:seq == null |==> false
340:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:searchSeq == null |==> false
341:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:seq == null || searchSeq == null |==> seq == null != (searchSeq == null)
342:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:seq == null || searchSeq == null |==> seq == null
343:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:seq == null || searchSeq == null |==> searchSeq == null
344:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOf:1200:seq == null || searchSeq == null |==> true
345:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1201:INDEX_NOT_FOUND |==> 0
346:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOf:1203:CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) |==> 0
347:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:str == null |==> false
348:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:searchStr == null |==> false
349:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:str == null || searchStr == null |==> str == null != (searchStr == null)
350:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:str == null || searchStr == null |==> str == null
351:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:str == null || searchStr == null |==> searchStr == null
352:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1230:str == null || searchStr == null |==> true
353:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1231:INDEX_NOT_FOUND |==> 0
354:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1233:lastIndexOfIgnoreCase(str, searchStr, str.length()) |==> 0
355:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:str == null |==> false
356:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:searchStr == null |==> false
357:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:str == null || searchStr == null |==> str == null != (searchStr == null)
358:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:str == null || searchStr == null |==> str == null
359:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:str == null || searchStr == null |==> searchStr == null
360:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1269:str == null || searchStr == null |==> true
361:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1270:INDEX_NOT_FOUND |==> 0
362:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:str.length() - searchStr.length() |==> str.length() % searchStr.length()
363:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:str.length() - searchStr.length() |==> str.length() * searchStr.length()
364:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:str.length() - searchStr.length() |==> str.length() + searchStr.length()
365:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:str.length() - searchStr.length() |==> str.length() / searchStr.length()
366:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:startPos > str.length() - searchStr.length() |==> startPos != str.length() - searchStr.length()
367:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:startPos > str.length() - searchStr.length() |==> startPos >= str.length() - searchStr.length()
368:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1272:startPos > str.length() - searchStr.length() |==> false
369:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1273:str.length() - searchStr.length() |==> str.length() % searchStr.length()
370:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1273:str.length() - searchStr.length() |==> str.length() * searchStr.length()
371:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1273:str.length() - searchStr.length() |==> str.length() + searchStr.length()
372:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1273:str.length() - searchStr.length() |==> str.length() / searchStr.length()
373:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1273:startPos = str.length() - searchStr.length() |==> <NO-OP>
374:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1275:0 |==> 1
375:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1275:0 |==> -1
376:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1275:startPos < 0 |==> startPos != 0
377:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1275:startPos < 0 |==> startPos <= 0
378:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1275:startPos < 0 |==> false
379:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1276:INDEX_NOT_FOUND |==> 0
380:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1278:0 |==> 1
381:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1278:0 |==> -1
382:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1278:searchStr.length() == 0 |==> searchStr.length() <= 0
383:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1278:searchStr.length() == 0 |==> searchStr.length() >= 0
384:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1278:searchStr.length() == 0 |==> false
385:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1279:startPos |==> 0
386:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:startPos |==> 0
387:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:0 |==> 1
388:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:0 |==> -1
389:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:i >= 0 |==> i == 0
390:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:i >= 0 |==> i > 0
391:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1282:i >= 0 |==> true
392:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1283:true |==> false
393:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1283:0 |==> 1
394:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1283:0 |==> -1
395:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()):TRUE:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1283:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()) |==> false
396:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()):FALSE:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1283:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, searchStr.length()) |==> true
397:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1284:i |==> 0
398:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfIgnoreCase:1287:INDEX_NOT_FOUND |==> 0
399:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@contains:1313:isEmpty(seq) |==> false
400:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@contains:1313:isEmpty(seq) |==> true
401:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@contains:1314:false |==> true
402:LVR:0:POS:org.apache.commons.lang3.StringUtils@contains:1316:0 |==> 1
403:LVR:0:NEG:org.apache.commons.lang3.StringUtils@contains:1316:0 |==> -1
404:LVR:0:POS:org.apache.commons.lang3.StringUtils@contains:1316:0 |==> 1
405:LVR:0:NEG:org.apache.commons.lang3.StringUtils@contains:1316:0 |==> -1
406:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@contains:1316:CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0 |==> CharSequenceUtils.indexOf(seq, searchChar, 0) == 0
407:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@contains:1316:CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0 |==> CharSequenceUtils.indexOf(seq, searchChar, 0) > 0
408:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@contains:1316:CharSequenceUtils.indexOf(seq, searchChar, 0) >= 0 |==> true
409:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@contains:1342:seq == null |==> false
410:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@contains:1342:searchSeq == null |==> false
411:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@contains:1342:seq == null || searchSeq == null |==> seq == null != (searchSeq == null)
412:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@contains:1342:seq == null || searchSeq == null |==> seq == null
413:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@contains:1342:seq == null || searchSeq == null |==> searchSeq == null
414:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@contains:1342:seq == null || searchSeq == null |==> true
415:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@contains:1343:false |==> true
416:LVR:0:POS:org.apache.commons.lang3.StringUtils@contains:1345:0 |==> 1
417:LVR:0:NEG:org.apache.commons.lang3.StringUtils@contains:1345:0 |==> -1
418:LVR:0:POS:org.apache.commons.lang3.StringUtils@contains:1345:0 |==> 1
419:LVR:0:NEG:org.apache.commons.lang3.StringUtils@contains:1345:0 |==> -1
420:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@contains:1345:CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0 |==> CharSequenceUtils.indexOf(seq, searchSeq, 0) == 0
421:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@contains:1345:CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0 |==> CharSequenceUtils.indexOf(seq, searchSeq, 0) > 0
422:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@contains:1345:CharSequenceUtils.indexOf(seq, searchSeq, 0) >= 0 |==> true
423:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:str == null |==> false
424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:searchStr == null |==> false
425:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:str == null || searchStr == null |==> str == null != (searchStr == null)
426:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:str == null || searchStr == null |==> str == null
427:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:str == null || searchStr == null |==> searchStr == null
428:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1373:str == null || searchStr == null |==> true
429:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1374:false |==> true
430:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1376:searchStr.length() |==> 0
431:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1377:str.length() - len |==> str.length() % len
432:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1377:str.length() - len |==> str.length() * len
433:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1377:str.length() - len |==> str.length() + len
434:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1377:str.length() - len |==> str.length() / len
435:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1378:0 |==> 1
436:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1378:0 |==> -1
437:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1378:i <= max |==> i < max
438:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1378:i <= max |==> i == max
439:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@containsIgnoreCase:1378:i <= max |==> true
440:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1379:true |==> false
441:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1379:0 |==> 1
442:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1379:0 |==> -1
443:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len):TRUE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1379:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len) |==> false
444:COR:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len):FALSE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1379:CharSequenceUtils.regionMatches(str, true, i, searchStr, 0, len) |==> true
445:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1380:true |==> false
446:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsIgnoreCase:1383:false |==> true
447:COR:isEmpty(seq):TRUE:org.apache.commons.lang3.StringUtils@containsWhitespace:1396:isEmpty(seq) |==> false
448:COR:isEmpty(seq):FALSE:org.apache.commons.lang3.StringUtils@containsWhitespace:1396:isEmpty(seq) |==> true
449:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsWhitespace:1397:false |==> true
450:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsWhitespace:1399:seq.length() |==> 0
451:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsWhitespace:1400:0 |==> 1
452:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsWhitespace:1400:0 |==> -1
453:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsWhitespace:1400:i < strLen |==> i != strLen
454:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsWhitespace:1400:i < strLen |==> i <= strLen
455:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsWhitespace:1400:i < strLen |==> false
456:COR:Character.isWhitespace(seq.charAt(i)):TRUE:org.apache.commons.lang3.StringUtils@containsWhitespace:1401:Character.isWhitespace(seq.charAt(i)) |==> false
457:COR:Character.isWhitespace(seq.charAt(i)):FALSE:org.apache.commons.lang3.StringUtils@containsWhitespace:1401:Character.isWhitespace(seq.charAt(i)) |==> true
458:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsWhitespace:1402:true |==> false
459:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsWhitespace:1405:false |==> true
460:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1434:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs) != ArrayUtils.isEmpty(searchChars)
461:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1434:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs)
462:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1434:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> ArrayUtils.isEmpty(searchChars)
463:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1434:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> true
464:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1435:INDEX_NOT_FOUND |==> 0
465:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1437:cs.length() |==> 0
466:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAny:1438:1 |==> 0
467:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1438:1 |==> -1
468:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1438:csLen - 1 |==> csLen % 1
469:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1438:csLen - 1 |==> csLen * 1
470:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1438:csLen - 1 |==> csLen + 1
471:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1438:csLen - 1 |==> csLen / 1
472:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1439:searchChars.length |==> 0
473:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAny:1440:1 |==> 0
474:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1440:1 |==> -1
475:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1440:searchLen - 1 |==> searchLen % 1
476:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1440:searchLen - 1 |==> searchLen * 1
477:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1440:searchLen - 1 |==> searchLen + 1
478:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1440:searchLen - 1 |==> searchLen / 1
479:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAny:1441:0 |==> 1
480:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1441:0 |==> -1
481:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1441:i < csLen |==> i != csLen
482:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1441:i < csLen |==> i <= csLen
483:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1441:i < csLen |==> false
484:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1442:cs.charAt(i) |==> 0
485:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAny:1443:0 |==> 1
486:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1443:0 |==> -1
487:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1443:j < searchLen |==> j != searchLen
488:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1443:j < searchLen |==> j <= searchLen
489:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1443:j < searchLen |==> false
490:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1444:searchChars[j] == ch |==> searchChars[j] <= ch
491:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1444:searchChars[j] == ch |==> searchChars[j] >= ch
492:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1444:searchChars[j] == ch |==> false
493:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast |==> i != csLast
494:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast |==> i <= csLast
495:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast |==> false
496:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:j < searchLast |==> j != searchLast
497:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:j < searchLast |==> j <= searchLast
498:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1445:j < searchLast |==> false
499:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast |==> i < csLast == j < searchLast
500:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast |==> false
501:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast |==> i < csLast
502:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast |==> j < searchLast
503:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> (i < csLast && j < searchLast) == Character.isHighSurrogate(ch)
504:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> false
505:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> i < csLast && j < searchLast
506:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1445:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> Character.isHighSurrogate(ch)
507:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAny:1447:1 |==> 0
508:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1447:1 |==> -1
509:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:j + 1 |==> j % 1
510:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:j + 1 |==> j * 1
511:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:j + 1 |==> j - 1
512:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:j + 1 |==> j / 1
513:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAny:1447:1 |==> 0
514:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1447:1 |==> -1
515:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:i + 1 |==> i % 1
516:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:i + 1 |==> i * 1
517:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:i + 1 |==> i - 1
518:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:i + 1 |==> i / 1
519:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] <= cs.charAt(i + 1)
520:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] >= cs.charAt(i + 1)
521:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1447:searchChars[j + 1] == cs.charAt(i + 1) |==> false
522:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1448:i |==> 0
523:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1451:i |==> 0
524:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1456:INDEX_NOT_FOUND |==> 0
525:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1483:isEmpty(cs) || isEmpty(searchChars) |==> isEmpty(cs) != isEmpty(searchChars)
526:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1483:isEmpty(cs) || isEmpty(searchChars) |==> isEmpty(cs)
527:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1483:isEmpty(cs) || isEmpty(searchChars) |==> isEmpty(searchChars)
528:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1483:isEmpty(cs) || isEmpty(searchChars) |==> true
529:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1484:INDEX_NOT_FOUND |==> 0
530:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1486:indexOfAny(cs, searchChars.toCharArray()) |==> 0
531:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1516:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs) != ArrayUtils.isEmpty(searchChars)
532:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1516:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs)
533:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1516:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> ArrayUtils.isEmpty(searchChars)
534:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1516:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> true
535:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsAny:1517:false |==> true
536:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsAny:1519:cs.length() |==> 0
537:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsAny:1520:searchChars.length |==> 0
538:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsAny:1521:1 |==> 0
539:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsAny:1521:1 |==> -1
540:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsAny:1521:csLength - 1 |==> csLength % 1
541:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsAny:1521:csLength - 1 |==> csLength * 1
542:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@containsAny:1521:csLength - 1 |==> csLength + 1
543:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsAny:1521:csLength - 1 |==> csLength / 1
544:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsAny:1522:1 |==> 0
545:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsAny:1522:1 |==> -1
546:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsAny:1522:searchLength - 1 |==> searchLength % 1
547:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsAny:1522:searchLength - 1 |==> searchLength * 1
548:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@containsAny:1522:searchLength - 1 |==> searchLength + 1
549:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsAny:1522:searchLength - 1 |==> searchLength / 1
550:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsAny:1523:0 |==> 1
551:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsAny:1523:0 |==> -1
552:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1523:i < csLength |==> i != csLength
553:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1523:i < csLength |==> i <= csLength
554:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1523:i < csLength |==> false
555:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsAny:1524:cs.charAt(i) |==> 0
556:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsAny:1525:0 |==> 1
557:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsAny:1525:0 |==> -1
558:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1525:j < searchLength |==> j != searchLength
559:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1525:j < searchLength |==> j <= searchLength
560:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1525:j < searchLength |==> false
561:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1526:searchChars[j] == ch |==> searchChars[j] <= ch
562:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1526:searchChars[j] == ch |==> searchChars[j] >= ch
563:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1526:searchChars[j] == ch |==> false
564:COR:Character.isHighSurrogate(ch):TRUE:org.apache.commons.lang3.StringUtils@containsAny:1527:Character.isHighSurrogate(ch) |==> false
565:COR:Character.isHighSurrogate(ch):FALSE:org.apache.commons.lang3.StringUtils@containsAny:1527:Character.isHighSurrogate(ch) |==> true
566:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1528:j == searchLast |==> j <= searchLast
567:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1528:j == searchLast |==> j >= searchLast
568:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1528:j == searchLast |==> false
569:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsAny:1530:true |==> false
570:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast |==> i != csLast
571:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast |==> i <= csLast
572:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast |==> false
573:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsAny:1532:1 |==> 0
574:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsAny:1532:1 |==> -1
575:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:j + 1 |==> j % 1
576:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:j + 1 |==> j * 1
577:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:j + 1 |==> j - 1
578:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:j + 1 |==> j / 1
579:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsAny:1532:1 |==> 0
580:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsAny:1532:1 |==> -1
581:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i + 1 |==> i % 1
582:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i + 1 |==> i * 1
583:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i + 1 |==> i - 1
584:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:i + 1 |==> i / 1
585:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] <= cs.charAt(i + 1)
586:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] >= cs.charAt(i + 1)
587:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsAny:1532:searchChars[j + 1] == cs.charAt(i + 1) |==> false
588:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> i < csLast == (searchChars[j + 1] == cs.charAt(i + 1))
589:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> false
590:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> i < csLast
591:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsAny:1532:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] == cs.charAt(i + 1)
592:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsAny:1533:true |==> false
593:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsAny:1537:true |==> false
594:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsAny:1542:false |==> true
595:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsAny:1574:searchChars == null |==> false
596:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsAny:1575:false |==> true
597:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@containsAny:1577:containsAny(cs, CharSequenceUtils.toCharArray(searchChars)) |==> false
598:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1607:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs) != ArrayUtils.isEmpty(searchChars)
599:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1607:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> isEmpty(cs)
600:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1607:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> ArrayUtils.isEmpty(searchChars)
601:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1607:isEmpty(cs) || ArrayUtils.isEmpty(searchChars) |==> true
602:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1608:INDEX_NOT_FOUND |==> 0
603:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1610:cs.length() |==> 0
604:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:1 |==> 0
605:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:1 |==> -1
606:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:csLen - 1 |==> csLen % 1
607:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:csLen - 1 |==> csLen * 1
608:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:csLen - 1 |==> csLen + 1
609:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1611:csLen - 1 |==> csLen / 1
610:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1612:searchChars.length |==> 0
611:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:1 |==> 0
612:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:1 |==> -1
613:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:searchLen - 1 |==> searchLen % 1
614:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:searchLen - 1 |==> searchLen * 1
615:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:searchLen - 1 |==> searchLen + 1
616:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1613:searchLen - 1 |==> searchLen / 1
617:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1615:0 |==> 1
618:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1615:0 |==> -1
619:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1615:i < csLen |==> i != csLen
620:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1615:i < csLen |==> i <= csLen
621:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1615:i < csLen |==> false
622:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1616:cs.charAt(i) |==> 0
623:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1617:0 |==> 1
624:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1617:0 |==> -1
625:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1617:j < searchLen |==> j != searchLen
626:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1617:j < searchLen |==> j <= searchLen
627:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1617:j < searchLen |==> false
628:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1618:searchChars[j] == ch |==> searchChars[j] <= ch
629:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1618:searchChars[j] == ch |==> searchChars[j] >= ch
630:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1618:searchChars[j] == ch |==> false
631:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast |==> i != csLast
632:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast |==> i <= csLast
633:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast |==> false
634:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:j < searchLast |==> j != searchLast
635:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:j < searchLast |==> j <= searchLast
636:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:j < searchLast |==> false
637:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast |==> i < csLast == j < searchLast
638:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast |==> false
639:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast |==> i < csLast
640:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast |==> j < searchLast
641:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> (i < csLast && j < searchLast) == Character.isHighSurrogate(ch)
642:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> false
643:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> i < csLast && j < searchLast
644:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1619:i < csLast && j < searchLast && Character.isHighSurrogate(ch) |==> Character.isHighSurrogate(ch)
645:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:1 |==> 0
646:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:1 |==> -1
647:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:j + 1 |==> j % 1
648:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:j + 1 |==> j * 1
649:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:j + 1 |==> j - 1
650:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:j + 1 |==> j / 1
651:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:1 |==> 0
652:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:1 |==> -1
653:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:i + 1 |==> i % 1
654:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:i + 1 |==> i * 1
655:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:i + 1 |==> i - 1
656:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:i + 1 |==> i / 1
657:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] <= cs.charAt(i + 1)
658:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] >= cs.charAt(i + 1)
659:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1620:searchChars[j + 1] == cs.charAt(i + 1) |==> false
660:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1621:continue outer; |==> <NO-OP>
661:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1624:continue outer; |==> <NO-OP>
662:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1628:i |==> 0
663:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1630:INDEX_NOT_FOUND |==> 0
664:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1657:isEmpty(seq) || isEmpty(searchChars) |==> isEmpty(seq) != isEmpty(searchChars)
665:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1657:isEmpty(seq) || isEmpty(searchChars) |==> isEmpty(seq)
666:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1657:isEmpty(seq) || isEmpty(searchChars) |==> isEmpty(searchChars)
667:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1657:isEmpty(seq) || isEmpty(searchChars) |==> true
668:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1658:INDEX_NOT_FOUND |==> 0
669:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1660:seq.length() |==> 0
670:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1661:0 |==> 1
671:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1661:0 |==> -1
672:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1661:i < strLen |==> i != strLen
673:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1661:i < strLen |==> i <= strLen
674:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1661:i < strLen |==> false
675:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1662:seq.charAt(i) |==> 0
676:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:0 |==> 1
677:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:0 |==> -1
678:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:0 |==> 1
679:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:0 |==> -1
680:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0 |==> CharSequenceUtils.indexOf(searchChars, ch, 0) == 0
681:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0 |==> CharSequenceUtils.indexOf(searchChars, ch, 0) > 0
682:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1663:CharSequenceUtils.indexOf(searchChars, ch, 0) >= 0 |==> true
683:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:1 |==> 0
684:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:1 |==> -1
685:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 |==> i % 1
686:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 |==> i * 1
687:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 |==> i - 1
688:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 |==> i / 1
689:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen |==> i + 1 != strLen
690:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen |==> i + 1 <= strLen
691:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen |==> false
692:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen && Character.isHighSurrogate(ch) |==> i + 1 < strLen == Character.isHighSurrogate(ch)
693:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen && Character.isHighSurrogate(ch) |==> false
694:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen && Character.isHighSurrogate(ch) |==> i + 1 < strLen
695:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1664:i + 1 < strLen && Character.isHighSurrogate(ch) |==> Character.isHighSurrogate(ch)
696:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:1 |==> 0
697:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:1 |==> -1
698:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:i + 1 |==> i % 1
699:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:i + 1 |==> i * 1
700:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:i + 1 |==> i - 1
701:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1665:i + 1 |==> i / 1
702:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:0 |==> 1
703:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:0 |==> -1
704:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:0 |==> 1
705:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:0 |==> -1
706:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> CharSequenceUtils.indexOf(searchChars, ch2, 0) != 0
707:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> CharSequenceUtils.indexOf(searchChars, ch2, 0) <= 0
708:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> false
709:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> chFound == CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0
710:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> false
711:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> chFound
712:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAnyBut:1666:chFound && CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0 |==> CharSequenceUtils.indexOf(searchChars, ch2, 0) < 0
713:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1667:i |==> 0
714:COR:chFound:TRUE:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1670:chFound |==> false
715:COR:chFound:FALSE:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1670:chFound |==> true
716:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1671:i |==> 0
717:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAnyBut:1675:INDEX_NOT_FOUND |==> 0
718:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsOnly:1704:valid == null |==> false
719:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsOnly:1704:cs == null |==> false
720:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1704:valid == null || cs == null |==> valid == null != (cs == null)
721:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1704:valid == null || cs == null |==> valid == null
722:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1704:valid == null || cs == null |==> cs == null
723:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1704:valid == null || cs == null |==> true
724:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsOnly:1705:false |==> true
725:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsOnly:1707:0 |==> 1
726:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsOnly:1707:0 |==> -1
727:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1707:cs.length() == 0 |==> cs.length() <= 0
728:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1707:cs.length() == 0 |==> cs.length() >= 0
729:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1707:cs.length() == 0 |==> false
730:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsOnly:1708:true |==> false
731:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsOnly:1710:0 |==> 1
732:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsOnly:1710:0 |==> -1
733:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1710:valid.length == 0 |==> valid.length <= 0
734:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1710:valid.length == 0 |==> valid.length >= 0
735:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1710:valid.length == 0 |==> false
736:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsOnly:1711:false |==> true
737:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1713:indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND |==> indexOfAnyBut(cs, valid) <= INDEX_NOT_FOUND
738:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1713:indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND |==> indexOfAnyBut(cs, valid) >= INDEX_NOT_FOUND
739:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsOnly:1713:indexOfAnyBut(cs, valid) == INDEX_NOT_FOUND |==> false
740:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsOnly:1740:cs == null |==> false
741:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsOnly:1740:validChars == null |==> false
742:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1740:cs == null || validChars == null |==> cs == null != (validChars == null)
743:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1740:cs == null || validChars == null |==> cs == null
744:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1740:cs == null || validChars == null |==> validChars == null
745:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsOnly:1740:cs == null || validChars == null |==> true
746:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsOnly:1741:false |==> true
747:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@containsOnly:1743:containsOnly(cs, validChars.toCharArray()) |==> false
748:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsNone:1772:cs == null |==> false
749:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsNone:1772:searchChars == null |==> false
750:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1772:cs == null || searchChars == null |==> cs == null != (searchChars == null)
751:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1772:cs == null || searchChars == null |==> cs == null
752:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1772:cs == null || searchChars == null |==> searchChars == null
753:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1772:cs == null || searchChars == null |==> true
754:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsNone:1773:true |==> false
755:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsNone:1775:cs.length() |==> 0
756:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsNone:1776:1 |==> 0
757:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsNone:1776:1 |==> -1
758:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsNone:1776:csLen - 1 |==> csLen % 1
759:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsNone:1776:csLen - 1 |==> csLen * 1
760:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@containsNone:1776:csLen - 1 |==> csLen + 1
761:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsNone:1776:csLen - 1 |==> csLen / 1
762:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsNone:1777:searchChars.length |==> 0
763:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsNone:1778:1 |==> 0
764:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsNone:1778:1 |==> -1
765:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsNone:1778:searchLen - 1 |==> searchLen % 1
766:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsNone:1778:searchLen - 1 |==> searchLen * 1
767:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@containsNone:1778:searchLen - 1 |==> searchLen + 1
768:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsNone:1778:searchLen - 1 |==> searchLen / 1
769:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsNone:1779:0 |==> 1
770:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsNone:1779:0 |==> -1
771:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1779:i < csLen |==> i != csLen
772:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1779:i < csLen |==> i <= csLen
773:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1779:i < csLen |==> false
774:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@containsNone:1780:cs.charAt(i) |==> 0
775:LVR:0:POS:org.apache.commons.lang3.StringUtils@containsNone:1781:0 |==> 1
776:LVR:0:NEG:org.apache.commons.lang3.StringUtils@containsNone:1781:0 |==> -1
777:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1781:j < searchLen |==> j != searchLen
778:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1781:j < searchLen |==> j <= searchLen
779:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1781:j < searchLen |==> false
780:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1782:searchChars[j] == ch |==> searchChars[j] <= ch
781:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1782:searchChars[j] == ch |==> searchChars[j] >= ch
782:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1782:searchChars[j] == ch |==> false
783:COR:Character.isHighSurrogate(ch):TRUE:org.apache.commons.lang3.StringUtils@containsNone:1783:Character.isHighSurrogate(ch) |==> false
784:COR:Character.isHighSurrogate(ch):FALSE:org.apache.commons.lang3.StringUtils@containsNone:1783:Character.isHighSurrogate(ch) |==> true
785:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1784:j == searchLast |==> j <= searchLast
786:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1784:j == searchLast |==> j >= searchLast
787:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1784:j == searchLast |==> false
788:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsNone:1786:false |==> true
789:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast |==> i != csLast
790:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast |==> i <= csLast
791:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast |==> false
792:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsNone:1788:1 |==> 0
793:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsNone:1788:1 |==> -1
794:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:j + 1 |==> j % 1
795:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:j + 1 |==> j * 1
796:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:j + 1 |==> j - 1
797:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:j + 1 |==> j / 1
798:LVR:POS:0:org.apache.commons.lang3.StringUtils@containsNone:1788:1 |==> 0
799:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@containsNone:1788:1 |==> -1
800:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i + 1 |==> i % 1
801:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i + 1 |==> i * 1
802:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i + 1 |==> i - 1
803:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:i + 1 |==> i / 1
804:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] <= cs.charAt(i + 1)
805:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] >= cs.charAt(i + 1)
806:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@containsNone:1788:searchChars[j + 1] == cs.charAt(i + 1) |==> false
807:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> i < csLast == (searchChars[j + 1] == cs.charAt(i + 1))
808:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> false
809:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> i < csLast
810:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1788:i < csLast && searchChars[j + 1] == cs.charAt(i + 1) |==> searchChars[j + 1] == cs.charAt(i + 1)
811:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsNone:1789:false |==> true
812:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@containsNone:1793:false |==> true
813:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsNone:1798:true |==> false
814:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsNone:1825:cs == null |==> false
815:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@containsNone:1825:invalidChars == null |==> false
816:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1825:cs == null || invalidChars == null |==> cs == null != (invalidChars == null)
817:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1825:cs == null || invalidChars == null |==> cs == null
818:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1825:cs == null || invalidChars == null |==> invalidChars == null
819:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@containsNone:1825:cs == null || invalidChars == null |==> true
820:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@containsNone:1826:true |==> false
821:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@containsNone:1828:containsNone(cs, invalidChars.toCharArray()) |==> false
822:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfAny:1861:str == null |==> false
823:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfAny:1861:searchStrs == null |==> false
824:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1861:str == null || searchStrs == null |==> str == null != (searchStrs == null)
825:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1861:str == null || searchStrs == null |==> str == null
826:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1861:str == null || searchStrs == null |==> searchStrs == null
827:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfAny:1861:str == null || searchStrs == null |==> true
828:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1862:INDEX_NOT_FOUND |==> 0
829:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1864:searchStrs.length |==> 0
830:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1867:Integer.MAX_VALUE |==> 0
831:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAny:1869:0 |==> 1
832:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1869:0 |==> -1
833:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAny:1870:0 |==> 1
834:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1870:0 |==> -1
835:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1870:i < sz |==> i != sz
836:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1870:i < sz |==> i <= sz
837:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1870:i < sz |==> false
838:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1871:searchStrs[i] |==> null
839:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfAny:1872:search == null |==> false
840:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1873:continue; |==> <NO-OP>
841:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfAny:1875:0 |==> 1
842:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfAny:1875:0 |==> -1
843:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1875:tmp = CharSequenceUtils.indexOf(str, search, 0) |==> <NO-OP>
844:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1876:tmp == INDEX_NOT_FOUND |==> tmp <= INDEX_NOT_FOUND
845:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1876:tmp == INDEX_NOT_FOUND |==> tmp >= INDEX_NOT_FOUND
846:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1876:tmp == INDEX_NOT_FOUND |==> false
847:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1877:continue; |==> <NO-OP>
848:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1880:tmp < ret |==> tmp != ret
849:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1880:tmp < ret |==> tmp <= ret
850:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1880:tmp < ret |==> false
851:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfAny:1881:ret = tmp |==> <NO-OP>
852:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1885:ret == Integer.MAX_VALUE |==> ret <= Integer.MAX_VALUE
853:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1885:ret == Integer.MAX_VALUE |==> ret >= Integer.MAX_VALUE
854:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfAny:1885:ret == Integer.MAX_VALUE |==> false
855:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:str == null |==> false
856:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:searchStrs == null |==> false
857:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:str == null || searchStrs == null |==> str == null != (searchStrs == null)
858:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:str == null || searchStrs == null |==> str == null
859:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:str == null || searchStrs == null |==> searchStrs == null
860:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1915:str == null || searchStrs == null |==> true
861:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1916:INDEX_NOT_FOUND |==> 0
862:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1918:searchStrs.length |==> 0
863:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1919:INDEX_NOT_FOUND |==> 0
864:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1920:0 |==> 1
865:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1920:0 |==> -1
866:LVR:0:POS:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1921:0 |==> 1
867:LVR:0:NEG:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1921:0 |==> -1
868:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1921:i < sz |==> i != sz
869:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1921:i < sz |==> i <= sz
870:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1921:i < sz |==> false
871:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1922:searchStrs[i] |==> null
872:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1923:search == null |==> false
873:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1924:continue; |==> <NO-OP>
874:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1926:tmp = CharSequenceUtils.lastIndexOf(str, search, str.length()) |==> <NO-OP>
875:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1927:tmp > ret |==> tmp != ret
876:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1927:tmp > ret |==> tmp >= ret
877:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@lastIndexOfAny:1927:tmp > ret |==> false
878:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1928:ret = tmp |==> <NO-OP>
879:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lastIndexOfAny:1931:ret |==> 0
880:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substring:1961:str == null |==> false
881:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:1966:0 |==> 1
882:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:1966:0 |==> -1
883:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:1966:start < 0 |==> start != 0
884:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:1966:start < 0 |==> start <= 0
885:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:1966:start < 0 |==> false
886:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substring:1967:str.length() + start |==> str.length() % start
887:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substring:1967:str.length() + start |==> str.length() * start
888:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substring:1967:str.length() + start |==> str.length() - start
889:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substring:1967:str.length() + start |==> str.length() / start
890:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:1967:start = str.length() + start |==> <NO-OP>
891:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:1970:0 |==> 1
892:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:1970:0 |==> -1
893:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:1970:start < 0 |==> start != 0
894:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:1970:start < 0 |==> start <= 0
895:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:1970:start < 0 |==> false
896:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:1971:0 |==> 1
897:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:1971:0 |==> -1
898:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:1971:start = 0 |==> <NO-OP>
899:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:1973:start > str.length() |==> start != str.length()
900:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substring:1973:start > str.length() |==> start >= str.length()
901:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:1973:start > str.length() |==> false
902:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:1974:EMPTY |==> null
903:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:1977:str.substring(start) |==> null
904:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substring:2016:str == null |==> false
905:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2021:0 |==> 1
906:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2021:0 |==> -1
907:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2021:end < 0 |==> end != 0
908:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:2021:end < 0 |==> end <= 0
909:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2021:end < 0 |==> false
910:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substring:2022:str.length() + end |==> str.length() % end
911:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substring:2022:str.length() + end |==> str.length() * end
912:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substring:2022:str.length() + end |==> str.length() - end
913:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substring:2022:str.length() + end |==> str.length() / end
914:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2022:end = str.length() + end |==> <NO-OP>
915:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2024:0 |==> 1
916:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2024:0 |==> -1
917:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2024:start < 0 |==> start != 0
918:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:2024:start < 0 |==> start <= 0
919:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2024:start < 0 |==> false
920:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substring:2025:str.length() + start |==> str.length() % start
921:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substring:2025:str.length() + start |==> str.length() * start
922:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substring:2025:str.length() + start |==> str.length() - start
923:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substring:2025:str.length() + start |==> str.length() / start
924:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2025:start = str.length() + start |==> <NO-OP>
925:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2029:end > str.length() |==> end != str.length()
926:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substring:2029:end > str.length() |==> end >= str.length()
927:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2029:end > str.length() |==> false
928:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2030:end = str.length() |==> <NO-OP>
929:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2034:start > end |==> start != end
930:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substring:2034:start > end |==> start >= end
931:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2034:start > end |==> false
932:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2035:EMPTY |==> null
933:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2038:0 |==> 1
934:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2038:0 |==> -1
935:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2038:start < 0 |==> start != 0
936:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:2038:start < 0 |==> start <= 0
937:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2038:start < 0 |==> false
938:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2039:0 |==> 1
939:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2039:0 |==> -1
940:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2039:start = 0 |==> <NO-OP>
941:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2041:0 |==> 1
942:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2041:0 |==> -1
943:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substring:2041:end < 0 |==> end != 0
944:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substring:2041:end < 0 |==> end <= 0
945:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substring:2041:end < 0 |==> false
946:LVR:0:POS:org.apache.commons.lang3.StringUtils@substring:2042:0 |==> 1
947:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substring:2042:0 |==> -1
948:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2042:end = 0 |==> <NO-OP>
949:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substring:2045:str.substring(start, end) |==> null
950:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@left:2071:str == null |==> false
951:LVR:0:POS:org.apache.commons.lang3.StringUtils@left:2074:0 |==> 1
952:LVR:0:NEG:org.apache.commons.lang3.StringUtils@left:2074:0 |==> -1
953:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@left:2074:len < 0 |==> len != 0
954:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@left:2074:len < 0 |==> len <= 0
955:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@left:2074:len < 0 |==> false
956:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@left:2075:EMPTY |==> null
957:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@left:2077:str.length() <= len |==> str.length() < len
958:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@left:2077:str.length() <= len |==> str.length() == len
959:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@left:2077:str.length() <= len |==> true
960:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@left:2078:str |==> null
961:LVR:0:POS:org.apache.commons.lang3.StringUtils@left:2080:0 |==> 1
962:LVR:0:NEG:org.apache.commons.lang3.StringUtils@left:2080:0 |==> -1
963:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@right:2104:str == null |==> false
964:LVR:0:POS:org.apache.commons.lang3.StringUtils@right:2107:0 |==> 1
965:LVR:0:NEG:org.apache.commons.lang3.StringUtils@right:2107:0 |==> -1
966:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@right:2107:len < 0 |==> len != 0
967:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@right:2107:len < 0 |==> len <= 0
968:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@right:2107:len < 0 |==> false
969:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@right:2108:EMPTY |==> null
970:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@right:2110:str.length() <= len |==> str.length() < len
971:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@right:2110:str.length() <= len |==> str.length() == len
972:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@right:2110:str.length() <= len |==> true
973:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@right:2111:str |==> null
974:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@right:2113:str.length() - len |==> str.length() % len
975:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@right:2113:str.length() - len |==> str.length() * len
976:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@right:2113:str.length() - len |==> str.length() + len
977:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@right:2113:str.length() - len |==> str.length() / len
978:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@mid:2142:str == null |==> false
979:LVR:0:POS:org.apache.commons.lang3.StringUtils@mid:2145:0 |==> 1
980:LVR:0:NEG:org.apache.commons.lang3.StringUtils@mid:2145:0 |==> -1
981:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 |==> len != 0
982:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 |==> len <= 0
983:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 |==> false
984:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@mid:2145:pos > str.length() |==> pos != str.length()
985:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@mid:2145:pos > str.length() |==> pos >= str.length()
986:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@mid:2145:pos > str.length() |==> false
987:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 || pos > str.length() |==> len < 0 != pos > str.length()
988:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 || pos > str.length() |==> len < 0
989:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 || pos > str.length() |==> pos > str.length()
990:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@mid:2145:len < 0 || pos > str.length() |==> true
991:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@mid:2146:EMPTY |==> null
992:LVR:0:POS:org.apache.commons.lang3.StringUtils@mid:2148:0 |==> 1
993:LVR:0:NEG:org.apache.commons.lang3.StringUtils@mid:2148:0 |==> -1
994:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@mid:2148:pos < 0 |==> pos != 0
995:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@mid:2148:pos < 0 |==> pos <= 0
996:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@mid:2148:pos < 0 |==> false
997:LVR:0:POS:org.apache.commons.lang3.StringUtils@mid:2149:0 |==> 1
998:LVR:0:NEG:org.apache.commons.lang3.StringUtils@mid:2149:0 |==> -1
999:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@mid:2149:pos = 0 |==> <NO-OP>
1000:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@mid:2151:pos + len |==> pos % len
1001:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@mid:2151:pos + len |==> pos * len
1002:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@mid:2151:pos + len |==> pos - len
1003:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@mid:2151:pos + len |==> pos / len
1004:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@mid:2151:str.length() <= pos + len |==> str.length() < pos + len
1005:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@mid:2151:str.length() <= pos + len |==> str.length() == pos + len
1006:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@mid:2151:str.length() <= pos + len |==> true
1007:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@mid:2152:str.substring(pos) |==> null
1008:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@mid:2154:pos + len |==> pos % len
1009:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@mid:2154:pos + len |==> pos * len
1010:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@mid:2154:pos + len |==> pos - len
1011:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@mid:2154:pos + len |==> pos / len
1012:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringBefore:2187:separator == null |==> false
1013:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBefore:2187:isEmpty(str) || separator == null |==> isEmpty(str) != (separator == null)
1014:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBefore:2187:isEmpty(str) || separator == null |==> isEmpty(str)
1015:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBefore:2187:isEmpty(str) || separator == null |==> separator == null
1016:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBefore:2187:isEmpty(str) || separator == null |==> true
1017:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBefore:2188:str |==> null
1018:COR:separator.isEmpty():TRUE:org.apache.commons.lang3.StringUtils@substringBefore:2190:separator.isEmpty() |==> false
1019:COR:separator.isEmpty():FALSE:org.apache.commons.lang3.StringUtils@substringBefore:2190:separator.isEmpty() |==> true
1020:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBefore:2191:EMPTY |==> null
1021:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBefore:2193:str.indexOf(separator) |==> 0
1022:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringBefore:2194:pos == INDEX_NOT_FOUND |==> pos <= INDEX_NOT_FOUND
1023:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringBefore:2194:pos == INDEX_NOT_FOUND |==> pos >= INDEX_NOT_FOUND
1024:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringBefore:2194:pos == INDEX_NOT_FOUND |==> false
1025:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBefore:2195:str |==> null
1026:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringBefore:2197:0 |==> 1
1027:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringBefore:2197:0 |==> -1
1028:COR:isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@substringAfter:2229:isEmpty(str) |==> false
1029:COR:isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@substringAfter:2229:isEmpty(str) |==> true
1030:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfter:2230:str |==> null
1031:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringAfter:2232:separator == null |==> false
1032:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfter:2233:EMPTY |==> null
1033:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfter:2235:str.indexOf(separator) |==> 0
1034:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2236:pos == INDEX_NOT_FOUND |==> pos <= INDEX_NOT_FOUND
1035:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2236:pos == INDEX_NOT_FOUND |==> pos >= INDEX_NOT_FOUND
1036:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2236:pos == INDEX_NOT_FOUND |==> false
1037:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfter:2237:EMPTY |==> null
1038:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2239:pos + separator.length() |==> pos % separator.length()
1039:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2239:pos + separator.length() |==> pos * separator.length()
1040:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2239:pos + separator.length() |==> pos - separator.length()
1041:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringAfter:2239:pos + separator.length() |==> pos / separator.length()
1042:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBeforeLast:2270:isEmpty(str) || isEmpty(separator) |==> isEmpty(str) != isEmpty(separator)
1043:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBeforeLast:2270:isEmpty(str) || isEmpty(separator) |==> isEmpty(str)
1044:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBeforeLast:2270:isEmpty(str) || isEmpty(separator) |==> isEmpty(separator)
1045:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBeforeLast:2270:isEmpty(str) || isEmpty(separator) |==> true
1046:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBeforeLast:2271:str |==> null
1047:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBeforeLast:2273:str.lastIndexOf(separator) |==> 0
1048:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringBeforeLast:2274:pos == INDEX_NOT_FOUND |==> pos <= INDEX_NOT_FOUND
1049:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringBeforeLast:2274:pos == INDEX_NOT_FOUND |==> pos >= INDEX_NOT_FOUND
1050:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringBeforeLast:2274:pos == INDEX_NOT_FOUND |==> false
1051:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBeforeLast:2275:str |==> null
1052:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringBeforeLast:2277:0 |==> 1
1053:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringBeforeLast:2277:0 |==> -1
1054:COR:isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@substringAfterLast:2310:isEmpty(str) |==> false
1055:COR:isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@substringAfterLast:2310:isEmpty(str) |==> true
1056:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfterLast:2311:str |==> null
1057:COR:isEmpty(separator):TRUE:org.apache.commons.lang3.StringUtils@substringAfterLast:2313:isEmpty(separator) |==> false
1058:COR:isEmpty(separator):FALSE:org.apache.commons.lang3.StringUtils@substringAfterLast:2313:isEmpty(separator) |==> true
1059:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfterLast:2314:EMPTY |==> null
1060:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfterLast:2316:str.lastIndexOf(separator) |==> 0
1061:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND |==> pos <= INDEX_NOT_FOUND
1062:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND |==> pos >= INDEX_NOT_FOUND
1063:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND |==> false
1064:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:str.length() - separator.length() |==> str.length() % separator.length()
1065:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:str.length() - separator.length() |==> str.length() * separator.length()
1066:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:str.length() - separator.length() |==> str.length() + separator.length()
1067:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:str.length() - separator.length() |==> str.length() / separator.length()
1068:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == str.length() - separator.length() |==> pos <= str.length() - separator.length()
1069:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == str.length() - separator.length() |==> pos >= str.length() - separator.length()
1070:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == str.length() - separator.length() |==> false
1071:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND || pos == str.length() - separator.length() |==> pos == INDEX_NOT_FOUND != (pos == str.length() - separator.length())
1072:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND || pos == str.length() - separator.length() |==> pos == INDEX_NOT_FOUND
1073:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND || pos == str.length() - separator.length() |==> pos == str.length() - separator.length()
1074:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringAfterLast:2317:pos == INDEX_NOT_FOUND || pos == str.length() - separator.length() |==> true
1075:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringAfterLast:2318:EMPTY |==> null
1076:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2320:pos + separator.length() |==> pos % separator.length()
1077:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2320:pos + separator.length() |==> pos * separator.length()
1078:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2320:pos + separator.length() |==> pos - separator.length()
1079:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringAfterLast:2320:pos + separator.length() |==> pos / separator.length()
1080:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBetween:2347:substringBetween(str, tag, tag) |==> null
1081:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null |==> false
1082:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringBetween:2378:open == null |==> false
1083:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null |==> str == null != (open == null)
1084:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null |==> str == null
1085:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null |==> open == null
1086:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null |==> true
1087:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringBetween:2378:close == null |==> false
1088:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null || close == null |==> (str == null || open == null) != (close == null)
1089:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null || close == null |==> str == null || open == null
1090:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null || close == null |==> close == null
1091:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringBetween:2378:str == null || open == null || close == null |==> true
1092:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringBetween:2381:str.indexOf(open) |==> 0
1093:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2382:start != INDEX_NOT_FOUND |==> start < INDEX_NOT_FOUND
1094:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2382:start != INDEX_NOT_FOUND |==> start > INDEX_NOT_FOUND
1095:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2382:start != INDEX_NOT_FOUND |==> true
1096:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2383:start + open.length() |==> start % open.length()
1097:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2383:start + open.length() |==> start * open.length()
1098:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2383:start + open.length() |==> start - open.length()
1099:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2383:start + open.length() |==> start / open.length()
1100:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2384:end != INDEX_NOT_FOUND |==> end < INDEX_NOT_FOUND
1101:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2384:end != INDEX_NOT_FOUND |==> end > INDEX_NOT_FOUND
1102:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2384:end != INDEX_NOT_FOUND |==> true
1103:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2385:start + open.length() |==> start % open.length()
1104:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2385:start + open.length() |==> start * open.length()
1105:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2385:start + open.length() |==> start - open.length()
1106:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringBetween:2385:start + open.length() |==> start / open.length()
1107:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null |==> false
1108:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) |==> str == null != isEmpty(open)
1109:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) |==> str == null
1110:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) |==> isEmpty(open)
1111:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) |==> true
1112:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) || isEmpty(close) |==> (str == null || isEmpty(open)) != isEmpty(close)
1113:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) || isEmpty(close) |==> str == null || isEmpty(open)
1114:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) || isEmpty(close) |==> isEmpty(close)
1115:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@substringsBetween:2414:str == null || isEmpty(open) || isEmpty(close) |==> true
1116:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2417:str.length() |==> 0
1117:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringsBetween:2418:0 |==> 1
1118:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringsBetween:2418:0 |==> -1
1119:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2418:strLen == 0 |==> strLen <= 0
1120:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2418:strLen == 0 |==> strLen >= 0
1121:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2418:strLen == 0 |==> false
1122:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2419:ArrayUtils.EMPTY_STRING_ARRAY |==> null
1123:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2421:close.length() |==> 0
1124:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2422:open.length() |==> 0
1125:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2423:new ArrayList<String>() |==> null
1126:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringsBetween:2424:0 |==> 1
1127:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringsBetween:2424:0 |==> -1
1128:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:strLen - closeLen |==> strLen % closeLen
1129:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:strLen - closeLen |==> strLen * closeLen
1130:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:strLen - closeLen |==> strLen + closeLen
1131:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:strLen - closeLen |==> strLen / closeLen
1132:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:pos < strLen - closeLen |==> pos != strLen - closeLen
1133:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:pos < strLen - closeLen |==> pos <= strLen - closeLen
1134:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2425:pos < strLen - closeLen |==> false
1135:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2426:str.indexOf(open, pos) |==> 0
1136:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringsBetween:2427:0 |==> 1
1137:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringsBetween:2427:0 |==> -1
1138:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2427:start < 0 |==> start != 0
1139:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2427:start < 0 |==> start <= 0
1140:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2427:start < 0 |==> false
1141:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2428:break; |==> <NO-OP>
1142:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2430:start += openLen |==> <NO-OP>
1143:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2431:str.indexOf(close, start) |==> 0
1144:LVR:0:POS:org.apache.commons.lang3.StringUtils@substringsBetween:2432:0 |==> 1
1145:LVR:0:NEG:org.apache.commons.lang3.StringUtils@substringsBetween:2432:0 |==> -1
1146:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2432:end < 0 |==> end != 0
1147:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2432:end < 0 |==> end <= 0
1148:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2432:end < 0 |==> false
1149:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2433:break; |==> <NO-OP>
1150:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2435:list.add(str.substring(start, end)) |==> <NO-OP>
1151:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2436:end + closeLen |==> end % closeLen
1152:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2436:end + closeLen |==> end * closeLen
1153:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2436:end + closeLen |==> end - closeLen
1154:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@substringsBetween:2436:end + closeLen |==> end / closeLen
1155:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2436:pos = end + closeLen |==> <NO-OP>
1156:COR:list.isEmpty():TRUE:org.apache.commons.lang3.StringUtils@substringsBetween:2438:list.isEmpty() |==> false
1157:COR:list.isEmpty():FALSE:org.apache.commons.lang3.StringUtils@substringsBetween:2438:list.isEmpty() |==> true
1158:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@substringsBetween:2441:list.toArray(new String[list.size()]) |==> null
1159:LVR:NEG:0:org.apache.commons.lang3.StringUtils@split:2472:-1 |==> 0
1160:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@split:2472:-1 |==> 1
1161:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@split:2500:false |==> true
1162:LVR:NEG:0:org.apache.commons.lang3.StringUtils@split:2529:-1 |==> 0
1163:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@split:2529:-1 |==> 1
1164:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@split:2529:false |==> true
1165:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@split:2563:false |==> true
1166:LVR:NEG:0:org.apache.commons.lang3.StringUtils@splitByWholeSeparator:2590:-1 |==> 0
1167:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparator:2590:-1 |==> 1
1168:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitByWholeSeparator:2590:false |==> true
1169:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitByWholeSeparator:2621:false |==> true
1170:LVR:NEG:0:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorPreserveAllTokens:2650:-1 |==> 0
1171:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorPreserveAllTokens:2650:-1 |==> 1
1172:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorPreserveAllTokens:2650:true |==> false
1173:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorPreserveAllTokens:2683:true |==> false
1174:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2702:str == null |==> false
1175:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2706:str.length() |==> 0
1176:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2708:0 |==> 1
1177:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2708:0 |==> -1
1178:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2708:len == 0 |==> len <= 0
1179:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2708:len == 0 |==> len >= 0
1180:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2708:len == 0 |==> false
1181:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2709:ArrayUtils.EMPTY_STRING_ARRAY |==> null
1182:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2712:separator == null |==> false
1183:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2712:separator == null || EMPTY.equals(separator) |==> separator == null != EMPTY.equals(separator)
1184:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2712:separator == null || EMPTY.equals(separator) |==> separator == null
1185:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2712:separator == null || EMPTY.equals(separator) |==> EMPTY.equals(separator)
1186:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2712:separator == null || EMPTY.equals(separator) |==> true
1187:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2714:splitWorker(str, null, max, preserveAllTokens) |==> null
1188:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2717:separator.length() |==> 0
1189:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2719:new ArrayList<String>() |==> null
1190:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2720:0 |==> 1
1191:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2720:0 |==> -1
1192:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2721:0 |==> 1
1193:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2721:0 |==> -1
1194:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2722:0 |==> 1
1195:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2722:0 |==> -1
1196:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2723:end < len |==> end != len
1197:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2723:end < len |==> end <= len
1198:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2723:end < len |==> false
1199:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2724:end = str.indexOf(separator, beg) |==> <NO-OP>
1200:LVR:NEG:0:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2726:-1 |==> 0
1201:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2726:-1 |==> 1
1202:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2726:end > -1 |==> end != -1
1203:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2726:end > -1 |==> end >= -1
1204:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2726:end > -1 |==> false
1205:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2727:end > beg |==> end != beg
1206:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2727:end > beg |==> end >= beg
1207:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2727:end > beg |==> false
1208:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2728:1 |==> 0
1209:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2728:1 |==> -1
1210:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2728:numberOfSubstrings += 1 |==> <NO-OP>
1211:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2730:numberOfSubstrings == max |==> numberOfSubstrings <= max
1212:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2730:numberOfSubstrings == max |==> numberOfSubstrings >= max
1213:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2730:numberOfSubstrings == max |==> false
1214:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2731:end = len |==> <NO-OP>
1215:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2732:substrings.add(str.substring(beg)) |==> <NO-OP>
1216:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2736:substrings.add(str.substring(beg, end)) |==> <NO-OP>
1217:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2741:end + separatorLength |==> end % separatorLength
1218:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2741:end + separatorLength |==> end * separatorLength
1219:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2741:end + separatorLength |==> end - separatorLength
1220:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2741:end + separatorLength |==> end / separatorLength
1221:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2741:beg = end + separatorLength |==> <NO-OP>
1222:COR:preserveAllTokens:TRUE:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2745:preserveAllTokens |==> false
1223:COR:preserveAllTokens:FALSE:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2745:preserveAllTokens |==> true
1224:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2746:1 |==> 0
1225:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2746:1 |==> -1
1226:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2746:numberOfSubstrings += 1 |==> <NO-OP>
1227:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2747:numberOfSubstrings == max |==> numberOfSubstrings <= max
1228:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2747:numberOfSubstrings == max |==> numberOfSubstrings >= max
1229:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2747:numberOfSubstrings == max |==> false
1230:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2748:end = len |==> <NO-OP>
1231:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2749:substrings.add(str.substring(beg)) |==> <NO-OP>
1232:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2751:substrings.add(EMPTY) |==> <NO-OP>
1233:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2754:end + separatorLength |==> end % separatorLength
1234:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2754:end + separatorLength |==> end * separatorLength
1235:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2754:end + separatorLength |==> end - separatorLength
1236:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2754:end + separatorLength |==> end / separatorLength
1237:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2754:beg = end + separatorLength |==> <NO-OP>
1238:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2758:substrings.add(str.substring(beg)) |==> <NO-OP>
1239:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2759:end = len |==> <NO-OP>
1240:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByWholeSeparatorWorker:2763:substrings.toArray(new String[substrings.size()]) |==> null
1241:LVR:NEG:0:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2792:-1 |==> 0
1242:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2792:-1 |==> 1
1243:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2792:true |==> false
1244:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2828:true |==> false
1245:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitWorker:2846:str == null |==> false
1246:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2849:str.length() |==> 0
1247:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2850:0 |==> 1
1248:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2850:0 |==> -1
1249:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2850:len == 0 |==> len <= 0
1250:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2850:len == 0 |==> len >= 0
1251:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2850:len == 0 |==> false
1252:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2851:ArrayUtils.EMPTY_STRING_ARRAY |==> null
1253:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2853:new ArrayList<String>() |==> null
1254:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2854:0 |==> 1
1255:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2854:0 |==> -1
1256:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2854:0 |==> 1
1257:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2854:0 |==> -1
1258:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2855:false |==> true
1259:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2856:false |==> true
1260:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2857:i < len |==> i != len
1261:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2857:i < len |==> i <= len
1262:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2857:i < len |==> false
1263:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2858:str.charAt(i) == separatorChar |==> str.charAt(i) <= separatorChar
1264:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2858:str.charAt(i) == separatorChar |==> str.charAt(i) >= separatorChar
1265:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2858:str.charAt(i) == separatorChar |==> false
1266:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2859:match || preserveAllTokens |==> match != preserveAllTokens
1267:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2859:match || preserveAllTokens |==> match
1268:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2859:match || preserveAllTokens |==> preserveAllTokens
1269:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2859:match || preserveAllTokens |==> true
1270:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2860:list.add(str.substring(start, i)) |==> <NO-OP>
1271:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2861:false |==> true
1272:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2861:match = false |==> <NO-OP>
1273:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:2862:true |==> false
1274:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2862:lastMatch = true |==> <NO-OP>
1275:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2864:start = ++i |==> <NO-OP>
1276:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2865:continue; |==> <NO-OP>
1277:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2867:false |==> true
1278:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2867:lastMatch = false |==> <NO-OP>
1279:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:2868:true |==> false
1280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2868:match = true |==> <NO-OP>
1281:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2869:i++ |==> <NO-OP>
1282:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:preserveAllTokens && lastMatch |==> preserveAllTokens == lastMatch
1283:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:preserveAllTokens && lastMatch |==> false
1284:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:preserveAllTokens && lastMatch |==> preserveAllTokens
1285:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:preserveAllTokens && lastMatch |==> lastMatch
1286:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:match || preserveAllTokens && lastMatch |==> match != (preserveAllTokens && lastMatch)
1287:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:match || preserveAllTokens && lastMatch |==> match
1288:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:match || preserveAllTokens && lastMatch |==> preserveAllTokens && lastMatch
1289:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2871:match || preserveAllTokens && lastMatch |==> true
1290:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2872:list.add(str.substring(start, i)) |==> <NO-OP>
1291:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2874:list.toArray(new String[list.size()]) |==> null
1292:LVR:NEG:0:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2911:-1 |==> 0
1293:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2911:-1 |==> 1
1294:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2911:true |==> false
1295:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitPreserveAllTokens:2951:true |==> false
1296:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitWorker:2973:str == null |==> false
1297:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2976:str.length() |==> 0
1298:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2977:0 |==> 1
1299:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2977:0 |==> -1
1300:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2977:len == 0 |==> len <= 0
1301:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2977:len == 0 |==> len >= 0
1302:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2977:len == 0 |==> false
1303:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2978:ArrayUtils.EMPTY_STRING_ARRAY |==> null
1304:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2980:new ArrayList<String>() |==> null
1305:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitWorker:2981:1 |==> 0
1306:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2981:1 |==> -1
1307:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2982:0 |==> 1
1308:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2982:0 |==> -1
1309:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:2982:0 |==> 1
1310:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:2982:0 |==> -1
1311:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2983:false |==> true
1312:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2984:false |==> true
1313:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitWorker:2985:separatorChars == null |==> false
1314:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2987:i < len |==> i != len
1315:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2987:i < len |==> i <= len
1316:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2987:i < len |==> false
1317:COR:Character.isWhitespace(str.charAt(i)):TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2988:Character.isWhitespace(str.charAt(i)) |==> false
1318:COR:Character.isWhitespace(str.charAt(i)):FALSE:org.apache.commons.lang3.StringUtils@splitWorker:2988:Character.isWhitespace(str.charAt(i)) |==> true
1319:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2989:match || preserveAllTokens |==> match != preserveAllTokens
1320:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2989:match || preserveAllTokens |==> match
1321:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2989:match || preserveAllTokens |==> preserveAllTokens
1322:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:2989:match || preserveAllTokens |==> true
1323:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:2990:true |==> false
1324:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2990:lastMatch = true |==> <NO-OP>
1325:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2991:sizePlus1++ == max |==> sizePlus1++ <= max
1326:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2991:sizePlus1++ == max |==> sizePlus1++ >= max
1327:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:2991:sizePlus1++ == max |==> false
1328:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2992:i = len |==> <NO-OP>
1329:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2993:false |==> true
1330:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2993:lastMatch = false |==> <NO-OP>
1331:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2995:list.add(str.substring(start, i)) |==> <NO-OP>
1332:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:2996:false |==> true
1333:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2996:match = false |==> <NO-OP>
1334:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2998:start = ++i |==> <NO-OP>
1335:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:2999:continue; |==> <NO-OP>
1336:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3001:false |==> true
1337:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3001:lastMatch = false |==> <NO-OP>
1338:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:3002:true |==> false
1339:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3002:match = true |==> <NO-OP>
1340:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3003:i++ |==> <NO-OP>
1341:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitWorker:3005:1 |==> 0
1342:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitWorker:3005:1 |==> -1
1343:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3005:separatorChars.length() == 1 |==> separatorChars.length() <= 1
1344:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3005:separatorChars.length() == 1 |==> separatorChars.length() >= 1
1345:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3005:separatorChars.length() == 1 |==> false
1346:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:3007:0 |==> 1
1347:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:3007:0 |==> -1
1348:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3008:i < len |==> i != len
1349:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3008:i < len |==> i <= len
1350:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3008:i < len |==> false
1351:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3009:str.charAt(i) == sep |==> str.charAt(i) <= sep
1352:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3009:str.charAt(i) == sep |==> str.charAt(i) >= sep
1353:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3009:str.charAt(i) == sep |==> false
1354:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3010:match || preserveAllTokens |==> match != preserveAllTokens
1355:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3010:match || preserveAllTokens |==> match
1356:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3010:match || preserveAllTokens |==> preserveAllTokens
1357:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3010:match || preserveAllTokens |==> true
1358:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:3011:true |==> false
1359:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3011:lastMatch = true |==> <NO-OP>
1360:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3012:sizePlus1++ == max |==> sizePlus1++ <= max
1361:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3012:sizePlus1++ == max |==> sizePlus1++ >= max
1362:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3012:sizePlus1++ == max |==> false
1363:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3013:i = len |==> <NO-OP>
1364:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3014:false |==> true
1365:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3014:lastMatch = false |==> <NO-OP>
1366:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3016:list.add(str.substring(start, i)) |==> <NO-OP>
1367:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3017:false |==> true
1368:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3017:match = false |==> <NO-OP>
1369:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3019:start = ++i |==> <NO-OP>
1370:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3020:continue; |==> <NO-OP>
1371:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3022:false |==> true
1372:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3022:lastMatch = false |==> <NO-OP>
1373:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:3023:true |==> false
1374:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3023:match = true |==> <NO-OP>
1375:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3024:i++ |==> <NO-OP>
1376:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3028:i < len |==> i != len
1377:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3028:i < len |==> i <= len
1378:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3028:i < len |==> false
1379:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitWorker:3029:0 |==> 1
1380:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitWorker:3029:0 |==> -1
1381:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3029:separatorChars.indexOf(str.charAt(i)) >= 0 |==> separatorChars.indexOf(str.charAt(i)) == 0
1382:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3029:separatorChars.indexOf(str.charAt(i)) >= 0 |==> separatorChars.indexOf(str.charAt(i)) > 0
1383:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3029:separatorChars.indexOf(str.charAt(i)) >= 0 |==> true
1384:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3030:match || preserveAllTokens |==> match != preserveAllTokens
1385:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3030:match || preserveAllTokens |==> match
1386:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3030:match || preserveAllTokens |==> preserveAllTokens
1387:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3030:match || preserveAllTokens |==> true
1388:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:3031:true |==> false
1389:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3031:lastMatch = true |==> <NO-OP>
1390:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3032:sizePlus1++ == max |==> sizePlus1++ <= max
1391:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3032:sizePlus1++ == max |==> sizePlus1++ >= max
1392:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitWorker:3032:sizePlus1++ == max |==> false
1393:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3033:i = len |==> <NO-OP>
1394:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3034:false |==> true
1395:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3034:lastMatch = false |==> <NO-OP>
1396:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3036:list.add(str.substring(start, i)) |==> <NO-OP>
1397:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3037:false |==> true
1398:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3037:match = false |==> <NO-OP>
1399:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3039:start = ++i |==> <NO-OP>
1400:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3040:continue; |==> <NO-OP>
1401:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitWorker:3042:false |==> true
1402:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3042:lastMatch = false |==> <NO-OP>
1403:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitWorker:3043:true |==> false
1404:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3043:match = true |==> <NO-OP>
1405:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3044:i++ |==> <NO-OP>
1406:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:preserveAllTokens && lastMatch |==> preserveAllTokens == lastMatch
1407:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:preserveAllTokens && lastMatch |==> false
1408:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:preserveAllTokens && lastMatch |==> preserveAllTokens
1409:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:preserveAllTokens && lastMatch |==> lastMatch
1410:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:match || preserveAllTokens && lastMatch |==> match != (preserveAllTokens && lastMatch)
1411:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:match || preserveAllTokens && lastMatch |==> match
1412:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:match || preserveAllTokens && lastMatch |==> preserveAllTokens && lastMatch
1413:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitWorker:3047:match || preserveAllTokens && lastMatch |==> true
1414:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3048:list.add(str.substring(start, i)) |==> <NO-OP>
1415:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitWorker:3050:list.toArray(new String[list.size()]) |==> null
1416:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@splitByCharacterType:3073:false |==> true
1417:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@splitByCharacterTypeCamelCase:3101:true |==> false
1418:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@splitByCharacterType:3119:str == null |==> false
1419:COR:str.isEmpty():TRUE:org.apache.commons.lang3.StringUtils@splitByCharacterType:3122:str.isEmpty() |==> false
1420:COR:str.isEmpty():FALSE:org.apache.commons.lang3.StringUtils@splitByCharacterType:3122:str.isEmpty() |==> true
1421:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3123:ArrayUtils.EMPTY_STRING_ARRAY |==> null
1422:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3125:str.toCharArray() |==> null
1423:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3126:new ArrayList<String>() |==> null
1424:LVR:0:POS:org.apache.commons.lang3.StringUtils@splitByCharacterType:3127:0 |==> 1
1425:LVR:0:NEG:org.apache.commons.lang3.StringUtils@splitByCharacterType:3127:0 |==> -1
1426:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3128:Character.getType(c[tokenStart]) |==> 0
1427:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:1 |==> 0
1428:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:1 |==> -1
1429:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:tokenStart + 1 |==> tokenStart % 1
1430:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:tokenStart + 1 |==> tokenStart * 1
1431:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:tokenStart + 1 |==> tokenStart - 1
1432:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:tokenStart + 1 |==> tokenStart / 1
1433:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:pos < c.length |==> pos != c.length
1434:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:pos < c.length |==> pos <= c.length
1435:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3129:pos < c.length |==> false
1436:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3130:Character.getType(c[pos]) |==> 0
1437:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3131:type == currentType |==> type <= currentType
1438:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3131:type == currentType |==> type >= currentType
1439:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3131:type == currentType |==> false
1440:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3132:continue; |==> <NO-OP>
1441:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:type == Character.LOWERCASE_LETTER |==> type <= Character.LOWERCASE_LETTER
1442:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:type == Character.LOWERCASE_LETTER |==> type >= Character.LOWERCASE_LETTER
1443:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:type == Character.LOWERCASE_LETTER |==> false
1444:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER |==> camelCase == (type == Character.LOWERCASE_LETTER)
1445:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER |==> false
1446:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER |==> camelCase
1447:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER |==> type == Character.LOWERCASE_LETTER
1448:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:currentType == Character.UPPERCASE_LETTER |==> currentType <= Character.UPPERCASE_LETTER
1449:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:currentType == Character.UPPERCASE_LETTER |==> currentType >= Character.UPPERCASE_LETTER
1450:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:currentType == Character.UPPERCASE_LETTER |==> false
1451:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER |==> (camelCase && type == Character.LOWERCASE_LETTER) == (currentType == Character.UPPERCASE_LETTER)
1452:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER |==> false
1453:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER |==> camelCase && type == Character.LOWERCASE_LETTER
1454:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@splitByCharacterType:3134:camelCase && type == Character.LOWERCASE_LETTER && currentType == Character.UPPERCASE_LETTER |==> currentType == Character.UPPERCASE_LETTER
1455:LVR:POS:0:org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:1 |==> 0
1456:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:1 |==> -1
1457:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:pos - 1 |==> pos % 1
1458:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:pos - 1 |==> pos * 1
1459:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:pos - 1 |==> pos + 1
1460:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3135:pos - 1 |==> pos / 1
1461:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3136:newTokenStart != tokenStart |==> newTokenStart < tokenStart
1462:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3136:newTokenStart != tokenStart |==> newTokenStart > tokenStart
1463:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3136:newTokenStart != tokenStart |==> true
1464:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3137:newTokenStart - tokenStart |==> newTokenStart % tokenStart
1465:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3137:newTokenStart - tokenStart |==> newTokenStart * tokenStart
1466:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3137:newTokenStart - tokenStart |==> newTokenStart + tokenStart
1467:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3137:newTokenStart - tokenStart |==> newTokenStart / tokenStart
1468:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3137:list.add(new String(c, tokenStart, newTokenStart - tokenStart)) |==> <NO-OP>
1469:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3138:tokenStart = newTokenStart |==> <NO-OP>
1470:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3141:pos - tokenStart |==> pos % tokenStart
1471:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3141:pos - tokenStart |==> pos * tokenStart
1472:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3141:pos - tokenStart |==> pos + tokenStart
1473:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3141:pos - tokenStart |==> pos / tokenStart
1474:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3141:list.add(new String(c, tokenStart, pos - tokenStart)) |==> <NO-OP>
1475:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3142:tokenStart = pos |==> <NO-OP>
1476:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3144:currentType = type |==> <NO-OP>
1477:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3146:c.length - tokenStart |==> c.length % tokenStart
1478:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3146:c.length - tokenStart |==> c.length * tokenStart
1479:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3146:c.length - tokenStart |==> c.length + tokenStart
1480:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@splitByCharacterType:3146:c.length - tokenStart |==> c.length / tokenStart
1481:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3146:list.add(new String(c, tokenStart, c.length - tokenStart)) |==> <NO-OP>
1482:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@splitByCharacterType:3147:list.toArray(new String[list.size()]) |==> null
1483:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3175:join(elements, null) |==> null
1484:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3201:array == null |==> false
1485:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3204:0 |==> 1
1486:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3204:0 |==> -1
1487:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3233:array == null |==> false
1488:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3236:0 |==> 1
1489:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3236:0 |==> -1
1490:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3265:array == null |==> false
1491:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3268:0 |==> 1
1492:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3268:0 |==> -1
1493:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3297:array == null |==> false
1494:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3300:0 |==> 1
1495:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3300:0 |==> -1
1496:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3329:array == null |==> false
1497:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3332:0 |==> 1
1498:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3332:0 |==> -1
1499:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3361:array == null |==> false
1500:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3364:0 |==> 1
1501:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3364:0 |==> -1
1502:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3393:array == null |==> false
1503:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3396:0 |==> 1
1504:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3396:0 |==> -1
1505:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3425:array == null |==> false
1506:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3428:0 |==> 1
1507:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3428:0 |==> -1
1508:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3459:array == null |==> false
1509:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3462:endIndex - startIndex |==> endIndex % startIndex
1510:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3462:endIndex - startIndex |==> endIndex * startIndex
1511:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3462:endIndex - startIndex |==> endIndex + startIndex
1512:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3462:endIndex - startIndex |==> endIndex / startIndex
1513:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3463:0 |==> 1
1514:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3463:0 |==> -1
1515:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3463:noOfItems <= 0 |==> noOfItems < 0
1516:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3463:noOfItems <= 0 |==> noOfItems == 0
1517:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3463:noOfItems <= 0 |==> true
1518:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3464:EMPTY |==> null
1519:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3466:16 |==> 0
1520:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3466:16 |==> -16
1521:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3466:noOfItems * 16 |==> noOfItems % 16
1522:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3466:noOfItems * 16 |==> noOfItems + 16
1523:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3466:noOfItems * 16 |==> noOfItems - 16
1524:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3466:noOfItems * 16 |==> noOfItems / 16
1525:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3467:startIndex |==> 0
1526:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3467:i < endIndex |==> i != endIndex
1527:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3467:i < endIndex |==> i <= endIndex
1528:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3467:i < endIndex |==> false
1529:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3468:i > startIndex |==> i != startIndex
1530:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3468:i > startIndex |==> i >= startIndex
1531:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3468:i > startIndex |==> false
1532:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3469:buf.append(separator) |==> <NO-OP>
1533:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3471:array[i] != null |==> true
1534:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3472:buf.append(array[i]) |==> <NO-OP>
1535:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3475:buf.toString() |==> null
1536:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3510:array == null |==> false
1537:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3513:endIndex - startIndex |==> endIndex % startIndex
1538:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3513:endIndex - startIndex |==> endIndex * startIndex
1539:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3513:endIndex - startIndex |==> endIndex + startIndex
1540:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3513:endIndex - startIndex |==> endIndex / startIndex
1541:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3514:0 |==> 1
1542:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3514:0 |==> -1
1543:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3514:noOfItems <= 0 |==> noOfItems < 0
1544:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3514:noOfItems <= 0 |==> noOfItems == 0
1545:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3514:noOfItems <= 0 |==> true
1546:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3515:EMPTY |==> null
1547:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3517:16 |==> 0
1548:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3517:16 |==> -16
1549:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3517:noOfItems * 16 |==> noOfItems % 16
1550:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3517:noOfItems * 16 |==> noOfItems + 16
1551:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3517:noOfItems * 16 |==> noOfItems - 16
1552:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3517:noOfItems * 16 |==> noOfItems / 16
1553:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3518:startIndex |==> 0
1554:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3518:i < endIndex |==> i != endIndex
1555:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3518:i < endIndex |==> i <= endIndex
1556:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3518:i < endIndex |==> false
1557:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3519:i > startIndex |==> i != startIndex
1558:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3519:i > startIndex |==> i >= startIndex
1559:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3519:i > startIndex |==> false
1560:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3520:buf.append(separator) |==> <NO-OP>
1561:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3522:buf.append(array[i]) |==> <NO-OP>
1562:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3524:buf.toString() |==> null
1563:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3559:array == null |==> false
1564:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3562:endIndex - startIndex |==> endIndex % startIndex
1565:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3562:endIndex - startIndex |==> endIndex * startIndex
1566:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3562:endIndex - startIndex |==> endIndex + startIndex
1567:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3562:endIndex - startIndex |==> endIndex / startIndex
1568:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3563:0 |==> 1
1569:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3563:0 |==> -1
1570:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3563:noOfItems <= 0 |==> noOfItems < 0
1571:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3563:noOfItems <= 0 |==> noOfItems == 0
1572:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3563:noOfItems <= 0 |==> true
1573:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3564:EMPTY |==> null
1574:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3566:16 |==> 0
1575:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3566:16 |==> -16
1576:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3566:noOfItems * 16 |==> noOfItems % 16
1577:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3566:noOfItems * 16 |==> noOfItems + 16
1578:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3566:noOfItems * 16 |==> noOfItems - 16
1579:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3566:noOfItems * 16 |==> noOfItems / 16
1580:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3567:startIndex |==> 0
1581:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3567:i < endIndex |==> i != endIndex
1582:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3567:i < endIndex |==> i <= endIndex
1583:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3567:i < endIndex |==> false
1584:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3568:i > startIndex |==> i != startIndex
1585:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3568:i > startIndex |==> i >= startIndex
1586:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3568:i > startIndex |==> false
1587:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3569:buf.append(separator) |==> <NO-OP>
1588:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3571:buf.append(array[i]) |==> <NO-OP>
1589:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3573:buf.toString() |==> null
1590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3608:array == null |==> false
1591:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3611:endIndex - startIndex |==> endIndex % startIndex
1592:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3611:endIndex - startIndex |==> endIndex * startIndex
1593:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3611:endIndex - startIndex |==> endIndex + startIndex
1594:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3611:endIndex - startIndex |==> endIndex / startIndex
1595:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3612:0 |==> 1
1596:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3612:0 |==> -1
1597:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3612:noOfItems <= 0 |==> noOfItems < 0
1598:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3612:noOfItems <= 0 |==> noOfItems == 0
1599:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3612:noOfItems <= 0 |==> true
1600:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3613:EMPTY |==> null
1601:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3615:16 |==> 0
1602:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3615:16 |==> -16
1603:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3615:noOfItems * 16 |==> noOfItems % 16
1604:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3615:noOfItems * 16 |==> noOfItems + 16
1605:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3615:noOfItems * 16 |==> noOfItems - 16
1606:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3615:noOfItems * 16 |==> noOfItems / 16
1607:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3616:startIndex |==> 0
1608:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3616:i < endIndex |==> i != endIndex
1609:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3616:i < endIndex |==> i <= endIndex
1610:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3616:i < endIndex |==> false
1611:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3617:i > startIndex |==> i != startIndex
1612:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3617:i > startIndex |==> i >= startIndex
1613:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3617:i > startIndex |==> false
1614:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3618:buf.append(separator) |==> <NO-OP>
1615:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3620:buf.append(array[i]) |==> <NO-OP>
1616:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3622:buf.toString() |==> null
1617:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3657:array == null |==> false
1618:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3660:endIndex - startIndex |==> endIndex % startIndex
1619:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3660:endIndex - startIndex |==> endIndex * startIndex
1620:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3660:endIndex - startIndex |==> endIndex + startIndex
1621:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3660:endIndex - startIndex |==> endIndex / startIndex
1622:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3661:0 |==> 1
1623:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3661:0 |==> -1
1624:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3661:noOfItems <= 0 |==> noOfItems < 0
1625:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3661:noOfItems <= 0 |==> noOfItems == 0
1626:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3661:noOfItems <= 0 |==> true
1627:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3662:EMPTY |==> null
1628:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3664:16 |==> 0
1629:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3664:16 |==> -16
1630:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3664:noOfItems * 16 |==> noOfItems % 16
1631:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3664:noOfItems * 16 |==> noOfItems + 16
1632:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3664:noOfItems * 16 |==> noOfItems - 16
1633:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3664:noOfItems * 16 |==> noOfItems / 16
1634:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3665:startIndex |==> 0
1635:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3665:i < endIndex |==> i != endIndex
1636:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3665:i < endIndex |==> i <= endIndex
1637:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3665:i < endIndex |==> false
1638:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3666:i > startIndex |==> i != startIndex
1639:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3666:i > startIndex |==> i >= startIndex
1640:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3666:i > startIndex |==> false
1641:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3667:buf.append(separator) |==> <NO-OP>
1642:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3669:buf.append(array[i]) |==> <NO-OP>
1643:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3671:buf.toString() |==> null
1644:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3706:array == null |==> false
1645:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3709:endIndex - startIndex |==> endIndex % startIndex
1646:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3709:endIndex - startIndex |==> endIndex * startIndex
1647:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3709:endIndex - startIndex |==> endIndex + startIndex
1648:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3709:endIndex - startIndex |==> endIndex / startIndex
1649:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3710:0 |==> 1
1650:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3710:0 |==> -1
1651:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3710:noOfItems <= 0 |==> noOfItems < 0
1652:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3710:noOfItems <= 0 |==> noOfItems == 0
1653:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3710:noOfItems <= 0 |==> true
1654:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3711:EMPTY |==> null
1655:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3713:16 |==> 0
1656:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3713:16 |==> -16
1657:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3713:noOfItems * 16 |==> noOfItems % 16
1658:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3713:noOfItems * 16 |==> noOfItems + 16
1659:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3713:noOfItems * 16 |==> noOfItems - 16
1660:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3713:noOfItems * 16 |==> noOfItems / 16
1661:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3714:startIndex |==> 0
1662:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3714:i < endIndex |==> i != endIndex
1663:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3714:i < endIndex |==> i <= endIndex
1664:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3714:i < endIndex |==> false
1665:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3715:i > startIndex |==> i != startIndex
1666:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3715:i > startIndex |==> i >= startIndex
1667:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3715:i > startIndex |==> false
1668:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3716:buf.append(separator) |==> <NO-OP>
1669:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3718:buf.append(array[i]) |==> <NO-OP>
1670:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3720:buf.toString() |==> null
1671:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3755:array == null |==> false
1672:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3758:endIndex - startIndex |==> endIndex % startIndex
1673:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3758:endIndex - startIndex |==> endIndex * startIndex
1674:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3758:endIndex - startIndex |==> endIndex + startIndex
1675:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3758:endIndex - startIndex |==> endIndex / startIndex
1676:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3759:0 |==> 1
1677:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3759:0 |==> -1
1678:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3759:noOfItems <= 0 |==> noOfItems < 0
1679:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3759:noOfItems <= 0 |==> noOfItems == 0
1680:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3759:noOfItems <= 0 |==> true
1681:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3760:EMPTY |==> null
1682:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3762:16 |==> 0
1683:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3762:16 |==> -16
1684:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3762:noOfItems * 16 |==> noOfItems % 16
1685:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3762:noOfItems * 16 |==> noOfItems + 16
1686:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3762:noOfItems * 16 |==> noOfItems - 16
1687:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3762:noOfItems * 16 |==> noOfItems / 16
1688:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3763:startIndex |==> 0
1689:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3763:i < endIndex |==> i != endIndex
1690:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3763:i < endIndex |==> i <= endIndex
1691:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3763:i < endIndex |==> false
1692:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3764:i > startIndex |==> i != startIndex
1693:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3764:i > startIndex |==> i >= startIndex
1694:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3764:i > startIndex |==> false
1695:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3765:buf.append(separator) |==> <NO-OP>
1696:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3767:buf.append(array[i]) |==> <NO-OP>
1697:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3769:buf.toString() |==> null
1698:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3804:array == null |==> false
1699:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3807:endIndex - startIndex |==> endIndex % startIndex
1700:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3807:endIndex - startIndex |==> endIndex * startIndex
1701:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3807:endIndex - startIndex |==> endIndex + startIndex
1702:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3807:endIndex - startIndex |==> endIndex / startIndex
1703:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3808:0 |==> 1
1704:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3808:0 |==> -1
1705:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3808:noOfItems <= 0 |==> noOfItems < 0
1706:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3808:noOfItems <= 0 |==> noOfItems == 0
1707:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3808:noOfItems <= 0 |==> true
1708:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3809:EMPTY |==> null
1709:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3811:16 |==> 0
1710:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3811:16 |==> -16
1711:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3811:noOfItems * 16 |==> noOfItems % 16
1712:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3811:noOfItems * 16 |==> noOfItems + 16
1713:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3811:noOfItems * 16 |==> noOfItems - 16
1714:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3811:noOfItems * 16 |==> noOfItems / 16
1715:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3812:startIndex |==> 0
1716:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3812:i < endIndex |==> i != endIndex
1717:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3812:i < endIndex |==> i <= endIndex
1718:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3812:i < endIndex |==> false
1719:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3813:i > startIndex |==> i != startIndex
1720:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3813:i > startIndex |==> i >= startIndex
1721:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3813:i > startIndex |==> false
1722:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3814:buf.append(separator) |==> <NO-OP>
1723:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3816:buf.append(array[i]) |==> <NO-OP>
1724:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3818:buf.toString() |==> null
1725:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3846:array == null |==> false
1726:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3849:0 |==> 1
1727:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3849:0 |==> -1
1728:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3888:array == null |==> false
1729:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3891:separator == null |==> false
1730:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3892:separator = EMPTY |==> <NO-OP>
1731:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3897:endIndex - startIndex |==> endIndex % startIndex
1732:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@join:3897:endIndex - startIndex |==> endIndex * startIndex
1733:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3897:endIndex - startIndex |==> endIndex + startIndex
1734:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3897:endIndex - startIndex |==> endIndex / startIndex
1735:LVR:0:POS:org.apache.commons.lang3.StringUtils@join:3898:0 |==> 1
1736:LVR:0:NEG:org.apache.commons.lang3.StringUtils@join:3898:0 |==> -1
1737:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@join:3898:noOfItems <= 0 |==> noOfItems < 0
1738:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@join:3898:noOfItems <= 0 |==> noOfItems == 0
1739:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@join:3898:noOfItems <= 0 |==> true
1740:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3899:EMPTY |==> null
1741:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3902:16 |==> 0
1742:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3902:16 |==> -16
1743:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@join:3902:noOfItems * 16 |==> noOfItems % 16
1744:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@join:3902:noOfItems * 16 |==> noOfItems + 16
1745:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@join:3902:noOfItems * 16 |==> noOfItems - 16
1746:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@join:3902:noOfItems * 16 |==> noOfItems / 16
1747:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3904:startIndex |==> 0
1748:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3904:i < endIndex |==> i != endIndex
1749:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@join:3904:i < endIndex |==> i <= endIndex
1750:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3904:i < endIndex |==> false
1751:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@join:3905:i > startIndex |==> i != startIndex
1752:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@join:3905:i > startIndex |==> i >= startIndex
1753:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@join:3905:i > startIndex |==> false
1754:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3906:buf.append(separator) |==> <NO-OP>
1755:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3908:array[i] != null |==> true
1756:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3909:buf.append(array[i]) |==> <NO-OP>
1757:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3912:buf.toString() |==> null
1758:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3932:iterator == null |==> false
1759:COR:iterator.hasNext():TRUE:org.apache.commons.lang3.StringUtils@join:3935:iterator.hasNext() |==> false
1760:COR:iterator.hasNext():FALSE:org.apache.commons.lang3.StringUtils@join:3935:iterator.hasNext() |==> true
1761:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3936:EMPTY |==> null
1762:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3938:iterator.next() |==> null
1763:COR:iterator.hasNext():TRUE:org.apache.commons.lang3.StringUtils@join:3939:iterator.hasNext() |==> false
1764:COR:iterator.hasNext():FALSE:org.apache.commons.lang3.StringUtils@join:3939:iterator.hasNext() |==> true
1765:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3940:ObjectUtils.toString(first) |==> null
1766:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3944:256 |==> 0
1767:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3944:256 |==> -256
1768:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3945:first != null |==> true
1769:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3946:buf.append(first) |==> <NO-OP>
1770:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3950:buf.append(separator) |==> <NO-OP>
1771:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3951:iterator.next() |==> null
1772:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3952:obj != null |==> true
1773:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3953:buf.append(obj) |==> <NO-OP>
1774:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3957:buf.toString() |==> null
1775:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3976:iterator == null |==> false
1776:COR:iterator.hasNext():TRUE:org.apache.commons.lang3.StringUtils@join:3979:iterator.hasNext() |==> false
1777:COR:iterator.hasNext():FALSE:org.apache.commons.lang3.StringUtils@join:3979:iterator.hasNext() |==> true
1778:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3980:EMPTY |==> null
1779:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3982:iterator.next() |==> null
1780:COR:iterator.hasNext():TRUE:org.apache.commons.lang3.StringUtils@join:3983:iterator.hasNext() |==> false
1781:COR:iterator.hasNext():FALSE:org.apache.commons.lang3.StringUtils@join:3983:iterator.hasNext() |==> true
1782:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3984:ObjectUtils.toString(first) |==> null
1783:LVR:POS:0:org.apache.commons.lang3.StringUtils@join:3988:256 |==> 0
1784:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@join:3988:256 |==> -256
1785:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3989:first != null |==> true
1786:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3990:buf.append(first) |==> <NO-OP>
1787:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3994:separator != null |==> true
1788:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3995:buf.append(separator) |==> <NO-OP>
1789:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3997:iterator.next() |==> null
1790:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:3998:obj != null |==> true
1791:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@join:3999:buf.append(obj) |==> <NO-OP>
1792:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:4002:buf.toString() |==> null
1793:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:4020:iterable == null |==> false
1794:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:4023:join(iterable.iterator(), separator) |==> null
1795:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@join:4041:iterable == null |==> false
1796:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@join:4044:join(iterable.iterator(), separator) |==> null
1797:COR:isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@deleteWhitespace:4064:isEmpty(str) |==> false
1798:COR:isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@deleteWhitespace:4064:isEmpty(str) |==> true
1799:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@deleteWhitespace:4065:str |==> null
1800:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@deleteWhitespace:4067:str.length() |==> 0
1801:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@deleteWhitespace:4068:new char[sz] |==> null
1802:LVR:0:POS:org.apache.commons.lang3.StringUtils@deleteWhitespace:4069:0 |==> 1
1803:LVR:0:NEG:org.apache.commons.lang3.StringUtils@deleteWhitespace:4069:0 |==> -1
1804:LVR:0:POS:org.apache.commons.lang3.StringUtils@deleteWhitespace:4070:0 |==> 1
1805:LVR:0:NEG:org.apache.commons.lang3.StringUtils@deleteWhitespace:4070:0 |==> -1
1806:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4070:i < sz |==> i != sz
1807:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4070:i < sz |==> i <= sz
1808:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4070:i < sz |==> false
1809:COR:Character.isWhitespace(str.charAt(i)):TRUE:org.apache.commons.lang3.StringUtils@deleteWhitespace:4071:Character.isWhitespace(str.charAt(i)) |==> false
1810:COR:Character.isWhitespace(str.charAt(i)):FALSE:org.apache.commons.lang3.StringUtils@deleteWhitespace:4071:Character.isWhitespace(str.charAt(i)) |==> true
1811:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@deleteWhitespace:4072:chs[count++] = str.charAt(i) |==> <NO-OP>
1812:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4075:count == sz |==> count <= sz
1813:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4075:count == sz |==> count >= sz
1814:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@deleteWhitespace:4075:count == sz |==> false
1815:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@deleteWhitespace:4076:str |==> null
1816:LVR:0:POS:org.apache.commons.lang3.StringUtils@deleteWhitespace:4078:0 |==> 1
1817:LVR:0:NEG:org.apache.commons.lang3.StringUtils@deleteWhitespace:4078:0 |==> -1
1818:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStart:4108:isEmpty(str) || isEmpty(remove) |==> isEmpty(str) != isEmpty(remove)
1819:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStart:4108:isEmpty(str) || isEmpty(remove) |==> isEmpty(str)
1820:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStart:4108:isEmpty(str) || isEmpty(remove) |==> isEmpty(remove)
1821:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStart:4108:isEmpty(str) || isEmpty(remove) |==> true
1822:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStart:4109:str |==> null
1823:COR:str.startsWith(remove):TRUE:org.apache.commons.lang3.StringUtils@removeStart:4111:str.startsWith(remove) |==> false
1824:COR:str.startsWith(remove):FALSE:org.apache.commons.lang3.StringUtils@removeStart:4111:str.startsWith(remove) |==> true
1825:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStart:4112:str.substring(remove.length()) |==> null
1826:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStart:4114:str |==> null
1827:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4143:isEmpty(str) || isEmpty(remove) |==> isEmpty(str) != isEmpty(remove)
1828:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4143:isEmpty(str) || isEmpty(remove) |==> isEmpty(str)
1829:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4143:isEmpty(str) || isEmpty(remove) |==> isEmpty(remove)
1830:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4143:isEmpty(str) || isEmpty(remove) |==> true
1831:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4144:str |==> null
1832:COR:startsWithIgnoreCase(str, remove):TRUE:org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4146:startsWithIgnoreCase(str, remove) |==> false
1833:COR:startsWithIgnoreCase(str, remove):FALSE:org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4146:startsWithIgnoreCase(str, remove) |==> true
1834:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4147:str.substring(remove.length()) |==> null
1835:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeStartIgnoreCase:4149:str |==> null
1836:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEnd:4177:isEmpty(str) || isEmpty(remove) |==> isEmpty(str) != isEmpty(remove)
1837:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEnd:4177:isEmpty(str) || isEmpty(remove) |==> isEmpty(str)
1838:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEnd:4177:isEmpty(str) || isEmpty(remove) |==> isEmpty(remove)
1839:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEnd:4177:isEmpty(str) || isEmpty(remove) |==> true
1840:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeEnd:4178:str |==> null
1841:COR:str.endsWith(remove):TRUE:org.apache.commons.lang3.StringUtils@removeEnd:4180:str.endsWith(remove) |==> false
1842:COR:str.endsWith(remove):FALSE:org.apache.commons.lang3.StringUtils@removeEnd:4180:str.endsWith(remove) |==> true
1843:LVR:0:POS:org.apache.commons.lang3.StringUtils@removeEnd:4181:0 |==> 1
1844:LVR:0:NEG:org.apache.commons.lang3.StringUtils@removeEnd:4181:0 |==> -1
1845:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@removeEnd:4181:str.length() - remove.length() |==> str.length() % remove.length()
1846:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@removeEnd:4181:str.length() - remove.length() |==> str.length() * remove.length()
1847:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@removeEnd:4181:str.length() - remove.length() |==> str.length() + remove.length()
1848:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@removeEnd:4181:str.length() - remove.length() |==> str.length() / remove.length()
1849:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeEnd:4183:str |==> null
1850:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4213:isEmpty(str) || isEmpty(remove) |==> isEmpty(str) != isEmpty(remove)
1851:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4213:isEmpty(str) || isEmpty(remove) |==> isEmpty(str)
1852:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4213:isEmpty(str) || isEmpty(remove) |==> isEmpty(remove)
1853:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4213:isEmpty(str) || isEmpty(remove) |==> true
1854:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4214:str |==> null
1855:COR:endsWithIgnoreCase(str, remove):TRUE:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4216:endsWithIgnoreCase(str, remove) |==> false
1856:COR:endsWithIgnoreCase(str, remove):FALSE:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4216:endsWithIgnoreCase(str, remove) |==> true
1857:LVR:0:POS:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:0 |==> 1
1858:LVR:0:NEG:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:0 |==> -1
1859:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:str.length() - remove.length() |==> str.length() % remove.length()
1860:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:str.length() - remove.length() |==> str.length() * remove.length()
1861:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:str.length() - remove.length() |==> str.length() + remove.length()
1862:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4217:str.length() - remove.length() |==> str.length() / remove.length()
1863:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removeEndIgnoreCase:4219:str |==> null
1864:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4246:isEmpty(str) || isEmpty(remove) |==> isEmpty(str) != isEmpty(remove)
1865:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4246:isEmpty(str) || isEmpty(remove) |==> isEmpty(str)
1866:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4246:isEmpty(str) || isEmpty(remove) |==> isEmpty(remove)
1867:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4246:isEmpty(str) || isEmpty(remove) |==> true
1868:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@remove:4247:str |==> null
1869:LVR:NEG:0:org.apache.commons.lang3.StringUtils@remove:4249:-1 |==> 0
1870:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@remove:4249:-1 |==> 1
1871:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@remove:4272:str.indexOf(remove) == INDEX_NOT_FOUND |==> str.indexOf(remove) <= INDEX_NOT_FOUND
1872:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@remove:4272:str.indexOf(remove) == INDEX_NOT_FOUND |==> str.indexOf(remove) >= INDEX_NOT_FOUND
1873:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@remove:4272:str.indexOf(remove) == INDEX_NOT_FOUND |==> false
1874:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4272:isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND |==> isEmpty(str) != (str.indexOf(remove) == INDEX_NOT_FOUND)
1875:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4272:isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND |==> isEmpty(str)
1876:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4272:isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND |==> str.indexOf(remove) == INDEX_NOT_FOUND
1877:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@remove:4272:isEmpty(str) || str.indexOf(remove) == INDEX_NOT_FOUND |==> true
1878:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@remove:4273:str |==> null
1879:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@remove:4275:str.toCharArray() |==> null
1880:LVR:0:POS:org.apache.commons.lang3.StringUtils@remove:4276:0 |==> 1
1881:LVR:0:NEG:org.apache.commons.lang3.StringUtils@remove:4276:0 |==> -1
1882:LVR:0:POS:org.apache.commons.lang3.StringUtils@remove:4277:0 |==> 1
1883:LVR:0:NEG:org.apache.commons.lang3.StringUtils@remove:4277:0 |==> -1
1884:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@remove:4277:i < chars.length |==> i != chars.length
1885:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@remove:4277:i < chars.length |==> i <= chars.length
1886:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@remove:4277:i < chars.length |==> false
1887:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@remove:4278:chars[i] != remove |==> chars[i] < remove
1888:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@remove:4278:chars[i] != remove |==> chars[i] > remove
1889:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@remove:4278:chars[i] != remove |==> true
1890:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@remove:4279:chars[pos++] = chars[i] |==> <NO-OP>
1891:LVR:0:POS:org.apache.commons.lang3.StringUtils@remove:4282:0 |==> 1
1892:LVR:0:NEG:org.apache.commons.lang3.StringUtils@remove:4282:0 |==> -1
1893:LVR:POS:0:org.apache.commons.lang3.StringUtils@replaceOnce:4311:1 |==> 0
1894:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replaceOnce:4311:1 |==> -1
1895:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replacePattern:4335:Pattern.compile(regex, Pattern.DOTALL).matcher(source).replaceAll(replacement) |==> null
1896:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@removePattern:4351:replacePattern(source, regex, StringUtils.EMPTY) |==> null
1897:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replace:4378:-1 |==> 0
1898:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replace:4378:-1 |==> 1
1899:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) |==> isEmpty(text) != isEmpty(searchString)
1900:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) |==> isEmpty(text)
1901:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) |==> isEmpty(searchString)
1902:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) |==> true
1903:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replace:4410:replacement == null |==> false
1904:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null |==> (isEmpty(text) || isEmpty(searchString)) != (replacement == null)
1905:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null |==> isEmpty(text) || isEmpty(searchString)
1906:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null |==> replacement == null
1907:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null |==> true
1908:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4410:0 |==> 1
1909:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4410:0 |==> -1
1910:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replace:4410:max == 0 |==> max <= 0
1911:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replace:4410:max == 0 |==> max >= 0
1912:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4410:max == 0 |==> false
1913:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0 |==> (isEmpty(text) || isEmpty(searchString) || replacement == null) != (max == 0)
1914:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0 |==> isEmpty(text) || isEmpty(searchString) || replacement == null
1915:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0 |==> max == 0
1916:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replace:4410:isEmpty(text) || isEmpty(searchString) || replacement == null || max == 0 |==> true
1917:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4411:text |==> null
1918:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4413:0 |==> 1
1919:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4413:0 |==> -1
1920:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4414:text.indexOf(searchString, start) |==> 0
1921:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replace:4415:end == INDEX_NOT_FOUND |==> end <= INDEX_NOT_FOUND
1922:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replace:4415:end == INDEX_NOT_FOUND |==> end >= INDEX_NOT_FOUND
1923:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4415:end == INDEX_NOT_FOUND |==> false
1924:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4416:text |==> null
1925:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4418:searchString.length() |==> 0
1926:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replace:4419:replacement.length() - replLength |==> replacement.length() % replLength
1927:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replace:4419:replacement.length() - replLength |==> replacement.length() * replLength
1928:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@replace:4419:replacement.length() - replLength |==> replacement.length() + replLength
1929:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replace:4419:replacement.length() - replLength |==> replacement.length() / replLength
1930:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4420:0 |==> 1
1931:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4420:0 |==> -1
1932:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replace:4420:increase < 0 |==> increase != 0
1933:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replace:4420:increase < 0 |==> increase <= 0
1934:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4420:increase < 0 |==> false
1935:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4420:0 |==> 1
1936:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4420:0 |==> -1
1937:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4420:increase = increase < 0 ? 0 : increase |==> <NO-OP>
1938:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4421:0 |==> 1
1939:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4421:0 |==> -1
1940:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max < 0 |==> max != 0
1941:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max < 0 |==> max <= 0
1942:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max < 0 |==> false
1943:LVR:POS:0:org.apache.commons.lang3.StringUtils@replace:4421:16 |==> 0
1944:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replace:4421:16 |==> -16
1945:LVR:POS:0:org.apache.commons.lang3.StringUtils@replace:4421:64 |==> 0
1946:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replace:4421:64 |==> -64
1947:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max > 64 |==> max != 64
1948:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max > 64 |==> max >= 64
1949:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4421:max > 64 |==> false
1950:LVR:POS:0:org.apache.commons.lang3.StringUtils@replace:4421:64 |==> 0
1951:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replace:4421:64 |==> -64
1952:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4421:increase *= max < 0 ? 16 : max > 64 ? 64 : max |==> <NO-OP>
1953:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replace:4422:text.length() + increase |==> text.length() % increase
1954:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replace:4422:text.length() + increase |==> text.length() * increase
1955:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replace:4422:text.length() + increase |==> text.length() - increase
1956:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replace:4422:text.length() + increase |==> text.length() / increase
1957:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@replace:4423:end != INDEX_NOT_FOUND |==> end < INDEX_NOT_FOUND
1958:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@replace:4423:end != INDEX_NOT_FOUND |==> end > INDEX_NOT_FOUND
1959:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@replace:4423:end != INDEX_NOT_FOUND |==> true
1960:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4424:buf.append(text.substring(start, end)).append(replacement) |==> <NO-OP>
1961:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replace:4425:end + replLength |==> end % replLength
1962:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replace:4425:end + replLength |==> end * replLength
1963:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replace:4425:end + replLength |==> end - replLength
1964:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replace:4425:end + replLength |==> end / replLength
1965:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4425:start = end + replLength |==> <NO-OP>
1966:LVR:0:POS:org.apache.commons.lang3.StringUtils@replace:4426:0 |==> 1
1967:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replace:4426:0 |==> -1
1968:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replace:4426:--max == 0 |==> --max <= 0
1969:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replace:4426:--max == 0 |==> --max >= 0
1970:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replace:4426:--max == 0 |==> false
1971:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4427:break; |==> <NO-OP>
1972:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4429:end = text.indexOf(searchString, start) |==> <NO-OP>
1973:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4431:buf.append(text.substring(start)) |==> <NO-OP>
1974:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replace:4432:buf.toString() |==> null
1975:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@replaceEach:4475:false |==> true
1976:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4475:0 |==> 1
1977:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4475:0 |==> -1
1978:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEachRepeatedly:4525:searchList == null |==> false
1979:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEachRepeatedly:4525:0 |==> 1
1980:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEachRepeatedly:4525:0 |==> -1
1981:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@replaceEachRepeatedly:4526:true |==> false
1982:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null |==> false
1983:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() |==> text == null != text.isEmpty()
1984:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() |==> text == null
1985:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() |==> text.isEmpty()
1986:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() |==> true
1987:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4583:searchList == null |==> false
1988:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null |==> (text == null || text.isEmpty()) != (searchList == null)
1989:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null |==> text == null || text.isEmpty()
1990:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null |==> searchList == null
1991:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null |==> true
1992:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4584:0 |==> 1
1993:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4584:0 |==> -1
1994:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:searchList.length == 0 |==> searchList.length <= 0
1995:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:searchList.length == 0 |==> searchList.length >= 0
1996:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:searchList.length == 0 |==> false
1997:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 |==> (text == null || text.isEmpty() || searchList == null) != (searchList.length == 0)
1998:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 |==> text == null || text.isEmpty() || searchList == null
1999:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4584:text == null || text.isEmpty() || searchList == null || searchList.length == 0 |==> searchList.length == 0
2000:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 |==> true
2001:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4584:replacementList == null |==> false
2002:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null |==> (text == null || text.isEmpty() || searchList == null || searchList.length == 0) != (replacementList == null)
2003:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null |==> text == null || text.isEmpty() || searchList == null || searchList.length == 0
2004:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4584:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null |==> replacementList == null
2005:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4584:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null |==> true
2006:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4584:0 |==> 1
2007:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4584:0 |==> -1
2008:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:replacementList.length == 0 |==> replacementList.length <= 0
2009:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:replacementList.length == 0 |==> replacementList.length >= 0
2010:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4584:replacementList.length == 0 |==> false
2011:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null || replacementList.length == 0 |==> (text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null) != (replacementList.length == 0)
2012:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4583:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null || replacementList.length == 0 |==> text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null
2013:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4584:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null || replacementList.length == 0 |==> replacementList.length == 0
2014:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4584:text == null || text.isEmpty() || searchList == null || searchList.length == 0 || replacementList == null || replacementList.length == 0 |==> true
2015:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4585:text |==> null
2016:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4589:0 |==> 1
2017:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4589:0 |==> -1
2018:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4589:timeToLive < 0 |==> timeToLive != 0
2019:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4589:timeToLive < 0 |==> timeToLive <= 0
2020:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4589:timeToLive < 0 |==> false
2021:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@replaceEach:4590:"Aborting to protect against StackOverflowError - output of one loop is the input of another" |==> null
2022:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4594:searchList.length |==> 0
2023:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4595:replacementList.length |==> 0
2024:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4598:searchLength != replacementLength |==> searchLength < replacementLength
2025:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4598:searchLength != replacementLength |==> searchLength > replacementLength
2026:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4598:searchLength != replacementLength |==> true
2027:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@replaceEach:4599:"Search and Replace array lengths don\'t match: " |==> null
2028:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@replaceEach:4601:" vs " |==> null
2029:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4606:new boolean[searchLength] |==> null
2030:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4609:-1 |==> 0
2031:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4609:-1 |==> 1
2032:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4610:-1 |==> 0
2033:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4610:-1 |==> 1
2034:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4611:-1 |==> 0
2035:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4611:-1 |==> 1
2036:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4615:0 |==> 1
2037:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4615:0 |==> -1
2038:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4615:i < searchLength |==> i != searchLength
2039:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4615:i < searchLength |==> i <= searchLength
2040:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4615:i < searchLength |==> false
2041:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4616:searchList[i] == null |==> false
2042:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> noMoreMatchesForReplIndex[i] != (searchList[i] == null)
2043:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> noMoreMatchesForReplIndex[i]
2044:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> searchList[i] == null
2045:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> true
2046:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> (noMoreMatchesForReplIndex[i] || searchList[i] == null) != searchList[i].isEmpty()
2047:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> noMoreMatchesForReplIndex[i] || searchList[i] == null
2048:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4617:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> searchList[i].isEmpty()
2049:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> true
2050:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4617:replacementList[i] == null |==> false
2051:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> (noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty()) != (replacementList[i] == null)
2052:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4616:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty()
2053:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4617:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> replacementList[i] == null
2054:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4617:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> true
2055:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4618:continue; |==> <NO-OP>
2056:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4620:tempIndex = text.indexOf(searchList[i]) |==> <NO-OP>
2057:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4623:-1 |==> 0
2058:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4623:-1 |==> 1
2059:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4623:tempIndex == -1 |==> tempIndex <= -1
2060:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4623:tempIndex == -1 |==> tempIndex >= -1
2061:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4623:tempIndex == -1 |==> false
2062:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@replaceEach:4624:true |==> false
2063:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4624:noMoreMatchesForReplIndex[i] = true |==> <NO-OP>
2064:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4626:-1 |==> 0
2065:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4626:-1 |==> 1
2066:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 |==> textIndex <= -1
2067:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 |==> textIndex >= -1
2068:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 |==> false
2069:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:tempIndex < textIndex |==> tempIndex != textIndex
2070:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:tempIndex < textIndex |==> tempIndex <= textIndex
2071:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4626:tempIndex < textIndex |==> false
2072:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 || tempIndex < textIndex |==> textIndex == -1 != tempIndex < textIndex
2073:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 || tempIndex < textIndex |==> textIndex == -1
2074:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 || tempIndex < textIndex |==> tempIndex < textIndex
2075:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4626:textIndex == -1 || tempIndex < textIndex |==> true
2076:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4627:textIndex = tempIndex |==> <NO-OP>
2077:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4628:replaceIndex = i |==> <NO-OP>
2078:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4635:-1 |==> 0
2079:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4635:-1 |==> 1
2080:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4635:textIndex == -1 |==> textIndex <= -1
2081:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4635:textIndex == -1 |==> textIndex >= -1
2082:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4635:textIndex == -1 |==> false
2083:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4636:text |==> null
2084:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4639:0 |==> 1
2085:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4639:0 |==> -1
2086:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4642:0 |==> 1
2087:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4642:0 |==> -1
2088:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4645:0 |==> 1
2089:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4645:0 |==> -1
2090:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4645:i < searchList.length |==> i != searchList.length
2091:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4645:i < searchList.length |==> i <= searchList.length
2092:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4645:i < searchList.length |==> false
2093:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4646:searchList[i] == null |==> false
2094:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4646:replacementList[i] == null |==> false
2095:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4646:searchList[i] == null || replacementList[i] == null |==> searchList[i] == null != (replacementList[i] == null)
2096:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4646:searchList[i] == null || replacementList[i] == null |==> searchList[i] == null
2097:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4646:searchList[i] == null || replacementList[i] == null |==> replacementList[i] == null
2098:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4646:searchList[i] == null || replacementList[i] == null |==> true
2099:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4647:continue; |==> <NO-OP>
2100:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4649:replacementList[i].length() - searchList[i].length() |==> replacementList[i].length() % searchList[i].length()
2101:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4649:replacementList[i].length() - searchList[i].length() |==> replacementList[i].length() * searchList[i].length()
2102:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4649:replacementList[i].length() - searchList[i].length() |==> replacementList[i].length() + searchList[i].length()
2103:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4649:replacementList[i].length() - searchList[i].length() |==> replacementList[i].length() / searchList[i].length()
2104:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4650:0 |==> 1
2105:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4650:0 |==> -1
2106:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4650:greater > 0 |==> greater != 0
2107:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4650:greater > 0 |==> greater >= 0
2108:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4650:greater > 0 |==> false
2109:LVR:POS:0:org.apache.commons.lang3.StringUtils@replaceEach:4651:3 |==> 0
2110:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4651:3 |==> -3
2111:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4651:3 * greater |==> 3 % greater
2112:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4651:3 * greater |==> 3 + greater
2113:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4651:3 * greater |==> 3 - greater
2114:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4651:3 * greater |==> 3 / greater
2115:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4651:increase += 3 * greater |==> <NO-OP>
2116:LVR:POS:0:org.apache.commons.lang3.StringUtils@replaceEach:4655:5 |==> 0
2117:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4655:5 |==> -5
2118:AOR:/(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4655:text.length() / 5 |==> text.length() % 5
2119:AOR:/(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4655:text.length() / 5 |==> text.length() * 5
2120:AOR:/(int,int):+(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4655:text.length() / 5 |==> text.length() + 5
2121:AOR:/(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4655:text.length() / 5 |==> text.length() - 5
2122:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4655:increase = Math.min(increase, text.length() / 5) |==> <NO-OP>
2123:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4657:text.length() + increase |==> text.length() % increase
2124:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4657:text.length() + increase |==> text.length() * increase
2125:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4657:text.length() + increase |==> text.length() - increase
2126:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4657:text.length() + increase |==> text.length() / increase
2127:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4659:-1 |==> 0
2128:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4659:-1 |==> 1
2129:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4659:textIndex != -1 |==> textIndex < -1
2130:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4659:textIndex != -1 |==> textIndex > -1
2131:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4659:textIndex != -1 |==> true
2132:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4661:start |==> 0
2133:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4661:i < textIndex |==> i != textIndex
2134:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4661:i < textIndex |==> i <= textIndex
2135:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4661:i < textIndex |==> false
2136:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4662:buf.append(text.charAt(i)) |==> <NO-OP>
2137:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4664:buf.append(replacementList[replaceIndex]) |==> <NO-OP>
2138:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4666:textIndex + searchList[replaceIndex].length() |==> textIndex % searchList[replaceIndex].length()
2139:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4666:textIndex + searchList[replaceIndex].length() |==> textIndex * searchList[replaceIndex].length()
2140:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4666:textIndex + searchList[replaceIndex].length() |==> textIndex - searchList[replaceIndex].length()
2141:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4666:textIndex + searchList[replaceIndex].length() |==> textIndex / searchList[replaceIndex].length()
2142:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4666:start = textIndex + searchList[replaceIndex].length() |==> <NO-OP>
2143:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4668:-1 |==> 0
2144:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4668:-1 |==> 1
2145:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4668:textIndex = -1 |==> <NO-OP>
2146:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4669:-1 |==> 0
2147:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4669:-1 |==> 1
2148:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4669:replaceIndex = -1 |==> <NO-OP>
2149:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4670:-1 |==> 0
2150:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4670:-1 |==> 1
2151:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4670:tempIndex = -1 |==> <NO-OP>
2152:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceEach:4673:0 |==> 1
2153:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4673:0 |==> -1
2154:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4673:i < searchLength |==> i != searchLength
2155:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4673:i < searchLength |==> i <= searchLength
2156:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4673:i < searchLength |==> false
2157:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4674:searchList[i] == null |==> false
2158:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> noMoreMatchesForReplIndex[i] != (searchList[i] == null)
2159:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> noMoreMatchesForReplIndex[i]
2160:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> searchList[i] == null
2161:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null |==> true
2162:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> (noMoreMatchesForReplIndex[i] || searchList[i] == null) != searchList[i].isEmpty()
2163:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> noMoreMatchesForReplIndex[i] || searchList[i] == null
2164:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4675:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> searchList[i].isEmpty()
2165:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() |==> true
2166:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceEach:4675:replacementList[i] == null |==> false
2167:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> (noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty()) != (replacementList[i] == null)
2168:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4674:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty()
2169:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4675:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> replacementList[i] == null
2170:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4675:noMoreMatchesForReplIndex[i] || searchList[i] == null || searchList[i].isEmpty() || replacementList[i] == null |==> true
2171:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4676:continue; |==> <NO-OP>
2172:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4678:tempIndex = text.indexOf(searchList[i], start) |==> <NO-OP>
2173:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4681:-1 |==> 0
2174:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4681:-1 |==> 1
2175:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4681:tempIndex == -1 |==> tempIndex <= -1
2176:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4681:tempIndex == -1 |==> tempIndex >= -1
2177:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4681:tempIndex == -1 |==> false
2178:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@replaceEach:4682:true |==> false
2179:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4682:noMoreMatchesForReplIndex[i] = true |==> <NO-OP>
2180:LVR:NEG:0:org.apache.commons.lang3.StringUtils@replaceEach:4684:-1 |==> 0
2181:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@replaceEach:4684:-1 |==> 1
2182:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 |==> textIndex <= -1
2183:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 |==> textIndex >= -1
2184:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 |==> false
2185:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:tempIndex < textIndex |==> tempIndex != textIndex
2186:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:tempIndex < textIndex |==> tempIndex <= textIndex
2187:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4684:tempIndex < textIndex |==> false
2188:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 || tempIndex < textIndex |==> textIndex == -1 != tempIndex < textIndex
2189:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 || tempIndex < textIndex |==> textIndex == -1
2190:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 || tempIndex < textIndex |==> tempIndex < textIndex
2191:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceEach:4684:textIndex == -1 || tempIndex < textIndex |==> true
2192:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4685:textIndex = tempIndex |==> <NO-OP>
2193:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4686:replaceIndex = i |==> <NO-OP>
2194:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4693:text.length() |==> 0
2195:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4694:start |==> 0
2196:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4694:i < textLength |==> i != textLength
2197:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4694:i < textLength |==> i <= textLength
2198:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4694:i < textLength |==> false
2199:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4695:buf.append(text.charAt(i)) |==> <NO-OP>
2200:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4697:buf.toString() |==> null
2201:COR:repeat:TRUE:org.apache.commons.lang3.StringUtils@replaceEach:4698:repeat |==> false
2202:COR:repeat:FALSE:org.apache.commons.lang3.StringUtils@replaceEach:4698:repeat |==> true
2203:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceEach:4699:result |==> null
2204:LVR:POS:0:org.apache.commons.lang3.StringUtils@replaceEach:4702:1 |==> 0
2205:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@replaceEach:4702:1 |==> -1
2206:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4702:timeToLive - 1 |==> timeToLive % 1
2207:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4702:timeToLive - 1 |==> timeToLive * 1
2208:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4702:timeToLive - 1 |==> timeToLive + 1
2209:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@replaceEach:4702:timeToLive - 1 |==> timeToLive / 1
2210:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceChars:4728:str == null |==> false
2211:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4731:str.replace(searchChar, replaceChar) |==> null
2212:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceChars:4771:isEmpty(str) || isEmpty(searchChars) |==> isEmpty(str) != isEmpty(searchChars)
2213:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceChars:4771:isEmpty(str) || isEmpty(searchChars) |==> isEmpty(str)
2214:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceChars:4771:isEmpty(str) || isEmpty(searchChars) |==> isEmpty(searchChars)
2215:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@replaceChars:4771:isEmpty(str) || isEmpty(searchChars) |==> true
2216:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4772:str |==> null
2217:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@replaceChars:4774:replaceChars == null |==> false
2218:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4775:replaceChars = EMPTY |==> <NO-OP>
2219:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@replaceChars:4777:false |==> true
2220:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4778:replaceChars.length() |==> 0
2221:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4779:str.length() |==> 0
2222:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4780:new StringBuilder(strLength) |==> null
2223:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceChars:4781:0 |==> 1
2224:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceChars:4781:0 |==> -1
2225:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4781:i < strLength |==> i != strLength
2226:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4781:i < strLength |==> i <= strLength
2227:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4781:i < strLength |==> false
2228:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4782:str.charAt(i) |==> 0
2229:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4783:searchChars.indexOf(ch) |==> 0
2230:LVR:0:POS:org.apache.commons.lang3.StringUtils@replaceChars:4784:0 |==> 1
2231:LVR:0:NEG:org.apache.commons.lang3.StringUtils@replaceChars:4784:0 |==> -1
2232:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4784:index >= 0 |==> index == 0
2233:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4784:index >= 0 |==> index > 0
2234:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4784:index >= 0 |==> true
2235:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@replaceChars:4785:true |==> false
2236:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4785:modified = true |==> <NO-OP>
2237:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4786:index < replaceCharsLength |==> index != replaceCharsLength
2238:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4786:index < replaceCharsLength |==> index <= replaceCharsLength
2239:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@replaceChars:4786:index < replaceCharsLength |==> false
2240:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4787:buf.append(replaceChars.charAt(index)) |==> <NO-OP>
2241:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4790:buf.append(ch) |==> <NO-OP>
2242:COR:modified:TRUE:org.apache.commons.lang3.StringUtils@replaceChars:4793:modified |==> false
2243:COR:modified:FALSE:org.apache.commons.lang3.StringUtils@replaceChars:4793:modified |==> true
2244:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4794:buf.toString() |==> null
2245:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@replaceChars:4796:str |==> null
2246:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@overlay:4831:str == null |==> false
2247:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@overlay:4834:overlay == null |==> false
2248:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4835:overlay = EMPTY |==> <NO-OP>
2249:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4837:str.length() |==> 0
2250:LVR:0:POS:org.apache.commons.lang3.StringUtils@overlay:4838:0 |==> 1
2251:LVR:0:NEG:org.apache.commons.lang3.StringUtils@overlay:4838:0 |==> -1
2252:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@overlay:4838:start < 0 |==> start != 0
2253:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@overlay:4838:start < 0 |==> start <= 0
2254:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@overlay:4838:start < 0 |==> false
2255:LVR:0:POS:org.apache.commons.lang3.StringUtils@overlay:4839:0 |==> 1
2256:LVR:0:NEG:org.apache.commons.lang3.StringUtils@overlay:4839:0 |==> -1
2257:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4839:start = 0 |==> <NO-OP>
2258:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@overlay:4841:start > len |==> start != len
2259:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@overlay:4841:start > len |==> start >= len
2260:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@overlay:4841:start > len |==> false
2261:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4842:start = len |==> <NO-OP>
2262:LVR:0:POS:org.apache.commons.lang3.StringUtils@overlay:4844:0 |==> 1
2263:LVR:0:NEG:org.apache.commons.lang3.StringUtils@overlay:4844:0 |==> -1
2264:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@overlay:4844:end < 0 |==> end != 0
2265:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@overlay:4844:end < 0 |==> end <= 0
2266:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@overlay:4844:end < 0 |==> false
2267:LVR:0:POS:org.apache.commons.lang3.StringUtils@overlay:4845:0 |==> 1
2268:LVR:0:NEG:org.apache.commons.lang3.StringUtils@overlay:4845:0 |==> -1
2269:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4845:end = 0 |==> <NO-OP>
2270:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@overlay:4847:end > len |==> end != len
2271:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@overlay:4847:end > len |==> end >= len
2272:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@overlay:4847:end > len |==> false
2273:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4848:end = len |==> <NO-OP>
2274:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@overlay:4850:start > end |==> start != end
2275:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@overlay:4850:start > end |==> start >= end
2276:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@overlay:4850:start > end |==> false
2277:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4851:start |==> 0
2278:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4852:start = end |==> <NO-OP>
2279:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@overlay:4853:end = temp |==> <NO-OP>
2280:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start |==> len % start
2281:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start |==> len * start
2282:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start |==> len - start
2283:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start |==> len / start
2284:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end |==> (len + start) % end
2285:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end |==> (len + start) * end
2286:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end |==> len + start + end
2287:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end |==> (len + start) / end
2288:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() |==> (len + start - end) % overlay.length()
2289:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() |==> (len + start - end) * overlay.length()
2290:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() |==> len + start - end - overlay.length()
2291:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() |==> (len + start - end) / overlay.length()
2292:LVR:POS:0:org.apache.commons.lang3.StringUtils@overlay:4855:1 |==> 0
2293:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@overlay:4855:1 |==> -1
2294:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() + 1 |==> (len + start - end + overlay.length()) % 1
2295:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() + 1 |==> (len + start - end + overlay.length()) * 1
2296:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() + 1 |==> len + start - end + overlay.length() - 1
2297:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@overlay:4855:len + start - end + overlay.length() + 1 |==> (len + start - end + overlay.length()) / 1
2298:LVR:0:POS:org.apache.commons.lang3.StringUtils@overlay:4856:0 |==> 1
2299:LVR:0:NEG:org.apache.commons.lang3.StringUtils@overlay:4856:0 |==> -1
2300:COR:isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@chomp:4890:isEmpty(str) |==> false
2301:COR:isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@chomp:4890:isEmpty(str) |==> true
2302:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4891:str |==> null
2303:LVR:POS:0:org.apache.commons.lang3.StringUtils@chomp:4894:1 |==> 0
2304:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chomp:4894:1 |==> -1
2305:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chomp:4894:str.length() == 1 |==> str.length() <= 1
2306:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chomp:4894:str.length() == 1 |==> str.length() >= 1
2307:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chomp:4894:str.length() == 1 |==> false
2308:LVR:0:POS:org.apache.commons.lang3.StringUtils@chomp:4895:0 |==> 1
2309:LVR:0:NEG:org.apache.commons.lang3.StringUtils@chomp:4895:0 |==> -1
2310:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR |==> ch <= CharUtils.CR
2311:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR |==> ch >= CharUtils.CR
2312:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR |==> false
2313:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.LF |==> ch <= CharUtils.LF
2314:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.LF |==> ch >= CharUtils.LF
2315:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.LF |==> false
2316:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR || ch == CharUtils.LF |==> ch == CharUtils.CR != (ch == CharUtils.LF)
2317:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR || ch == CharUtils.LF |==> ch == CharUtils.CR
2318:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR || ch == CharUtils.LF |==> ch == CharUtils.LF
2319:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@chomp:4896:ch == CharUtils.CR || ch == CharUtils.LF |==> true
2320:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4897:EMPTY |==> null
2321:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4899:str |==> null
2322:LVR:POS:0:org.apache.commons.lang3.StringUtils@chomp:4902:1 |==> 0
2323:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chomp:4902:1 |==> -1
2324:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@chomp:4902:str.length() - 1 |==> str.length() % 1
2325:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@chomp:4902:str.length() - 1 |==> str.length() * 1
2326:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@chomp:4902:str.length() - 1 |==> str.length() + 1
2327:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@chomp:4902:str.length() - 1 |==> str.length() / 1
2328:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4903:str.charAt(lastIdx) |==> 0
2329:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chomp:4905:last == CharUtils.LF |==> last <= CharUtils.LF
2330:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chomp:4905:last == CharUtils.LF |==> last >= CharUtils.LF
2331:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chomp:4905:last == CharUtils.LF |==> false
2332:LVR:POS:0:org.apache.commons.lang3.StringUtils@chomp:4906:1 |==> 0
2333:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chomp:4906:1 |==> -1
2334:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:lastIdx - 1 |==> lastIdx % 1
2335:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:lastIdx - 1 |==> lastIdx * 1
2336:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:lastIdx - 1 |==> lastIdx + 1
2337:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:lastIdx - 1 |==> lastIdx / 1
2338:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:str.charAt(lastIdx - 1) == CharUtils.CR |==> str.charAt(lastIdx - 1) <= CharUtils.CR
2339:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:str.charAt(lastIdx - 1) == CharUtils.CR |==> str.charAt(lastIdx - 1) >= CharUtils.CR
2340:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chomp:4906:str.charAt(lastIdx - 1) == CharUtils.CR |==> false
2341:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4907:lastIdx-- |==> <NO-OP>
2342:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@chomp:4909:last != CharUtils.CR |==> last < CharUtils.CR
2343:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@chomp:4909:last != CharUtils.CR |==> last > CharUtils.CR
2344:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@chomp:4909:last != CharUtils.CR |==> true
2345:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4910:lastIdx++ |==> <NO-OP>
2346:LVR:0:POS:org.apache.commons.lang3.StringUtils@chomp:4912:0 |==> 1
2347:LVR:0:NEG:org.apache.commons.lang3.StringUtils@chomp:4912:0 |==> -1
2348:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chomp:4944:removeEnd(str, separator) |==> null
2349:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@chop:4973:str == null |==> false
2350:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@chop:4976:str.length() |==> 0
2351:LVR:POS:0:org.apache.commons.lang3.StringUtils@chop:4977:2 |==> 0
2352:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chop:4977:2 |==> -2
2353:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@chop:4977:strLen < 2 |==> strLen != 2
2354:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chop:4977:strLen < 2 |==> strLen <= 2
2355:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chop:4977:strLen < 2 |==> false
2356:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chop:4978:EMPTY |==> null
2357:LVR:POS:0:org.apache.commons.lang3.StringUtils@chop:4980:1 |==> 0
2358:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chop:4980:1 |==> -1
2359:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@chop:4980:strLen - 1 |==> strLen % 1
2360:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@chop:4980:strLen - 1 |==> strLen * 1
2361:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@chop:4980:strLen - 1 |==> strLen + 1
2362:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@chop:4980:strLen - 1 |==> strLen / 1
2363:LVR:0:POS:org.apache.commons.lang3.StringUtils@chop:4981:0 |==> 1
2364:LVR:0:NEG:org.apache.commons.lang3.StringUtils@chop:4981:0 |==> -1
2365:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@chop:4982:str.charAt(lastIdx) |==> 0
2366:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF |==> last <= CharUtils.LF
2367:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF |==> last >= CharUtils.LF
2368:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF |==> false
2369:LVR:POS:0:org.apache.commons.lang3.StringUtils@chop:4983:1 |==> 0
2370:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chop:4983:1 |==> -1
2371:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@chop:4983:lastIdx - 1 |==> lastIdx % 1
2372:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@chop:4983:lastIdx - 1 |==> lastIdx * 1
2373:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@chop:4983:lastIdx - 1 |==> lastIdx + 1
2374:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@chop:4983:lastIdx - 1 |==> lastIdx / 1
2375:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@chop:4983:ret.charAt(lastIdx - 1) == CharUtils.CR |==> ret.charAt(lastIdx - 1) <= CharUtils.CR
2376:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@chop:4983:ret.charAt(lastIdx - 1) == CharUtils.CR |==> ret.charAt(lastIdx - 1) >= CharUtils.CR
2377:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@chop:4983:ret.charAt(lastIdx - 1) == CharUtils.CR |==> false
2378:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR |==> last == CharUtils.LF == (ret.charAt(lastIdx - 1) == CharUtils.CR)
2379:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR |==> false
2380:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR |==> last == CharUtils.LF
2381:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@chop:4983:last == CharUtils.LF && ret.charAt(lastIdx - 1) == CharUtils.CR |==> ret.charAt(lastIdx - 1) == CharUtils.CR
2382:LVR:0:POS:org.apache.commons.lang3.StringUtils@chop:4984:0 |==> 1
2383:LVR:0:NEG:org.apache.commons.lang3.StringUtils@chop:4984:0 |==> -1
2384:LVR:POS:0:org.apache.commons.lang3.StringUtils@chop:4984:1 |==> 0
2385:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@chop:4984:1 |==> -1
2386:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@chop:4984:lastIdx - 1 |==> lastIdx % 1
2387:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@chop:4984:lastIdx - 1 |==> lastIdx * 1
2388:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@chop:4984:lastIdx - 1 |==> lastIdx + 1
2389:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@chop:4984:lastIdx - 1 |==> lastIdx / 1
2390:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@chop:4986:ret |==> null
2391:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@repeat:5015:str == null |==> false
2392:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5018:0 |==> 1
2393:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5018:0 |==> -1
2394:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@repeat:5018:repeat <= 0 |==> repeat < 0
2395:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@repeat:5018:repeat <= 0 |==> repeat == 0
2396:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@repeat:5018:repeat <= 0 |==> true
2397:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5019:EMPTY |==> null
2398:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5021:str.length() |==> 0
2399:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5022:1 |==> 0
2400:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5022:1 |==> -1
2401:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 |==> repeat <= 1
2402:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 |==> repeat >= 1
2403:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 |==> false
2404:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5022:0 |==> 1
2405:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5022:0 |==> -1
2406:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:inputLength == 0 |==> inputLength <= 0
2407:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:inputLength == 0 |==> inputLength >= 0
2408:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@repeat:5022:inputLength == 0 |==> false
2409:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 || inputLength == 0 |==> repeat == 1 != (inputLength == 0)
2410:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 || inputLength == 0 |==> repeat == 1
2411:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 || inputLength == 0 |==> inputLength == 0
2412:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5022:repeat == 1 || inputLength == 0 |==> true
2413:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5023:str |==> null
2414:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5025:1 |==> 0
2415:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5025:1 |==> -1
2416:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 |==> inputLength <= 1
2417:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 |==> inputLength >= 1
2418:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 |==> false
2419:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:repeat <= PAD_LIMIT |==> repeat < PAD_LIMIT
2420:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:repeat <= PAD_LIMIT |==> repeat == PAD_LIMIT
2421:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@repeat:5025:repeat <= PAD_LIMIT |==> true
2422:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 && repeat <= PAD_LIMIT |==> inputLength == 1 == repeat <= PAD_LIMIT
2423:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 && repeat <= PAD_LIMIT |==> false
2424:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 && repeat <= PAD_LIMIT |==> inputLength == 1
2425:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5025:inputLength == 1 && repeat <= PAD_LIMIT |==> repeat <= PAD_LIMIT
2426:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5026:0 |==> 1
2427:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5026:0 |==> -1
2428:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@repeat:5029:inputLength * repeat |==> inputLength % repeat
2429:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@repeat:5029:inputLength * repeat |==> inputLength + repeat
2430:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@repeat:5029:inputLength * repeat |==> inputLength - repeat
2431:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@repeat:5029:inputLength * repeat |==> inputLength / repeat
2432:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5032:0 |==> 1
2433:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5032:0 |==> -1
2434:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5034:0 |==> 1
2435:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5034:0 |==> -1
2436:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5035:1 |==> 0
2437:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5035:1 |==> -1
2438:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5036:new char[outputLength] |==> null
2439:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5037:2 |==> 0
2440:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5037:2 |==> -2
2441:AOR:*(int,int):%(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 |==> repeat % 2
2442:AOR:*(int,int):+(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 |==> repeat + 2
2443:AOR:*(int,int):-(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 |==> repeat - 2
2444:AOR:*(int,int):/(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 |==> repeat / 2
2445:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5037:2 |==> 0
2446:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5037:2 |==> -2
2447:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 - 2 |==> repeat * 2 % 2
2448:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 - 2 |==> repeat * 2 * 2
2449:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 - 2 |==> repeat * 2 + 2
2450:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:repeat * 2 - 2 |==> repeat * 2 / 2
2451:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5037:0 |==> 1
2452:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5037:0 |==> -1
2453:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:i >= 0 |==> i == 0
2454:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:i >= 0 |==> i > 0
2455:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@repeat:5037:i >= 0 |==> true
2456:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5038:output2[i] = ch0 |==> <NO-OP>
2457:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5039:1 |==> 0
2458:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5039:1 |==> -1
2459:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@repeat:5039:i + 1 |==> i % 1
2460:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@repeat:5039:i + 1 |==> i * 1
2461:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@repeat:5039:i + 1 |==> i - 1
2462:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@repeat:5039:i + 1 |==> i / 1
2463:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5039:output2[i + 1] = ch1 |==> <NO-OP>
2464:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5041:new String(output2) |==> null
2465:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5043:new StringBuilder(outputLength) |==> null
2466:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5044:0 |==> 1
2467:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5044:0 |==> -1
2468:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@repeat:5044:i < repeat |==> i != repeat
2469:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@repeat:5044:i < repeat |==> i <= repeat
2470:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@repeat:5044:i < repeat |==> false
2471:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5045:buf.append(str) |==> <NO-OP>
2472:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5047:buf.toString() |==> null
2473:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@repeat:5072:str == null |==> false
2474:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@repeat:5072:separator == null |==> false
2475:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5072:str == null || separator == null |==> str == null != (separator == null)
2476:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5072:str == null || separator == null |==> str == null
2477:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5072:str == null || separator == null |==> separator == null
2478:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@repeat:5072:str == null || separator == null |==> true
2479:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5073:repeat(str, repeat) |==> null
2480:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5076:repeat(str + separator, repeat) |==> null
2481:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5077:removeEnd(result, separator) |==> null
2482:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5103:new char[repeat] |==> null
2483:LVR:POS:0:org.apache.commons.lang3.StringUtils@repeat:5104:1 |==> 0
2484:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@repeat:5104:1 |==> -1
2485:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:repeat - 1 |==> repeat % 1
2486:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:repeat - 1 |==> repeat * 1
2487:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:repeat - 1 |==> repeat + 1
2488:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:repeat - 1 |==> repeat / 1
2489:LVR:0:POS:org.apache.commons.lang3.StringUtils@repeat:5104:0 |==> 1
2490:LVR:0:NEG:org.apache.commons.lang3.StringUtils@repeat:5104:0 |==> -1
2491:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:i >= 0 |==> i == 0
2492:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:i >= 0 |==> i > 0
2493:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@repeat:5104:i >= 0 |==> true
2494:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5105:buf[i] = ch |==> <NO-OP>
2495:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@repeat:5107:new String(buf) |==> null
2496:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5130:rightPad(str, size, ' ') |==> null
2497:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@rightPad:5155:str == null |==> false
2498:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@rightPad:5158:size - str.length() |==> size % str.length()
2499:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@rightPad:5158:size - str.length() |==> size * str.length()
2500:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@rightPad:5158:size - str.length() |==> size + str.length()
2501:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@rightPad:5158:size - str.length() |==> size / str.length()
2502:LVR:0:POS:org.apache.commons.lang3.StringUtils@rightPad:5159:0 |==> 1
2503:LVR:0:NEG:org.apache.commons.lang3.StringUtils@rightPad:5159:0 |==> -1
2504:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@rightPad:5159:pads <= 0 |==> pads < 0
2505:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@rightPad:5159:pads <= 0 |==> pads == 0
2506:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5159:pads <= 0 |==> true
2507:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5160:str |==> null
2508:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5162:pads > PAD_LIMIT |==> pads != PAD_LIMIT
2509:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5162:pads > PAD_LIMIT |==> pads >= PAD_LIMIT
2510:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5162:pads > PAD_LIMIT |==> false
2511:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5163:rightPad(str, size, String.valueOf(padChar)) |==> null
2512:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5165:str.concat(repeat(padChar, pads)) |==> null
2513:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@rightPad:5192:str == null |==> false
2514:COR:isEmpty(padStr):TRUE:org.apache.commons.lang3.StringUtils@rightPad:5195:isEmpty(padStr) |==> false
2515:COR:isEmpty(padStr):FALSE:org.apache.commons.lang3.StringUtils@rightPad:5195:isEmpty(padStr) |==> true
2516:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5196:padStr = SPACE |==> <NO-OP>
2517:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5198:padStr.length() |==> 0
2518:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5199:str.length() |==> 0
2519:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@rightPad:5200:size - strLen |==> size % strLen
2520:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@rightPad:5200:size - strLen |==> size * strLen
2521:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@rightPad:5200:size - strLen |==> size + strLen
2522:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@rightPad:5200:size - strLen |==> size / strLen
2523:LVR:0:POS:org.apache.commons.lang3.StringUtils@rightPad:5201:0 |==> 1
2524:LVR:0:NEG:org.apache.commons.lang3.StringUtils@rightPad:5201:0 |==> -1
2525:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@rightPad:5201:pads <= 0 |==> pads < 0
2526:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@rightPad:5201:pads <= 0 |==> pads == 0
2527:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5201:pads <= 0 |==> true
2528:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5202:str |==> null
2529:LVR:POS:0:org.apache.commons.lang3.StringUtils@rightPad:5204:1 |==> 0
2530:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@rightPad:5204:1 |==> -1
2531:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 |==> padLen <= 1
2532:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 |==> padLen >= 1
2533:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 |==> false
2534:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:pads <= PAD_LIMIT |==> pads < PAD_LIMIT
2535:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:pads <= PAD_LIMIT |==> pads == PAD_LIMIT
2536:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5204:pads <= PAD_LIMIT |==> true
2537:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 && pads <= PAD_LIMIT |==> padLen == 1 == pads <= PAD_LIMIT
2538:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 && pads <= PAD_LIMIT |==> false
2539:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 && pads <= PAD_LIMIT |==> padLen == 1
2540:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@rightPad:5204:padLen == 1 && pads <= PAD_LIMIT |==> pads <= PAD_LIMIT
2541:LVR:0:POS:org.apache.commons.lang3.StringUtils@rightPad:5205:0 |==> 1
2542:LVR:0:NEG:org.apache.commons.lang3.StringUtils@rightPad:5205:0 |==> -1
2543:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5208:pads == padLen |==> pads <= padLen
2544:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5208:pads == padLen |==> pads >= padLen
2545:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5208:pads == padLen |==> false
2546:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5209:str.concat(padStr) |==> null
2547:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5210:pads < padLen |==> pads != padLen
2548:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5210:pads < padLen |==> pads <= padLen
2549:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5210:pads < padLen |==> false
2550:LVR:0:POS:org.apache.commons.lang3.StringUtils@rightPad:5211:0 |==> 1
2551:LVR:0:NEG:org.apache.commons.lang3.StringUtils@rightPad:5211:0 |==> -1
2552:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5213:new char[pads] |==> null
2553:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5214:padStr.toCharArray() |==> null
2554:LVR:0:POS:org.apache.commons.lang3.StringUtils@rightPad:5215:0 |==> 1
2555:LVR:0:NEG:org.apache.commons.lang3.StringUtils@rightPad:5215:0 |==> -1
2556:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5215:i < pads |==> i != pads
2557:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@rightPad:5215:i < pads |==> i <= pads
2558:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@rightPad:5215:i < pads |==> false
2559:AOR:%(int,int):*(int,int):org.apache.commons.lang3.StringUtils@rightPad:5216:i % padLen |==> i * padLen
2560:AOR:%(int,int):+(int,int):org.apache.commons.lang3.StringUtils@rightPad:5216:i % padLen |==> i + padLen
2561:AOR:%(int,int):-(int,int):org.apache.commons.lang3.StringUtils@rightPad:5216:i % padLen |==> i - padLen
2562:AOR:%(int,int):/(int,int):org.apache.commons.lang3.StringUtils@rightPad:5216:i % padLen |==> i / padLen
2563:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5216:padding[i] = padChars[i % padLen] |==> <NO-OP>
2564:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@rightPad:5218:str.concat(new String(padding)) |==> null
2565:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5242:leftPad(str, size, ' ') |==> null
2566:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@leftPad:5267:str == null |==> false
2567:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@leftPad:5270:size - str.length() |==> size % str.length()
2568:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@leftPad:5270:size - str.length() |==> size * str.length()
2569:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@leftPad:5270:size - str.length() |==> size + str.length()
2570:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@leftPad:5270:size - str.length() |==> size / str.length()
2571:LVR:0:POS:org.apache.commons.lang3.StringUtils@leftPad:5271:0 |==> 1
2572:LVR:0:NEG:org.apache.commons.lang3.StringUtils@leftPad:5271:0 |==> -1
2573:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@leftPad:5271:pads <= 0 |==> pads < 0
2574:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@leftPad:5271:pads <= 0 |==> pads == 0
2575:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5271:pads <= 0 |==> true
2576:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5272:str |==> null
2577:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5274:pads > PAD_LIMIT |==> pads != PAD_LIMIT
2578:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5274:pads > PAD_LIMIT |==> pads >= PAD_LIMIT
2579:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5274:pads > PAD_LIMIT |==> false
2580:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5275:leftPad(str, size, String.valueOf(padChar)) |==> null
2581:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5277:repeat(padChar, pads).concat(str) |==> null
2582:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@leftPad:5304:str == null |==> false
2583:COR:isEmpty(padStr):TRUE:org.apache.commons.lang3.StringUtils@leftPad:5307:isEmpty(padStr) |==> false
2584:COR:isEmpty(padStr):FALSE:org.apache.commons.lang3.StringUtils@leftPad:5307:isEmpty(padStr) |==> true
2585:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5308:padStr = SPACE |==> <NO-OP>
2586:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5310:padStr.length() |==> 0
2587:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5311:str.length() |==> 0
2588:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@leftPad:5312:size - strLen |==> size % strLen
2589:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@leftPad:5312:size - strLen |==> size * strLen
2590:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@leftPad:5312:size - strLen |==> size + strLen
2591:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@leftPad:5312:size - strLen |==> size / strLen
2592:LVR:0:POS:org.apache.commons.lang3.StringUtils@leftPad:5313:0 |==> 1
2593:LVR:0:NEG:org.apache.commons.lang3.StringUtils@leftPad:5313:0 |==> -1
2594:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@leftPad:5313:pads <= 0 |==> pads < 0
2595:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@leftPad:5313:pads <= 0 |==> pads == 0
2596:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5313:pads <= 0 |==> true
2597:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5314:str |==> null
2598:LVR:POS:0:org.apache.commons.lang3.StringUtils@leftPad:5316:1 |==> 0
2599:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@leftPad:5316:1 |==> -1
2600:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 |==> padLen <= 1
2601:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 |==> padLen >= 1
2602:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 |==> false
2603:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:pads <= PAD_LIMIT |==> pads < PAD_LIMIT
2604:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:pads <= PAD_LIMIT |==> pads == PAD_LIMIT
2605:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5316:pads <= PAD_LIMIT |==> true
2606:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 && pads <= PAD_LIMIT |==> padLen == 1 == pads <= PAD_LIMIT
2607:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 && pads <= PAD_LIMIT |==> false
2608:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 && pads <= PAD_LIMIT |==> padLen == 1
2609:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@leftPad:5316:padLen == 1 && pads <= PAD_LIMIT |==> pads <= PAD_LIMIT
2610:LVR:0:POS:org.apache.commons.lang3.StringUtils@leftPad:5317:0 |==> 1
2611:LVR:0:NEG:org.apache.commons.lang3.StringUtils@leftPad:5317:0 |==> -1
2612:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5320:pads == padLen |==> pads <= padLen
2613:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5320:pads == padLen |==> pads >= padLen
2614:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5320:pads == padLen |==> false
2615:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5321:padStr.concat(str) |==> null
2616:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5322:pads < padLen |==> pads != padLen
2617:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5322:pads < padLen |==> pads <= padLen
2618:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5322:pads < padLen |==> false
2619:LVR:0:POS:org.apache.commons.lang3.StringUtils@leftPad:5323:0 |==> 1
2620:LVR:0:NEG:org.apache.commons.lang3.StringUtils@leftPad:5323:0 |==> -1
2621:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5325:new char[pads] |==> null
2622:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5326:padStr.toCharArray() |==> null
2623:LVR:0:POS:org.apache.commons.lang3.StringUtils@leftPad:5327:0 |==> 1
2624:LVR:0:NEG:org.apache.commons.lang3.StringUtils@leftPad:5327:0 |==> -1
2625:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5327:i < pads |==> i != pads
2626:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@leftPad:5327:i < pads |==> i <= pads
2627:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@leftPad:5327:i < pads |==> false
2628:AOR:%(int,int):*(int,int):org.apache.commons.lang3.StringUtils@leftPad:5328:i % padLen |==> i * padLen
2629:AOR:%(int,int):+(int,int):org.apache.commons.lang3.StringUtils@leftPad:5328:i % padLen |==> i + padLen
2630:AOR:%(int,int):-(int,int):org.apache.commons.lang3.StringUtils@leftPad:5328:i % padLen |==> i - padLen
2631:AOR:%(int,int):/(int,int):org.apache.commons.lang3.StringUtils@leftPad:5328:i % padLen |==> i / padLen
2632:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5328:padding[i] = padChars[i % padLen] |==> <NO-OP>
2633:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@leftPad:5330:new String(padding).concat(str) |==> null
2634:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@length:5346:cs == null |==> false
2635:LVR:0:POS:org.apache.commons.lang3.StringUtils@length:5346:0 |==> 1
2636:LVR:0:NEG:org.apache.commons.lang3.StringUtils@length:5346:0 |==> -1
2637:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5375:center(str, size, ' ') |==> null
2638:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@center:5403:str == null |==> false
2639:LVR:0:POS:org.apache.commons.lang3.StringUtils@center:5403:0 |==> 1
2640:LVR:0:NEG:org.apache.commons.lang3.StringUtils@center:5403:0 |==> -1
2641:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@center:5403:size <= 0 |==> size < 0
2642:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@center:5403:size <= 0 |==> size == 0
2643:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@center:5403:size <= 0 |==> true
2644:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5403:str == null || size <= 0 |==> str == null != size <= 0
2645:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5403:str == null || size <= 0 |==> str == null
2646:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5403:str == null || size <= 0 |==> size <= 0
2647:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5403:str == null || size <= 0 |==> true
2648:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5404:str |==> null
2649:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5406:str.length() |==> 0
2650:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5407:size - strLen |==> size % strLen
2651:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5407:size - strLen |==> size * strLen
2652:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@center:5407:size - strLen |==> size + strLen
2653:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@center:5407:size - strLen |==> size / strLen
2654:LVR:0:POS:org.apache.commons.lang3.StringUtils@center:5408:0 |==> 1
2655:LVR:0:NEG:org.apache.commons.lang3.StringUtils@center:5408:0 |==> -1
2656:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@center:5408:pads <= 0 |==> pads < 0
2657:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@center:5408:pads <= 0 |==> pads == 0
2658:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@center:5408:pads <= 0 |==> true
2659:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5409:str |==> null
2660:LVR:POS:0:org.apache.commons.lang3.StringUtils@center:5411:2 |==> 0
2661:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@center:5411:2 |==> -2
2662:AOR:/(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5411:pads / 2 |==> pads % 2
2663:AOR:/(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5411:pads / 2 |==> pads * 2
2664:AOR:/(int,int):+(int,int):org.apache.commons.lang3.StringUtils@center:5411:pads / 2 |==> pads + 2
2665:AOR:/(int,int):-(int,int):org.apache.commons.lang3.StringUtils@center:5411:pads / 2 |==> pads - 2
2666:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5411:strLen + pads / 2 |==> strLen % (pads / 2)
2667:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5411:strLen + pads / 2 |==> strLen * (pads / 2)
2668:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@center:5411:strLen + pads / 2 |==> strLen - pads / 2
2669:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@center:5411:strLen + pads / 2 |==> strLen / (pads / 2)
2670:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5411:str = leftPad(str, strLen + pads / 2, padChar) |==> <NO-OP>
2671:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5412:str = rightPad(str, size, padChar) |==> <NO-OP>
2672:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5413:str |==> null
2673:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@center:5443:str == null |==> false
2674:LVR:0:POS:org.apache.commons.lang3.StringUtils@center:5443:0 |==> 1
2675:LVR:0:NEG:org.apache.commons.lang3.StringUtils@center:5443:0 |==> -1
2676:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@center:5443:size <= 0 |==> size < 0
2677:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@center:5443:size <= 0 |==> size == 0
2678:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@center:5443:size <= 0 |==> true
2679:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5443:str == null || size <= 0 |==> str == null != size <= 0
2680:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5443:str == null || size <= 0 |==> str == null
2681:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5443:str == null || size <= 0 |==> size <= 0
2682:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@center:5443:str == null || size <= 0 |==> true
2683:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5444:str |==> null
2684:COR:isEmpty(padStr):TRUE:org.apache.commons.lang3.StringUtils@center:5446:isEmpty(padStr) |==> false
2685:COR:isEmpty(padStr):FALSE:org.apache.commons.lang3.StringUtils@center:5446:isEmpty(padStr) |==> true
2686:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5447:padStr = SPACE |==> <NO-OP>
2687:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5449:str.length() |==> 0
2688:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5450:size - strLen |==> size % strLen
2689:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5450:size - strLen |==> size * strLen
2690:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@center:5450:size - strLen |==> size + strLen
2691:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@center:5450:size - strLen |==> size / strLen
2692:LVR:0:POS:org.apache.commons.lang3.StringUtils@center:5451:0 |==> 1
2693:LVR:0:NEG:org.apache.commons.lang3.StringUtils@center:5451:0 |==> -1
2694:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@center:5451:pads <= 0 |==> pads < 0
2695:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@center:5451:pads <= 0 |==> pads == 0
2696:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@center:5451:pads <= 0 |==> true
2697:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5452:str |==> null
2698:LVR:POS:0:org.apache.commons.lang3.StringUtils@center:5454:2 |==> 0
2699:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@center:5454:2 |==> -2
2700:AOR:/(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5454:pads / 2 |==> pads % 2
2701:AOR:/(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5454:pads / 2 |==> pads * 2
2702:AOR:/(int,int):+(int,int):org.apache.commons.lang3.StringUtils@center:5454:pads / 2 |==> pads + 2
2703:AOR:/(int,int):-(int,int):org.apache.commons.lang3.StringUtils@center:5454:pads / 2 |==> pads - 2
2704:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@center:5454:strLen + pads / 2 |==> strLen % (pads / 2)
2705:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@center:5454:strLen + pads / 2 |==> strLen * (pads / 2)
2706:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@center:5454:strLen + pads / 2 |==> strLen - pads / 2
2707:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@center:5454:strLen + pads / 2 |==> strLen / (pads / 2)
2708:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5454:str = leftPad(str, strLen + pads / 2, padStr) |==> <NO-OP>
2709:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5455:str = rightPad(str, size, padStr) |==> <NO-OP>
2710:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@center:5456:str |==> null
2711:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@upperCase:5481:str == null |==> false
2712:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@upperCase:5484:str.toUpperCase() |==> null
2713:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@upperCase:5504:str == null |==> false
2714:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@upperCase:5507:str.toUpperCase(locale) |==> null
2715:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lowerCase:5530:str == null |==> false
2716:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lowerCase:5533:str.toLowerCase() |==> null
2717:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@lowerCase:5553:str == null |==> false
2718:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@lowerCase:5556:str.toLowerCase(locale) |==> null
2719:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@capitalize:5581:str == null |==> false
2720:LVR:0:POS:org.apache.commons.lang3.StringUtils@capitalize:5581:0 |==> 1
2721:LVR:0:NEG:org.apache.commons.lang3.StringUtils@capitalize:5581:0 |==> -1
2722:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@capitalize:5581:(strLen = str.length()) == 0 |==> (strLen = str.length()) <= 0
2723:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@capitalize:5581:(strLen = str.length()) == 0 |==> (strLen = str.length()) >= 0
2724:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@capitalize:5581:str == null || (strLen = str.length()) == 0 |==> str == null != ((strLen = str.length()) == 0)
2725:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@capitalize:5581:str == null || (strLen = str.length()) == 0 |==> (strLen = str.length()) == 0
2726:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@capitalize:5582:str |==> null
2727:LVR:0:POS:org.apache.commons.lang3.StringUtils@capitalize:5585:0 |==> 1
2728:LVR:0:NEG:org.apache.commons.lang3.StringUtils@capitalize:5585:0 |==> -1
2729:COR:Character.isTitleCase(firstChar):TRUE:org.apache.commons.lang3.StringUtils@capitalize:5586:Character.isTitleCase(firstChar) |==> false
2730:COR:Character.isTitleCase(firstChar):FALSE:org.apache.commons.lang3.StringUtils@capitalize:5586:Character.isTitleCase(firstChar) |==> true
2731:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@capitalize:5588:str |==> null
2732:LVR:POS:0:org.apache.commons.lang3.StringUtils@capitalize:5593:1 |==> 0
2733:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@capitalize:5593:1 |==> -1
2734:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@uncapitalize:5619:str == null |==> false
2735:LVR:0:POS:org.apache.commons.lang3.StringUtils@uncapitalize:5619:0 |==> 1
2736:LVR:0:NEG:org.apache.commons.lang3.StringUtils@uncapitalize:5619:0 |==> -1
2737:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@uncapitalize:5619:(strLen = str.length()) == 0 |==> (strLen = str.length()) <= 0
2738:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@uncapitalize:5619:(strLen = str.length()) == 0 |==> (strLen = str.length()) >= 0
2739:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@uncapitalize:5619:str == null || (strLen = str.length()) == 0 |==> str == null != ((strLen = str.length()) == 0)
2740:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@uncapitalize:5619:str == null || (strLen = str.length()) == 0 |==> (strLen = str.length()) == 0
2741:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@uncapitalize:5620:str |==> null
2742:LVR:0:POS:org.apache.commons.lang3.StringUtils@uncapitalize:5623:0 |==> 1
2743:LVR:0:NEG:org.apache.commons.lang3.StringUtils@uncapitalize:5623:0 |==> -1
2744:COR:Character.isLowerCase(firstChar):TRUE:org.apache.commons.lang3.StringUtils@uncapitalize:5624:Character.isLowerCase(firstChar) |==> false
2745:COR:Character.isLowerCase(firstChar):FALSE:org.apache.commons.lang3.StringUtils@uncapitalize:5624:Character.isLowerCase(firstChar) |==> true
2746:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@uncapitalize:5626:str |==> null
2747:LVR:POS:0:org.apache.commons.lang3.StringUtils@uncapitalize:5631:1 |==> 0
2748:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@uncapitalize:5631:1 |==> -1
2749:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.StringUtils@swapCase:5663:StringUtils.isEmpty(str) |==> false
2750:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.StringUtils@swapCase:5663:StringUtils.isEmpty(str) |==> true
2751:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5664:str |==> null
2752:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5667:str.toCharArray() |==> null
2753:LVR:0:POS:org.apache.commons.lang3.StringUtils@swapCase:5669:0 |==> 1
2754:LVR:0:NEG:org.apache.commons.lang3.StringUtils@swapCase:5669:0 |==> -1
2755:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@swapCase:5669:i < buffer.length |==> i != buffer.length
2756:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@swapCase:5669:i < buffer.length |==> i <= buffer.length
2757:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@swapCase:5669:i < buffer.length |==> false
2758:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5670:buffer[i] |==> 0
2759:COR:Character.isUpperCase(ch):TRUE:org.apache.commons.lang3.StringUtils@swapCase:5671:Character.isUpperCase(ch) |==> false
2760:COR:Character.isUpperCase(ch):FALSE:org.apache.commons.lang3.StringUtils@swapCase:5671:Character.isUpperCase(ch) |==> true
2761:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5672:buffer[i] = Character.toLowerCase(ch) |==> <NO-OP>
2762:COR:Character.isTitleCase(ch):TRUE:org.apache.commons.lang3.StringUtils@swapCase:5673:Character.isTitleCase(ch) |==> false
2763:COR:Character.isTitleCase(ch):FALSE:org.apache.commons.lang3.StringUtils@swapCase:5673:Character.isTitleCase(ch) |==> true
2764:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5674:buffer[i] = Character.toLowerCase(ch) |==> <NO-OP>
2765:COR:Character.isLowerCase(ch):TRUE:org.apache.commons.lang3.StringUtils@swapCase:5675:Character.isLowerCase(ch) |==> false
2766:COR:Character.isLowerCase(ch):FALSE:org.apache.commons.lang3.StringUtils@swapCase:5675:Character.isLowerCase(ch) |==> true
2767:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5676:buffer[i] = Character.toUpperCase(ch) |==> <NO-OP>
2768:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@swapCase:5679:new String(buffer) |==> null
2769:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@countMatches:5705:isEmpty(str) || isEmpty(sub) |==> isEmpty(str) != isEmpty(sub)
2770:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@countMatches:5705:isEmpty(str) || isEmpty(sub) |==> isEmpty(str)
2771:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@countMatches:5705:isEmpty(str) || isEmpty(sub) |==> isEmpty(sub)
2772:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@countMatches:5705:isEmpty(str) || isEmpty(sub) |==> true
2773:LVR:0:POS:org.apache.commons.lang3.StringUtils@countMatches:5706:0 |==> 1
2774:LVR:0:NEG:org.apache.commons.lang3.StringUtils@countMatches:5706:0 |==> -1
2775:LVR:0:POS:org.apache.commons.lang3.StringUtils@countMatches:5708:0 |==> 1
2776:LVR:0:NEG:org.apache.commons.lang3.StringUtils@countMatches:5708:0 |==> -1
2777:LVR:0:POS:org.apache.commons.lang3.StringUtils@countMatches:5709:0 |==> 1
2778:LVR:0:NEG:org.apache.commons.lang3.StringUtils@countMatches:5709:0 |==> -1
2779:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@countMatches:5710:(idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND |==> (idx = CharSequenceUtils.indexOf(str, sub, idx)) < INDEX_NOT_FOUND
2780:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@countMatches:5710:(idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND |==> (idx = CharSequenceUtils.indexOf(str, sub, idx)) > INDEX_NOT_FOUND
2781:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@countMatches:5710:(idx = CharSequenceUtils.indexOf(str, sub, idx)) != INDEX_NOT_FOUND |==> true
2782:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.StringUtils@countMatches:5711:count++ |==> <NO-OP>
2783:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@countMatches:5712:idx += sub.length() |==> <NO-OP>
2784:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@countMatches:5714:count |==> 0
2785:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs == null |==> false
2786:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlpha:5740:0 |==> 1
2787:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlpha:5740:0 |==> -1
2788:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs.length() == 0 |==> cs.length() <= 0
2789:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs.length() == 0 |==> cs.length() >= 0
2790:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs.length() == 0 |==> false
2791:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs == null || cs.length() == 0 |==> cs == null != (cs.length() == 0)
2792:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs == null || cs.length() == 0 |==> cs == null
2793:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs == null || cs.length() == 0 |==> cs.length() == 0
2794:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5740:cs == null || cs.length() == 0 |==> true
2795:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlpha:5741:false |==> true
2796:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAlpha:5743:cs.length() |==> 0
2797:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlpha:5744:0 |==> 1
2798:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlpha:5744:0 |==> -1
2799:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5744:i < sz |==> i != sz
2800:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5744:i < sz |==> i <= sz
2801:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlpha:5744:i < sz |==> false
2802:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlpha:5745:false |==> true
2803:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5745:Character.isLetter(cs.charAt(i)) == false |==> false
2804:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5745:Character.isLetter(cs.charAt(i)) == false |==> Character.isLetter(cs.charAt(i))
2805:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlpha:5745:Character.isLetter(cs.charAt(i)) == false |==> false
2806:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlpha:5746:false |==> true
2807:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAlpha:5749:true |==> false
2808:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAlphaSpace:5775:cs == null |==> false
2809:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphaSpace:5776:false |==> true
2810:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAlphaSpace:5778:cs.length() |==> 0
2811:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlphaSpace:5779:0 |==> 1
2812:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlphaSpace:5779:0 |==> -1
2813:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5779:i < sz |==> i != sz
2814:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5779:i < sz |==> i <= sz
2815:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5779:i < sz |==> false
2816:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:false |==> true
2817:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false |==> false
2818:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false |==> Character.isLetter(cs.charAt(i))
2819:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false |==> false
2820:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:cs.charAt(i) != ' ' |==> cs.charAt(i) < ' '
2821:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:cs.charAt(i) != ' ' |==> cs.charAt(i) > ' '
2822:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:cs.charAt(i) != ' ' |==> true
2823:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isLetter(cs.charAt(i)) == false == (cs.charAt(i) != ' ')
2824:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> false
2825:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isLetter(cs.charAt(i)) == false
2826:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphaSpace:5780:Character.isLetter(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> cs.charAt(i) != ' '
2827:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphaSpace:5781:false |==> true
2828:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAlphaSpace:5784:true |==> false
2829:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs == null |==> false
2830:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:0 |==> 1
2831:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:0 |==> -1
2832:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs.length() == 0 |==> cs.length() <= 0
2833:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs.length() == 0 |==> cs.length() >= 0
2834:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs.length() == 0 |==> false
2835:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs == null || cs.length() == 0 |==> cs == null != (cs.length() == 0)
2836:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs == null || cs.length() == 0 |==> cs == null
2837:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs == null || cs.length() == 0 |==> cs.length() == 0
2838:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5810:cs == null || cs.length() == 0 |==> true
2839:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumeric:5811:false |==> true
2840:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAlphanumeric:5813:cs.length() |==> 0
2841:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlphanumeric:5814:0 |==> 1
2842:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlphanumeric:5814:0 |==> -1
2843:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5814:i < sz |==> i != sz
2844:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5814:i < sz |==> i <= sz
2845:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlphanumeric:5814:i < sz |==> false
2846:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumeric:5815:false |==> true
2847:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5815:Character.isLetterOrDigit(cs.charAt(i)) == false |==> false
2848:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5815:Character.isLetterOrDigit(cs.charAt(i)) == false |==> Character.isLetterOrDigit(cs.charAt(i))
2849:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumeric:5815:Character.isLetterOrDigit(cs.charAt(i)) == false |==> false
2850:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumeric:5816:false |==> true
2851:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAlphanumeric:5819:true |==> false
2852:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5845:cs == null |==> false
2853:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5846:false |==> true
2854:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5848:cs.length() |==> 0
2855:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5849:0 |==> 1
2856:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5849:0 |==> -1
2857:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5849:i < sz |==> i != sz
2858:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5849:i < sz |==> i <= sz
2859:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5849:i < sz |==> false
2860:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:false |==> true
2861:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false |==> false
2862:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false |==> Character.isLetterOrDigit(cs.charAt(i))
2863:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false |==> false
2864:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:cs.charAt(i) != ' ' |==> cs.charAt(i) < ' '
2865:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:cs.charAt(i) != ' ' |==> cs.charAt(i) > ' '
2866:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:cs.charAt(i) != ' ' |==> true
2867:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isLetterOrDigit(cs.charAt(i)) == false == (cs.charAt(i) != ' ')
2868:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> false
2869:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isLetterOrDigit(cs.charAt(i)) == false
2870:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5850:Character.isLetterOrDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> cs.charAt(i) != ' '
2871:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5851:false |==> true
2872:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAlphanumericSpace:5854:true |==> false
2873:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5884:cs == null |==> false
2874:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5885:false |==> true
2875:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5887:cs.length() |==> 0
2876:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5888:0 |==> 1
2877:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5888:0 |==> -1
2878:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5888:i < sz |==> i != sz
2879:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5888:i < sz |==> i <= sz
2880:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5888:i < sz |==> false
2881:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5889:false |==> true
2882:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5889:CharUtils.isAsciiPrintable(cs.charAt(i)) == false |==> false
2883:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5889:CharUtils.isAsciiPrintable(cs.charAt(i)) == false |==> CharUtils.isAsciiPrintable(cs.charAt(i))
2884:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAsciiPrintable:5889:CharUtils.isAsciiPrintable(cs.charAt(i)) == false |==> false
2885:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5890:false |==> true
2886:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAsciiPrintable:5893:true |==> false
2887:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs == null |==> false
2888:LVR:0:POS:org.apache.commons.lang3.StringUtils@isNumeric:5927:0 |==> 1
2889:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isNumeric:5927:0 |==> -1
2890:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs.length() == 0 |==> cs.length() <= 0
2891:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs.length() == 0 |==> cs.length() >= 0
2892:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs.length() == 0 |==> false
2893:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs == null || cs.length() == 0 |==> cs == null != (cs.length() == 0)
2894:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs == null || cs.length() == 0 |==> cs == null
2895:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs == null || cs.length() == 0 |==> cs.length() == 0
2896:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5927:cs == null || cs.length() == 0 |==> true
2897:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumeric:5928:false |==> true
2898:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isNumeric:5930:cs.length() |==> 0
2899:LVR:0:POS:org.apache.commons.lang3.StringUtils@isNumeric:5931:0 |==> 1
2900:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isNumeric:5931:0 |==> -1
2901:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5931:i < sz |==> i != sz
2902:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5931:i < sz |==> i <= sz
2903:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isNumeric:5931:i < sz |==> false
2904:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumeric:5932:false |==> true
2905:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5932:Character.isDigit(cs.charAt(i)) == false |==> false
2906:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5932:Character.isDigit(cs.charAt(i)) == false |==> Character.isDigit(cs.charAt(i))
2907:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumeric:5932:Character.isDigit(cs.charAt(i)) == false |==> false
2908:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumeric:5933:false |==> true
2909:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isNumeric:5936:true |==> false
2910:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isNumericSpace:5964:cs == null |==> false
2911:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumericSpace:5965:false |==> true
2912:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isNumericSpace:5967:cs.length() |==> 0
2913:LVR:0:POS:org.apache.commons.lang3.StringUtils@isNumericSpace:5968:0 |==> 1
2914:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isNumericSpace:5968:0 |==> -1
2915:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5968:i < sz |==> i != sz
2916:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5968:i < sz |==> i <= sz
2917:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5968:i < sz |==> false
2918:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumericSpace:5969:false |==> true
2919:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false |==> false
2920:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false |==> Character.isDigit(cs.charAt(i))
2921:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false |==> false
2922:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:cs.charAt(i) != ' ' |==> cs.charAt(i) < ' '
2923:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:cs.charAt(i) != ' ' |==> cs.charAt(i) > ' '
2924:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:cs.charAt(i) != ' ' |==> true
2925:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isDigit(cs.charAt(i)) == false == (cs.charAt(i) != ' ')
2926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> false
2927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> Character.isDigit(cs.charAt(i)) == false
2928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isNumericSpace:5969:Character.isDigit(cs.charAt(i)) == false && cs.charAt(i) != ' ' |==> cs.charAt(i) != ' '
2929:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isNumericSpace:5970:false |==> true
2930:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isNumericSpace:5973:true |==> false
2931:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isWhitespace:5997:cs == null |==> false
2932:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isWhitespace:5998:false |==> true
2933:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isWhitespace:6000:cs.length() |==> 0
2934:LVR:0:POS:org.apache.commons.lang3.StringUtils@isWhitespace:6001:0 |==> 1
2935:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isWhitespace:6001:0 |==> -1
2936:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isWhitespace:6001:i < sz |==> i != sz
2937:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isWhitespace:6001:i < sz |==> i <= sz
2938:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isWhitespace:6001:i < sz |==> false
2939:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isWhitespace:6002:false |==> true
2940:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isWhitespace:6002:Character.isWhitespace(cs.charAt(i)) == false |==> false
2941:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isWhitespace:6002:Character.isWhitespace(cs.charAt(i)) == false |==> Character.isWhitespace(cs.charAt(i))
2942:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isWhitespace:6002:Character.isWhitespace(cs.charAt(i)) == false |==> false
2943:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isWhitespace:6003:false |==> true
2944:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isWhitespace:6006:true |==> false
2945:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAllLowerCase:6029:cs == null |==> false
2946:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6029:cs == null || isEmpty(cs) |==> cs == null != isEmpty(cs)
2947:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6029:cs == null || isEmpty(cs) |==> cs == null
2948:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6029:cs == null || isEmpty(cs) |==> isEmpty(cs)
2949:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6029:cs == null || isEmpty(cs) |==> true
2950:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllLowerCase:6030:false |==> true
2951:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAllLowerCase:6032:cs.length() |==> 0
2952:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAllLowerCase:6033:0 |==> 1
2953:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAllLowerCase:6033:0 |==> -1
2954:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAllLowerCase:6033:i < sz |==> i != sz
2955:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAllLowerCase:6033:i < sz |==> i <= sz
2956:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAllLowerCase:6033:i < sz |==> false
2957:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllLowerCase:6034:false |==> true
2958:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6034:Character.isLowerCase(cs.charAt(i)) == false |==> false
2959:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6034:Character.isLowerCase(cs.charAt(i)) == false |==> Character.isLowerCase(cs.charAt(i))
2960:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllLowerCase:6034:Character.isLowerCase(cs.charAt(i)) == false |==> false
2961:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllLowerCase:6035:false |==> true
2962:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAllLowerCase:6038:true |==> false
2963:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@isAllUpperCase:6061:cs == null |==> false
2964:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6061:cs == null || isEmpty(cs) |==> cs == null != isEmpty(cs)
2965:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6061:cs == null || isEmpty(cs) |==> cs == null
2966:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6061:cs == null || isEmpty(cs) |==> isEmpty(cs)
2967:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6061:cs == null || isEmpty(cs) |==> true
2968:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllUpperCase:6062:false |==> true
2969:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@isAllUpperCase:6064:cs.length() |==> 0
2970:LVR:0:POS:org.apache.commons.lang3.StringUtils@isAllUpperCase:6065:0 |==> 1
2971:LVR:0:NEG:org.apache.commons.lang3.StringUtils@isAllUpperCase:6065:0 |==> -1
2972:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@isAllUpperCase:6065:i < sz |==> i != sz
2973:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@isAllUpperCase:6065:i < sz |==> i <= sz
2974:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@isAllUpperCase:6065:i < sz |==> false
2975:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllUpperCase:6066:false |==> true
2976:ROR:==(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6066:Character.isUpperCase(cs.charAt(i)) == false |==> false
2977:ROR:==(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6066:Character.isUpperCase(cs.charAt(i)) == false |==> Character.isUpperCase(cs.charAt(i))
2978:ROR:==(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@isAllUpperCase:6066:Character.isUpperCase(cs.charAt(i)) == false |==> false
2979:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@isAllUpperCase:6067:false |==> true
2980:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@isAllUpperCase:6070:true |==> false
2981:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@defaultString:6092:str == null |==> false
2982:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@defaultString:6113:str == null |==> false
2983:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@defaultIfBlank:6135:StringUtils.isBlank(str) ? defaultStr : str |==> null
2984:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@defaultIfEmpty:6157:StringUtils.isEmpty(str) ? defaultStr : str |==> null
2985:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@reverse:6177:str == null |==> false
2986:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@reverse:6180:new StringBuilder(str).reverse().toString() |==> null
2987:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@reverseDelimited:6203:str == null |==> false
2988:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@reverseDelimited:6208:split(str, separatorChar) |==> null
2989:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@reverseDelimited:6209:ArrayUtils.reverse(strs) |==> <NO-OP>
2990:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@reverseDelimited:6210:join(strs, separatorChar) |==> null
2991:LVR:0:POS:org.apache.commons.lang3.StringUtils@abbreviate:6248:0 |==> 1
2992:LVR:0:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6248:0 |==> -1
2993:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@abbreviate:6287:str == null |==> false
2994:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6290:4 |==> 0
2995:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6290:4 |==> -4
2996:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6290:maxWidth < 4 |==> maxWidth != 4
2997:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6290:maxWidth < 4 |==> maxWidth <= 4
2998:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6290:maxWidth < 4 |==> false
2999:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@abbreviate:6291:"Minimum abbreviation width is 4" |==> null
3000:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6293:str.length() <= maxWidth |==> str.length() < maxWidth
3001:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6293:str.length() <= maxWidth |==> str.length() == maxWidth
3002:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6293:str.length() <= maxWidth |==> true
3003:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviate:6294:str |==> null
3004:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6296:offset > str.length() |==> offset != str.length()
3005:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6296:offset > str.length() |==> offset >= str.length()
3006:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6296:offset > str.length() |==> false
3007:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviate:6297:offset = str.length() |==> <NO-OP>
3008:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset |==> str.length() % offset
3009:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset |==> str.length() * offset
3010:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset |==> str.length() + offset
3011:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset |==> str.length() / offset
3012:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6299:3 |==> 0
3013:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6299:3 |==> -3
3014:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:maxWidth - 3 |==> maxWidth % 3
3015:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:maxWidth - 3 |==> maxWidth * 3
3016:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:maxWidth - 3 |==> maxWidth + 3
3017:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:maxWidth - 3 |==> maxWidth / 3
3018:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset < maxWidth - 3 |==> str.length() - offset != maxWidth - 3
3019:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset < maxWidth - 3 |==> str.length() - offset <= maxWidth - 3
3020:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6299:str.length() - offset < maxWidth - 3 |==> false
3021:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6300:3 |==> 0
3022:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6300:3 |==> -3
3023:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:maxWidth - 3 |==> maxWidth % 3
3024:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:maxWidth - 3 |==> maxWidth * 3
3025:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:maxWidth - 3 |==> maxWidth + 3
3026:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:maxWidth - 3 |==> maxWidth / 3
3027:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:str.length() - (maxWidth - 3) |==> str.length() % (maxWidth - 3)
3028:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:str.length() - (maxWidth - 3) |==> str.length() * (maxWidth - 3)
3029:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:str.length() - (maxWidth - 3) |==> str.length() + (maxWidth - 3)
3030:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6300:str.length() - (maxWidth - 3) |==> str.length() / (maxWidth - 3)
3031:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviate:6300:offset = str.length() - (maxWidth - 3) |==> <NO-OP>
3032:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviate:6302:"..." |==> null
3033:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6303:4 |==> 0
3034:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6303:4 |==> -4
3035:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6303:offset <= 4 |==> offset < 4
3036:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6303:offset <= 4 |==> offset == 4
3037:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6303:offset <= 4 |==> true
3038:LVR:0:POS:org.apache.commons.lang3.StringUtils@abbreviate:6304:0 |==> 1
3039:LVR:0:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6304:0 |==> -1
3040:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6304:3 |==> 0
3041:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6304:3 |==> -3
3042:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6304:maxWidth - 3 |==> maxWidth % 3
3043:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6304:maxWidth - 3 |==> maxWidth * 3
3044:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6304:maxWidth - 3 |==> maxWidth + 3
3045:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6304:maxWidth - 3 |==> maxWidth / 3
3046:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6306:7 |==> 0
3047:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6306:7 |==> -7
3048:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6306:maxWidth < 7 |==> maxWidth != 7
3049:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6306:maxWidth < 7 |==> maxWidth <= 7
3050:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6306:maxWidth < 7 |==> false
3051:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@abbreviate:6307:"Minimum abbreviation width with offset is 7" |==> null
3052:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth |==> offset % maxWidth
3053:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth |==> offset * maxWidth
3054:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth |==> offset - maxWidth
3055:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth |==> offset / maxWidth
3056:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6309:3 |==> 0
3057:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6309:3 |==> -3
3058:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 |==> (offset + maxWidth) % 3
3059:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 |==> (offset + maxWidth) * 3
3060:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 |==> offset + maxWidth + 3
3061:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 |==> (offset + maxWidth) / 3
3062:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 < str.length() |==> offset + maxWidth - 3 != str.length()
3063:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 < str.length() |==> offset + maxWidth - 3 <= str.length()
3064:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6309:offset + maxWidth - 3 < str.length() |==> false
3065:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6310:3 |==> 0
3066:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6310:3 |==> -3
3067:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6310:maxWidth - 3 |==> maxWidth % 3
3068:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6310:maxWidth - 3 |==> maxWidth * 3
3069:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6310:maxWidth - 3 |==> maxWidth + 3
3070:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6310:maxWidth - 3 |==> maxWidth / 3
3071:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviate:6312:3 |==> 0
3072:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviate:6312:3 |==> -3
3073:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:maxWidth - 3 |==> maxWidth % 3
3074:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:maxWidth - 3 |==> maxWidth * 3
3075:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:maxWidth - 3 |==> maxWidth + 3
3076:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:maxWidth - 3 |==> maxWidth / 3
3077:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:str.length() - (maxWidth - 3) |==> str.length() % (maxWidth - 3)
3078:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:str.length() - (maxWidth - 3) |==> str.length() * (maxWidth - 3)
3079:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:str.length() - (maxWidth - 3) |==> str.length() + (maxWidth - 3)
3080:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviate:6312:str.length() - (maxWidth - 3) |==> str.length() / (maxWidth - 3)
3081:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6345:isEmpty(str) || isEmpty(middle) |==> isEmpty(str) != isEmpty(middle)
3082:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6345:isEmpty(str) || isEmpty(middle) |==> isEmpty(str)
3083:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6345:isEmpty(str) || isEmpty(middle) |==> isEmpty(middle)
3084:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6345:isEmpty(str) || isEmpty(middle) |==> true
3085:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6346:str |==> null
3086:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() |==> length == str.length()
3087:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() |==> length > str.length()
3088:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() |==> true
3089:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:2 |==> 0
3090:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:2 |==> -2
3091:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:middle.length() + 2 |==> middle.length() % 2
3092:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:middle.length() + 2 |==> middle.length() * 2
3093:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:middle.length() + 2 |==> middle.length() - 2
3094:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:middle.length() + 2 |==> middle.length() / 2
3095:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length < middle.length() + 2 |==> length != middle.length() + 2
3096:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length < middle.length() + 2 |==> length <= middle.length() + 2
3097:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length < middle.length() + 2 |==> false
3098:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() || length < middle.length() + 2 |==> length >= str.length() != length < middle.length() + 2
3099:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() || length < middle.length() + 2 |==> length >= str.length()
3100:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() || length < middle.length() + 2 |==> length < middle.length() + 2
3101:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6349:length >= str.length() || length < middle.length() + 2 |==> true
3102:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6350:str |==> null
3103:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6353:length - middle.length() |==> length % middle.length()
3104:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6353:length - middle.length() |==> length * middle.length()
3105:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6353:length - middle.length() |==> length + middle.length()
3106:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6353:length - middle.length() |==> length / middle.length()
3107:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:2 |==> 0
3108:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:2 |==> -2
3109:AOR:/(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 |==> targetSting % 2
3110:AOR:/(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 |==> targetSting * 2
3111:AOR:/(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 |==> targetSting + 2
3112:AOR:/(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 |==> targetSting - 2
3113:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:2 |==> 0
3114:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:2 |==> -2
3115:AOR:%(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting % 2 |==> targetSting * 2
3116:AOR:%(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting % 2 |==> targetSting + 2
3117:AOR:%(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting % 2 |==> targetSting - 2
3118:AOR:%(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting % 2 |==> targetSting / 2
3119:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 + targetSting % 2 |==> targetSting / 2 % (targetSting % 2)
3120:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 + targetSting % 2 |==> targetSting / 2 * (targetSting % 2)
3121:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 + targetSting % 2 |==> targetSting / 2 - targetSting % 2
3122:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6354:targetSting / 2 + targetSting % 2 |==> targetSting / 2 / (targetSting % 2)
3123:LVR:POS:0:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:2 |==> 0
3124:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:2 |==> -2
3125:AOR:/(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:targetSting / 2 |==> targetSting % 2
3126:AOR:/(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:targetSting / 2 |==> targetSting * 2
3127:AOR:/(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:targetSting / 2 |==> targetSting + 2
3128:AOR:/(int,int):-(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:targetSting / 2 |==> targetSting - 2
3129:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:str.length() - targetSting / 2 |==> str.length() % (targetSting / 2)
3130:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:str.length() - targetSting / 2 |==> str.length() * (targetSting / 2)
3131:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:str.length() - targetSting / 2 |==> str.length() + targetSting / 2
3132:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@abbreviateMiddle:6355:str.length() - targetSting / 2 |==> str.length() / (targetSting / 2)
3133:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6357:new StringBuilder(length) |==> null
3134:LVR:0:POS:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6358:0 |==> 1
3135:LVR:0:NEG:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6358:0 |==> -1
3136:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6358:builder.append(str.substring(0, startOffset)) |==> <NO-OP>
3137:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6359:builder.append(middle) |==> <NO-OP>
3138:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6360:builder.append(str.substring(endOffset)) |==> <NO-OP>
3139:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@abbreviateMiddle:6362:builder.toString() |==> null
3140:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@difference:6396:str1 == null |==> false
3141:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@difference:6397:str2 |==> null
3142:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@difference:6399:str2 == null |==> false
3143:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@difference:6400:str1 |==> null
3144:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@difference:6402:indexOfDifference(str1, str2) |==> 0
3145:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@difference:6403:at == INDEX_NOT_FOUND |==> at <= INDEX_NOT_FOUND
3146:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@difference:6403:at == INDEX_NOT_FOUND |==> at >= INDEX_NOT_FOUND
3147:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@difference:6403:at == INDEX_NOT_FOUND |==> false
3148:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@difference:6404:EMPTY |==> null
3149:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@difference:6406:str2.substring(at) |==> null
3150:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfDifference:6435:cs1 == cs2 |==> false
3151:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6436:INDEX_NOT_FOUND |==> 0
3152:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs1 == null |==> false
3153:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs2 == null |==> false
3154:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs1 == null || cs2 == null |==> cs1 == null != (cs2 == null)
3155:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs1 == null || cs2 == null |==> cs1 == null
3156:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs1 == null || cs2 == null |==> cs2 == null
3157:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6438:cs1 == null || cs2 == null |==> true
3158:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6439:0 |==> 1
3159:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6439:0 |==> -1
3160:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6442:0 |==> 1
3161:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6442:0 |==> -1
3162:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() |==> i != cs1.length()
3163:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() |==> i <= cs1.length()
3164:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() |==> false
3165:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs2.length() |==> i != cs2.length()
3166:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs2.length() |==> i <= cs2.length()
3167:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs2.length() |==> false
3168:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() && i < cs2.length() |==> i < cs1.length() == i < cs2.length()
3169:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() && i < cs2.length() |==> false
3170:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() && i < cs2.length() |==> i < cs1.length()
3171:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6442:i < cs1.length() && i < cs2.length() |==> i < cs2.length()
3172:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6443:cs1.charAt(i) != cs2.charAt(i) |==> cs1.charAt(i) < cs2.charAt(i)
3173:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6443:cs1.charAt(i) != cs2.charAt(i) |==> cs1.charAt(i) > cs2.charAt(i)
3174:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6443:cs1.charAt(i) != cs2.charAt(i) |==> true
3175:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6444:break; |==> <NO-OP>
3176:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() |==> i != cs2.length()
3177:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() |==> i <= cs2.length()
3178:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() |==> false
3179:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs1.length() |==> i != cs1.length()
3180:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs1.length() |==> i <= cs1.length()
3181:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs1.length() |==> false
3182:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() || i < cs1.length() |==> i < cs2.length() != i < cs1.length()
3183:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() || i < cs1.length() |==> i < cs2.length()
3184:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() || i < cs1.length() |==> i < cs1.length()
3185:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6447:i < cs2.length() || i < cs1.length() |==> true
3186:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6448:i |==> 0
3187:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6450:INDEX_NOT_FOUND |==> 0
3188:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css == null |==> false
3189:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfDifference:6486:1 |==> 0
3190:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6486:1 |==> -1
3191:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css.length <= 1 |==> css.length < 1
3192:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css.length <= 1 |==> css.length == 1
3193:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css.length <= 1 |==> true
3194:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css == null || css.length <= 1 |==> css == null != css.length <= 1
3195:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css == null || css.length <= 1 |==> css == null
3196:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css == null || css.length <= 1 |==> css.length <= 1
3197:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6486:css == null || css.length <= 1 |==> true
3198:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6487:INDEX_NOT_FOUND |==> 0
3199:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@indexOfDifference:6489:false |==> true
3200:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@indexOfDifference:6490:true |==> false
3201:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6491:css.length |==> 0
3202:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6492:Integer.MAX_VALUE |==> 0
3203:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6493:0 |==> 1
3204:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6493:0 |==> -1
3205:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6498:0 |==> 1
3206:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6498:0 |==> -1
3207:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6498:i < arrayLen |==> i != arrayLen
3208:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6498:i < arrayLen |==> i <= arrayLen
3209:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6498:i < arrayLen |==> false
3210:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@indexOfDifference:6499:css[i] == null |==> false
3211:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@indexOfDifference:6500:true |==> false
3212:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6500:anyStringNull = true |==> <NO-OP>
3213:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6501:0 |==> 1
3214:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6501:0 |==> -1
3215:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6501:shortestStrLen = 0 |==> <NO-OP>
3216:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@indexOfDifference:6503:false |==> true
3217:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6503:allStringsNull = false |==> <NO-OP>
3218:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6504:shortestStrLen = Math.min(css[i].length(), shortestStrLen) |==> <NO-OP>
3219:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6505:longestStrLen = Math.max(css[i].length(), longestStrLen) |==> <NO-OP>
3220:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6510:0 |==> 1
3221:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6510:0 |==> -1
3222:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 |==> longestStrLen <= 0
3223:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 |==> longestStrLen >= 0
3224:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 |==> false
3225:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 && !anyStringNull |==> longestStrLen == 0 == !anyStringNull
3226:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 && !anyStringNull |==> false
3227:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 && !anyStringNull |==> longestStrLen == 0
3228:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:longestStrLen == 0 && !anyStringNull |==> !anyStringNull
3229:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:allStringsNull || longestStrLen == 0 && !anyStringNull |==> allStringsNull != (longestStrLen == 0 && !anyStringNull)
3230:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:allStringsNull || longestStrLen == 0 && !anyStringNull |==> allStringsNull
3231:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:allStringsNull || longestStrLen == 0 && !anyStringNull |==> longestStrLen == 0 && !anyStringNull
3232:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6510:allStringsNull || longestStrLen == 0 && !anyStringNull |==> true
3233:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6511:INDEX_NOT_FOUND |==> 0
3234:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6515:0 |==> 1
3235:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6515:0 |==> -1
3236:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6515:shortestStrLen == 0 |==> shortestStrLen <= 0
3237:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6515:shortestStrLen == 0 |==> shortestStrLen >= 0
3238:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6515:shortestStrLen == 0 |==> false
3239:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6516:0 |==> 1
3240:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6516:0 |==> -1
3241:LVR:NEG:0:org.apache.commons.lang3.StringUtils@indexOfDifference:6520:-1 |==> 0
3242:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6520:-1 |==> 1
3243:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6521:0 |==> 1
3244:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6521:0 |==> -1
3245:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6521:stringPos < shortestStrLen |==> stringPos != shortestStrLen
3246:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6521:stringPos < shortestStrLen |==> stringPos <= shortestStrLen
3247:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6521:stringPos < shortestStrLen |==> false
3248:LVR:0:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6522:0 |==> 1
3249:LVR:0:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6522:0 |==> -1
3250:LVR:POS:0:org.apache.commons.lang3.StringUtils@indexOfDifference:6523:1 |==> 0
3251:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@indexOfDifference:6523:1 |==> -1
3252:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6523:arrayPos < arrayLen |==> arrayPos != arrayLen
3253:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6523:arrayPos < arrayLen |==> arrayPos <= arrayLen
3254:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6523:arrayPos < arrayLen |==> false
3255:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6524:css[arrayPos].charAt(stringPos) != comparisonChar |==> css[arrayPos].charAt(stringPos) < comparisonChar
3256:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6524:css[arrayPos].charAt(stringPos) != comparisonChar |==> css[arrayPos].charAt(stringPos) > comparisonChar
3257:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6524:css[arrayPos].charAt(stringPos) != comparisonChar |==> true
3258:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6525:firstDiff = stringPos |==> <NO-OP>
3259:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6526:break; |==> <NO-OP>
3260:LVR:NEG:0:org.apache.commons.lang3.StringUtils@indexOfDifference:6529:-1 |==> 0
3261:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6529:-1 |==> 1
3262:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6529:firstDiff != -1 |==> firstDiff < -1
3263:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6529:firstDiff != -1 |==> firstDiff > -1
3264:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6529:firstDiff != -1 |==> true
3265:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6530:break; |==> <NO-OP>
3266:LVR:NEG:0:org.apache.commons.lang3.StringUtils@indexOfDifference:6534:-1 |==> 0
3267:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@indexOfDifference:6534:-1 |==> 1
3268:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 |==> firstDiff <= -1
3269:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 |==> firstDiff >= -1
3270:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 |==> false
3271:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:shortestStrLen != longestStrLen |==> shortestStrLen < longestStrLen
3272:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:shortestStrLen != longestStrLen |==> shortestStrLen > longestStrLen
3273:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:shortestStrLen != longestStrLen |==> true
3274:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 && shortestStrLen != longestStrLen |==> firstDiff == -1 == (shortestStrLen != longestStrLen)
3275:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 && shortestStrLen != longestStrLen |==> false
3276:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 && shortestStrLen != longestStrLen |==> firstDiff == -1
3277:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@indexOfDifference:6534:firstDiff == -1 && shortestStrLen != longestStrLen |==> shortestStrLen != longestStrLen
3278:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6538:shortestStrLen |==> 0
3279:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@indexOfDifference:6540:firstDiff |==> 0
3280:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs == null |==> false
3281:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:0 |==> 1
3282:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:0 |==> -1
3283:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs.length == 0 |==> strs.length <= 0
3284:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs.length == 0 |==> strs.length >= 0
3285:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs.length == 0 |==> false
3286:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs == null || strs.length == 0 |==> strs == null != (strs.length == 0)
3287:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs == null || strs.length == 0 |==> strs == null
3288:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs == null || strs.length == 0 |==> strs.length == 0
3289:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@getCommonPrefix:6577:strs == null || strs.length == 0 |==> true
3290:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getCommonPrefix:6578:EMPTY |==> null
3291:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getCommonPrefix:6580:indexOfDifference(strs) |==> 0
3292:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6581:smallestIndexOfDiff == INDEX_NOT_FOUND |==> smallestIndexOfDiff <= INDEX_NOT_FOUND
3293:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6581:smallestIndexOfDiff == INDEX_NOT_FOUND |==> smallestIndexOfDiff >= INDEX_NOT_FOUND
3294:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6581:smallestIndexOfDiff == INDEX_NOT_FOUND |==> false
3295:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6583:0 |==> 1
3296:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6583:0 |==> -1
3297:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getCommonPrefix:6583:strs[0] == null |==> false
3298:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getCommonPrefix:6584:EMPTY |==> null
3299:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6586:0 |==> 1
3300:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6586:0 |==> -1
3301:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6587:0 |==> 1
3302:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6587:0 |==> -1
3303:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6587:smallestIndexOfDiff == 0 |==> smallestIndexOfDiff <= 0
3304:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6587:smallestIndexOfDiff == 0 |==> smallestIndexOfDiff >= 0
3305:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getCommonPrefix:6587:smallestIndexOfDiff == 0 |==> false
3306:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getCommonPrefix:6589:EMPTY |==> null
3307:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6592:0 |==> 1
3308:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6592:0 |==> -1
3309:LVR:0:POS:org.apache.commons.lang3.StringUtils@getCommonPrefix:6592:0 |==> 1
3310:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getCommonPrefix:6592:0 |==> -1
3311:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:s == null |==> false
3312:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:t == null |==> false
3313:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:s == null || t == null |==> s == null != (t == null)
3314:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:s == null || t == null |==> s == null
3315:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:s == null || t == null |==> t == null
3316:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6635:s == null || t == null |==> true
3317:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6636:"Strings must not be null" |==> null
3318:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6656:s.length() |==> 0
3319:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6657:t.length() |==> 0
3320:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6659:0 |==> 1
3321:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6659:0 |==> -1
3322:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6659:n == 0 |==> n <= 0
3323:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6659:n == 0 |==> n >= 0
3324:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6659:n == 0 |==> false
3325:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6660:m |==> 0
3326:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6661:0 |==> 1
3327:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6661:0 |==> -1
3328:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6661:m == 0 |==> m <= 0
3329:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6661:m == 0 |==> m >= 0
3330:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6661:m == 0 |==> false
3331:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6662:n |==> 0
3332:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6665:n > m |==> n != m
3333:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6665:n > m |==> n >= m
3334:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6665:n > m |==> false
3335:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6667:s |==> null
3336:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6668:s = t |==> <NO-OP>
3337:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6669:t = tmp |==> <NO-OP>
3338:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6670:n = m |==> <NO-OP>
3339:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6671:m = t.length() |==> <NO-OP>
3340:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:1 |==> 0
3341:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:1 |==> -1
3342:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:n + 1 |==> n % 1
3343:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:n + 1 |==> n * 1
3344:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:n + 1 |==> n - 1
3345:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6674:n + 1 |==> n / 1
3346:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:1 |==> 0
3347:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:1 |==> -1
3348:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:n + 1 |==> n % 1
3349:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:n + 1 |==> n * 1
3350:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:n + 1 |==> n - 1
3351:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6675:n + 1 |==> n / 1
3352:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6686:0 |==> 1
3353:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6686:0 |==> -1
3354:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6686:i <= n |==> i < n
3355:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6686:i <= n |==> i == n
3356:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6686:i <= n |==> true
3357:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6687:p[i] = i |==> <NO-OP>
3358:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6690:1 |==> 0
3359:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6690:1 |==> -1
3360:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6690:j <= m |==> j < m
3361:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6690:j <= m |==> j == m
3362:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6690:j <= m |==> true
3363:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:1 |==> 0
3364:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:1 |==> -1
3365:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:j - 1 |==> j % 1
3366:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:j - 1 |==> j * 1
3367:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:j - 1 |==> j + 1
3368:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6691:j - 1 |==> j / 1
3369:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6692:0 |==> 1
3370:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6692:0 |==> -1
3371:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6692:d[0] = j |==> <NO-OP>
3372:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:1 |==> 0
3373:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:1 |==> -1
3374:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:i = 1 |==> <NO-OP>
3375:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:i <= n |==> i < n
3376:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:i <= n |==> i == n
3377:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6694:i <= n |==> true
3378:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:1 |==> 0
3379:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:1 |==> -1
3380:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:i - 1 |==> i % 1
3381:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:i - 1 |==> i * 1
3382:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:i - 1 |==> i + 1
3383:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:i - 1 |==> i / 1
3384:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:s.charAt(i - 1) == t_j |==> s.charAt(i - 1) <= t_j
3385:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:s.charAt(i - 1) == t_j |==> s.charAt(i - 1) >= t_j
3386:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:s.charAt(i - 1) == t_j |==> false
3387:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:0 |==> 1
3388:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:0 |==> -1
3389:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:1 |==> 0
3390:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6695:1 |==> -1
3391:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> 0
3392:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> -1
3393:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i % 1
3394:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i * 1
3395:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i + 1
3396:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i / 1
3397:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> 0
3398:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> -1
3399:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:d[i - 1] + 1 |==> d[i - 1] % 1
3400:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:d[i - 1] + 1 |==> d[i - 1] * 1
3401:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:d[i - 1] + 1 |==> d[i - 1] - 1
3402:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:d[i - 1] + 1 |==> d[i - 1] / 1
3403:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> 0
3404:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> -1
3405:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i] + 1 |==> p[i] % 1
3406:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i] + 1 |==> p[i] * 1
3407:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i] + 1 |==> p[i] - 1
3408:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i] + 1 |==> p[i] / 1
3409:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> 0
3410:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:1 |==> -1
3411:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i % 1
3412:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i * 1
3413:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i + 1
3414:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:i - 1 |==> i / 1
3415:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i - 1] + cost |==> p[i - 1] % cost
3416:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i - 1] + cost |==> p[i - 1] * cost
3417:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i - 1] + cost |==> p[i - 1] - cost
3418:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:p[i - 1] + cost |==> p[i - 1] / cost
3419:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6697:d[i] = Math.min(Math.min(d[i - 1] + 1, p[i] + 1), p[i - 1] + cost) |==> <NO-OP>
3420:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6701:p |==> null
3421:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6702:p = d |==> <NO-OP>
3422:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6703:d = _d |==> <NO-OP>
3423:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6708:p[n] |==> 0
3424:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:s == null |==> false
3425:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:t == null |==> false
3426:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:s == null || t == null |==> s == null != (t == null)
3427:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:s == null || t == null |==> s == null
3428:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:s == null || t == null |==> t == null
3429:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6744:s == null || t == null |==> true
3430:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6745:"Strings must not be null" |==> null
3431:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6747:0 |==> 1
3432:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6747:0 |==> -1
3433:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6747:threshold < 0 |==> threshold != 0
3434:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6747:threshold < 0 |==> threshold <= 0
3435:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6747:threshold < 0 |==> false
3436:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6748:"Threshold must not be negative" |==> null
3437:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6795:s.length() |==> 0
3438:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6796:t.length() |==> 0
3439:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6799:0 |==> 1
3440:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6799:0 |==> -1
3441:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6799:n == 0 |==> n <= 0
3442:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6799:n == 0 |==> n >= 0
3443:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6799:n == 0 |==> false
3444:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6800:m <= threshold |==> m < threshold
3445:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6800:m <= threshold |==> m == threshold
3446:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6800:m <= threshold |==> true
3447:LVR:NEG:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6800:-1 |==> 0
3448:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6800:-1 |==> 1
3449:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6801:0 |==> 1
3450:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6801:0 |==> -1
3451:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6801:m == 0 |==> m <= 0
3452:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6801:m == 0 |==> m >= 0
3453:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6801:m == 0 |==> false
3454:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6802:n <= threshold |==> n < threshold
3455:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6802:n <= threshold |==> n == threshold
3456:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6802:n <= threshold |==> true
3457:LVR:NEG:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6802:-1 |==> 0
3458:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6802:-1 |==> 1
3459:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6805:n > m |==> n != m
3460:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6805:n > m |==> n >= m
3461:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6805:n > m |==> false
3462:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6807:s |==> null
3463:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6808:s = t |==> <NO-OP>
3464:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6809:t = tmp |==> <NO-OP>
3465:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6810:n = m |==> <NO-OP>
3466:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6811:m = t.length() |==> <NO-OP>
3467:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:1 |==> 0
3468:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:1 |==> -1
3469:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:n + 1 |==> n % 1
3470:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:n + 1 |==> n * 1
3471:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:n + 1 |==> n - 1
3472:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6814:n + 1 |==> n / 1
3473:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:1 |==> 0
3474:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:1 |==> -1
3475:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:n + 1 |==> n % 1
3476:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:n + 1 |==> n * 1
3477:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:n + 1 |==> n - 1
3478:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6815:n + 1 |==> n / 1
3479:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:1 |==> 0
3480:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:1 |==> -1
3481:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:Math.min(n, threshold) + 1 |==> Math.min(n, threshold) % 1
3482:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:Math.min(n, threshold) + 1 |==> Math.min(n, threshold) * 1
3483:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:Math.min(n, threshold) + 1 |==> Math.min(n, threshold) - 1
3484:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6819:Math.min(n, threshold) + 1 |==> Math.min(n, threshold) / 1
3485:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6820:0 |==> 1
3486:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6820:0 |==> -1
3487:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6820:i < boundary |==> i != boundary
3488:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6820:i < boundary |==> i <= boundary
3489:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6820:i < boundary |==> false
3490:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6821:p[i] = i |==> <NO-OP>
3491:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6825:Arrays.fill(p, boundary, p.length, Integer.MAX_VALUE) |==> <NO-OP>
3492:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6826:Arrays.fill(d, Integer.MAX_VALUE) |==> <NO-OP>
3493:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6829:1 |==> 0
3494:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6829:1 |==> -1
3495:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6829:j <= m |==> j < m
3496:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6829:j <= m |==> j == m
3497:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6829:j <= m |==> true
3498:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:1 |==> 0
3499:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:1 |==> -1
3500:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:j - 1 |==> j % 1
3501:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:j - 1 |==> j * 1
3502:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:j - 1 |==> j + 1
3503:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6830:j - 1 |==> j / 1
3504:LVR:0:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6831:0 |==> 1
3505:LVR:0:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6831:0 |==> -1
3506:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6831:d[0] = j |==> <NO-OP>
3507:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:1 |==> 0
3508:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:1 |==> -1
3509:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:j - threshold |==> j % threshold
3510:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:j - threshold |==> j * threshold
3511:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:j - threshold |==> j + threshold
3512:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6834:j - threshold |==> j / threshold
3513:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6835:j + threshold |==> j % threshold
3514:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6835:j + threshold |==> j * threshold
3515:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6835:j + threshold |==> j - threshold
3516:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6835:j + threshold |==> j / threshold
3517:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6838:min > max |==> min != max
3518:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6838:min > max |==> min >= max
3519:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6838:min > max |==> false
3520:LVR:NEG:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6839:-1 |==> 0
3521:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6839:-1 |==> 1
3522:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6843:1 |==> 0
3523:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6843:1 |==> -1
3524:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6843:min > 1 |==> min != 1
3525:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6843:min > 1 |==> min >= 1
3526:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6843:min > 1 |==> false
3527:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:1 |==> 0
3528:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:1 |==> -1
3529:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:min - 1 |==> min % 1
3530:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:min - 1 |==> min * 1
3531:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:min - 1 |==> min + 1
3532:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:min - 1 |==> min / 1
3533:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6844:d[min - 1] = Integer.MAX_VALUE |==> <NO-OP>
3534:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6848:min |==> 0
3535:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6848:i <= max |==> i < max
3536:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6848:i <= max |==> i == max
3537:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6848:i <= max |==> true
3538:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:1 |==> 0
3539:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:1 |==> -1
3540:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:i - 1 |==> i % 1
3541:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:i - 1 |==> i * 1
3542:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:i - 1 |==> i + 1
3543:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:i - 1 |==> i / 1
3544:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:s.charAt(i - 1) == t_j |==> s.charAt(i - 1) <= t_j
3545:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:s.charAt(i - 1) == t_j |==> s.charAt(i - 1) >= t_j
3546:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6849:s.charAt(i - 1) == t_j |==> false
3547:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:1 |==> 0
3548:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:1 |==> -1
3549:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:i - 1 |==> i % 1
3550:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:i - 1 |==> i * 1
3551:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:i - 1 |==> i + 1
3552:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:i - 1 |==> i / 1
3553:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6851:d[i] = p[i - 1] |==> <NO-OP>
3554:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> 0
3555:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> -1
3556:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> 0
3557:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> -1
3558:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i % 1
3559:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i * 1
3560:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i + 1
3561:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i / 1
3562:LVR:POS:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> 0
3563:LVR:POS:NEG:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 |==> -1
3564:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i % 1
3565:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i * 1
3566:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i + 1
3567:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:i - 1 |==> i / 1
3568:AOR:+(int,int):%(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]) |==> 1 % Math.min(Math.min(d[i - 1], p[i]), p[i - 1])
3569:AOR:+(int,int):*(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]) |==> 1 * Math.min(Math.min(d[i - 1], p[i]), p[i - 1])
3570:AOR:+(int,int):-(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]) |==> 1 - Math.min(Math.min(d[i - 1], p[i]), p[i - 1])
3571:AOR:+(int,int):/(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]) |==> 1 / Math.min(Math.min(d[i - 1], p[i]), p[i - 1])
3572:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6854:d[i] = 1 + Math.min(Math.min(d[i - 1], p[i]), p[i - 1]) |==> <NO-OP>
3573:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6859:p |==> null
3574:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6860:p = d |==> <NO-OP>
3575:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6861:d = _d |==> <NO-OP>
3576:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6866:p[n] <= threshold |==> p[n] < threshold
3577:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6866:p[n] <= threshold |==> p[n] == threshold
3578:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6866:p[n] <= threshold |==> true
3579:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6867:p[n] |==> 0
3580:LVR:NEG:0:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6869:-1 |==> 0
3581:LVR:NEG:POS:org.apache.commons.lang3.StringUtils@getLevenshteinDistance:6869:-1 |==> 1
3582:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@startsWith:6898:false |==> true
3583:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@startsWithIgnoreCase:6924:true |==> false
3584:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@startsWith:6939:str == null |==> false
3585:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@startsWith:6939:prefix == null |==> false
3586:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6939:str == null || prefix == null |==> str == null != (prefix == null)
3587:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6939:str == null || prefix == null |==> str == null
3588:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6939:str == null || prefix == null |==> prefix == null
3589:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6939:str == null || prefix == null |==> true
3590:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@startsWith:6940:str == null |==> false
3591:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@startsWith:6940:prefix == null |==> false
3592:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6940:str == null && prefix == null |==> str == null == (prefix == null)
3593:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6940:str == null && prefix == null |==> false
3594:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6940:str == null && prefix == null |==> str == null
3595:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWith:6940:str == null && prefix == null |==> prefix == null
3596:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@startsWith:6942:prefix.length() > str.length() |==> prefix.length() != str.length()
3597:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@startsWith:6942:prefix.length() > str.length() |==> prefix.length() >= str.length()
3598:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@startsWith:6942:prefix.length() > str.length() |==> false
3599:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@startsWith:6943:false |==> true
3600:LVR:0:POS:org.apache.commons.lang3.StringUtils@startsWith:6945:0 |==> 1
3601:LVR:0:NEG:org.apache.commons.lang3.StringUtils@startsWith:6945:0 |==> -1
3602:LVR:0:POS:org.apache.commons.lang3.StringUtils@startsWith:6945:0 |==> 1
3603:LVR:0:NEG:org.apache.commons.lang3.StringUtils@startsWith:6945:0 |==> -1
3604:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWithAny:6968:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> isEmpty(string) != ArrayUtils.isEmpty(searchStrings)
3605:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWithAny:6968:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> isEmpty(string)
3606:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWithAny:6968:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> ArrayUtils.isEmpty(searchStrings)
3607:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@startsWithAny:6968:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> true
3608:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@startsWithAny:6969:false |==> true
3609:COR:StringUtils.startsWith(string, searchString):TRUE:org.apache.commons.lang3.StringUtils@startsWithAny:6972:StringUtils.startsWith(string, searchString) |==> false
3610:COR:StringUtils.startsWith(string, searchString):FALSE:org.apache.commons.lang3.StringUtils@startsWithAny:6972:StringUtils.startsWith(string, searchString) |==> true
3611:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@startsWithAny:6973:true |==> false
3612:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@startsWithAny:6976:false |==> true
3613:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@endsWith:7006:false |==> true
3614:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@endsWithIgnoreCase:7033:true |==> false
3615:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@endsWith:7048:str == null |==> false
3616:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@endsWith:7048:suffix == null |==> false
3617:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7048:str == null || suffix == null |==> str == null != (suffix == null)
3618:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7048:str == null || suffix == null |==> str == null
3619:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7048:str == null || suffix == null |==> suffix == null
3620:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7048:str == null || suffix == null |==> true
3621:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@endsWith:7049:str == null |==> false
3622:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@endsWith:7049:suffix == null |==> false
3623:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7049:str == null && suffix == null |==> str == null == (suffix == null)
3624:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7049:str == null && suffix == null |==> false
3625:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7049:str == null && suffix == null |==> str == null
3626:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWith:7049:str == null && suffix == null |==> suffix == null
3627:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@endsWith:7051:suffix.length() > str.length() |==> suffix.length() != str.length()
3628:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@endsWith:7051:suffix.length() > str.length() |==> suffix.length() >= str.length()
3629:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@endsWith:7051:suffix.length() > str.length() |==> false
3630:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@endsWith:7052:false |==> true
3631:AOR:-(int,int):%(int,int):org.apache.commons.lang3.StringUtils@endsWith:7054:str.length() - suffix.length() |==> str.length() % suffix.length()
3632:AOR:-(int,int):*(int,int):org.apache.commons.lang3.StringUtils@endsWith:7054:str.length() - suffix.length() |==> str.length() * suffix.length()
3633:AOR:-(int,int):+(int,int):org.apache.commons.lang3.StringUtils@endsWith:7054:str.length() - suffix.length() |==> str.length() + suffix.length()
3634:AOR:-(int,int):/(int,int):org.apache.commons.lang3.StringUtils@endsWith:7054:str.length() - suffix.length() |==> str.length() / suffix.length()
3635:LVR:0:POS:org.apache.commons.lang3.StringUtils@endsWith:7055:0 |==> 1
3636:LVR:0:NEG:org.apache.commons.lang3.StringUtils@endsWith:7055:0 |==> -1
3637:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@normalizeSpace:7100:str == null |==> false
3638:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@normalizeSpace:7103:WHITESPACE_PATTERN.matcher(trim(str)).replaceAll(SPACE) |==> null
3639:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWithAny:7125:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> isEmpty(string) != ArrayUtils.isEmpty(searchStrings)
3640:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWithAny:7125:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> isEmpty(string)
3641:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWithAny:7125:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> ArrayUtils.isEmpty(searchStrings)
3642:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@endsWithAny:7125:isEmpty(string) || ArrayUtils.isEmpty(searchStrings) |==> true
3643:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@endsWithAny:7126:false |==> true
3644:COR:StringUtils.endsWith(string, searchString):TRUE:org.apache.commons.lang3.StringUtils@endsWithAny:7129:StringUtils.endsWith(string, searchString) |==> false
3645:COR:StringUtils.endsWith(string, searchString):FALSE:org.apache.commons.lang3.StringUtils@endsWithAny:7129:StringUtils.endsWith(string, searchString) |==> true
3646:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@endsWithAny:7130:true |==> false
3647:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@endsWithAny:7133:false |==> true
3648:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null |==> false
3649:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) |==> str == null != isEmpty(suffix)
3650:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) |==> str == null
3651:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) |==> isEmpty(suffix)
3652:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) |==> true
3653:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) || endsWith(str, suffix, ignoreCase) |==> (str == null || isEmpty(suffix)) != endsWith(str, suffix, ignoreCase)
3654:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) || endsWith(str, suffix, ignoreCase) |==> str == null || isEmpty(suffix)
3655:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) || endsWith(str, suffix, ignoreCase) |==> endsWith(str, suffix, ignoreCase)
3656:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7148:str == null || isEmpty(suffix) || endsWith(str, suffix, ignoreCase) |==> true
3657:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@appendIfMissing:7149:str |==> null
3658:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes != null |==> true
3659:LVR:0:POS:org.apache.commons.lang3.StringUtils@appendIfMissing:7151:0 |==> 1
3660:LVR:0:NEG:org.apache.commons.lang3.StringUtils@appendIfMissing:7151:0 |==> -1
3661:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes.length > 0 |==> suffixes.length != 0
3662:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes.length > 0 |==> suffixes.length >= 0
3663:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes.length > 0 |==> false
3664:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes != null && suffixes.length > 0 |==> suffixes != null == suffixes.length > 0
3665:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes != null && suffixes.length > 0 |==> false
3666:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes != null && suffixes.length > 0 |==> suffixes != null
3667:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@appendIfMissing:7151:suffixes != null && suffixes.length > 0 |==> suffixes.length > 0
3668:COR:endsWith(str, s, ignoreCase):TRUE:org.apache.commons.lang3.StringUtils@appendIfMissing:7153:endsWith(str, s, ignoreCase) |==> false
3669:COR:endsWith(str, s, ignoreCase):FALSE:org.apache.commons.lang3.StringUtils@appendIfMissing:7153:endsWith(str, s, ignoreCase) |==> true
3670:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@appendIfMissing:7154:str |==> null
3671:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@appendIfMissing:7158:str + suffix.toString() |==> null
3672:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@appendIfMissing:7196:false |==> true
3673:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@appendIfMissingIgnoreCase:7234:true |==> false
3674:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null |==> false
3675:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) |==> str == null != isEmpty(prefix)
3676:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) |==> str == null
3677:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) |==> isEmpty(prefix)
3678:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) |==> true
3679:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) || startsWith(str, prefix, ignoreCase) |==> (str == null || isEmpty(prefix)) != startsWith(str, prefix, ignoreCase)
3680:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) || startsWith(str, prefix, ignoreCase) |==> str == null || isEmpty(prefix)
3681:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) || startsWith(str, prefix, ignoreCase) |==> startsWith(str, prefix, ignoreCase)
3682:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7249:str == null || isEmpty(prefix) || startsWith(str, prefix, ignoreCase) |==> true
3683:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@prependIfMissing:7250:str |==> null
3684:ROR:!=(java.lang.Object,java.lang.Object):TRUE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes != null |==> true
3685:LVR:0:POS:org.apache.commons.lang3.StringUtils@prependIfMissing:7252:0 |==> 1
3686:LVR:0:NEG:org.apache.commons.lang3.StringUtils@prependIfMissing:7252:0 |==> -1
3687:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes.length > 0 |==> prefixes.length != 0
3688:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes.length > 0 |==> prefixes.length >= 0
3689:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes.length > 0 |==> false
3690:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes != null && prefixes.length > 0 |==> prefixes != null == prefixes.length > 0
3691:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes != null && prefixes.length > 0 |==> false
3692:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes != null && prefixes.length > 0 |==> prefixes != null
3693:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.StringUtils@prependIfMissing:7252:prefixes != null && prefixes.length > 0 |==> prefixes.length > 0
3694:COR:startsWith(str, p, ignoreCase):TRUE:org.apache.commons.lang3.StringUtils@prependIfMissing:7254:startsWith(str, p, ignoreCase) |==> false
3695:COR:startsWith(str, p, ignoreCase):FALSE:org.apache.commons.lang3.StringUtils@prependIfMissing:7254:startsWith(str, p, ignoreCase) |==> true
3696:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@prependIfMissing:7255:str |==> null
3697:STD:CALL:<NO-OP>:org.apache.commons.lang3.StringUtils@prependIfMissing:7259:prefix.toString() + str |==> null
3698:LVR:FALSE:TRUE:org.apache.commons.lang3.StringUtils@prependIfMissing:7297:false |==> true
3699:LVR:TRUE:FALSE:org.apache.commons.lang3.StringUtils@prependIfMissingIgnoreCase:7335:true |==> false
3700:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.StringUtils@toString:7353:charsetName == null |==> false
3701:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:34:0L |==> 1L
3702:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:34:0L |==> -1L
3703:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:36:1L |==> 0L
3704:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:36:1L |==> -1L
3705:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 0L
3706:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:38:-1L |==> 1L
3707:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:40:0 |==> 1
3708:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:40:0 |==> -1
3709:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:42:1 |==> 0
3710:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:42:1 |==> -1
3711:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 0
3712:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:44:-1 |==> 1
3713:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:46:0 |==> 1
3714:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:46:0 |==> -1
3715:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:48:1 |==> 0
3716:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:48:1 |==> -1
3717:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 0
3718:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:50:-1 |==> 1
3719:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:52:0 |==> 1
3720:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:52:0 |==> -1
3721:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:54:1 |==> 0
3722:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:54:1 |==> -1
3723:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 0
3724:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils:56:-1 |==> 1
3725:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> 1.0
3726:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:58:0.0 |==> -1.0
3727:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> 0.0
3728:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:60:1.0 |==> -1.0
3729:ORU:-(double):+(double):org.apache.commons.lang3.math.NumberUtils:62:-1.0 |==> +1.0
3730:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> 0.0
3731:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:62:1.0 |==> -1.0
3732:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> 1.0F
3733:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils:64:0.0F |==> -1.0F
3734:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> 0.0F
3735:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:66:1.0F |==> -1.0F
3736:ORU:-(float):+(float):org.apache.commons.lang3.math.NumberUtils:68:-1.0F |==> +1.0F
3737:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> 0.0F
3738:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils:68:1.0F |==> -1.0F
3739:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toInt:100:0 |==> 1
3740:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toInt:100:0 |==> -1
3741:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toInt:121:str == null |==> false
3742:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toInt:122:defaultValue |==> 0
3743:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toInt:125:Integer.parseInt(str) |==> 0
3744:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toInt:127:defaultValue |==> 0
3745:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toLong:149:0L |==> 1L
3746:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toLong:149:0L |==> -1L
3747:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toLong:170:str == null |==> false
3748:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toLong:171:defaultValue |==> 0L
3749:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toLong:174:Long.parseLong(str) |==> 0L
3750:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toLong:176:defaultValue |==> 0L
3751:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toFloat:199:0.0F |==> 1.0F
3752:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toFloat:199:0.0F |==> -1.0F
3753:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toFloat:222:str == null |==> false
3754:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toFloat:223:defaultValue |==> 0.0F
3755:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toFloat:226:Float.parseFloat(str) |==> 0.0F
3756:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toFloat:228:defaultValue |==> 0.0F
3757:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toDouble:251:0.0 |==> 1.0
3758:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toDouble:251:0.0 |==> -1.0
3759:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toDouble:274:str == null |==> false
3760:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toDouble:275:defaultValue |==> 0.0
3761:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toDouble:278:Double.parseDouble(str) |==> 0.0
3762:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toDouble:280:defaultValue |==> 0.0
3763:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toByte:303:0 |==> 1
3764:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toByte:303:0 |==> -1
3765:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toByte:324:str == null |==> false
3766:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toByte:325:defaultValue |==> 0
3767:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toByte:328:Byte.parseByte(str) |==> 0
3768:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toByte:330:defaultValue |==> 0
3769:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@toShort:352:0 |==> 1
3770:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@toShort:352:0 |==> -1
3771:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@toShort:373:str == null |==> false
3772:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toShort:374:defaultValue |==> 0
3773:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toShort:377:Short.parseShort(str) |==> 0
3774:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@toShort:379:defaultValue |==> 0
3775:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber:451:str == null |==> false
3776:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber:454:StringUtils.isBlank(str) |==> false
3777:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber:454:StringUtils.isBlank(str) |==> true
3778:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:455:"A blank string is not a valid number" |==> null
3779:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"0x" |==> null
3780:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"0X" |==> null
3781:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"-0x" |==> null
3782:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"-0X" |==> null
3783:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"#" |==> null
3784:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:458:"-#" |==> null
3785:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:459:0 |==> 1
3786:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:459:0 |==> -1
3787:COR:str.startsWith(pfx):TRUE:org.apache.commons.lang3.math.NumberUtils@createNumber:461:str.startsWith(pfx) |==> false
3788:COR:str.startsWith(pfx):FALSE:org.apache.commons.lang3.math.NumberUtils@createNumber:461:str.startsWith(pfx) |==> true
3789:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:462:pfxLen += pfx.length() |==> <NO-OP>
3790:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:463:break; |==> <NO-OP>
3791:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:466:0 |==> 1
3792:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:466:0 |==> -1
3793:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:466:pfxLen > 0 |==> pfxLen != 0
3794:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:466:pfxLen > 0 |==> pfxLen >= 0
3795:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:466:pfxLen > 0 |==> false
3796:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:467:str.length() - pfxLen |==> str.length() % pfxLen
3797:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:467:str.length() - pfxLen |==> str.length() * pfxLen
3798:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:467:str.length() - pfxLen |==> str.length() + pfxLen
3799:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:467:str.length() - pfxLen |==> str.length() / pfxLen
3800:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:468:16 |==> 0
3801:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:468:16 |==> -16
3802:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:468:hexDigits > 16 |==> hexDigits != 16
3803:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:468:hexDigits > 16 |==> hexDigits >= 16
3804:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:468:hexDigits > 16 |==> false
3805:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:469:createBigInteger(str) |==> null
3806:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:471:8 |==> 0
3807:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:471:8 |==> -8
3808:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:471:hexDigits > 8 |==> hexDigits != 8
3809:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:471:hexDigits > 8 |==> hexDigits >= 8
3810:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:471:hexDigits > 8 |==> false
3811:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:472:createLong(str) |==> null
3812:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:474:createInteger(str) |==> null
3813:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:476:1 |==> 0
3814:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:476:1 |==> -1
3815:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:476:str.length() - 1 |==> str.length() % 1
3816:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:476:str.length() - 1 |==> str.length() * 1
3817:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:476:str.length() - 1 |==> str.length() + 1
3818:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:476:str.length() - 1 |==> str.length() / 1
3819:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:480:str.indexOf('.') |==> 0
3820:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') % str.indexOf('E')
3821:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') * str.indexOf('E')
3822:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') - str.indexOf('E')
3823:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') |==> str.indexOf('e') / str.indexOf('E')
3824:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:481:1 |==> 0
3825:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:481:1 |==> -1
3826:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) % 1
3827:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) * 1
3828:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') + 1 |==> str.indexOf('e') + str.indexOf('E') - 1
3829:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:481:str.indexOf('e') + str.indexOf('E') + 1 |==> (str.indexOf('e') + str.indexOf('E')) / 1
3830:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:485:0 |==> 1
3831:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:485:0 |==> -1
3832:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber:486:-1 |==> 0
3833:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:486:-1 |==> 1
3834:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:486:decPos > -1 |==> decPos != -1
3835:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:486:decPos > -1 |==> decPos >= -1
3836:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:486:decPos > -1 |==> false
3837:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber:488:-1 |==> 0
3838:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:488:-1 |==> 1
3839:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:488:expPos > -1 |==> expPos != -1
3840:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:488:expPos > -1 |==> expPos >= -1
3841:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:488:expPos > -1 |==> false
3842:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos |==> expPos != decPos
3843:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos |==> expPos <= decPos
3844:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos |==> false
3845:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos > str.length() |==> expPos != str.length()
3846:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos > str.length() |==> expPos >= str.length()
3847:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos > str.length() |==> false
3848:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos || expPos > str.length() |==> expPos < decPos != expPos > str.length()
3849:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos || expPos > str.length() |==> expPos < decPos
3850:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos || expPos > str.length() |==> expPos > str.length()
3851:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:489:expPos < decPos || expPos > str.length() |==> true
3852:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:490:" is not a valid number." |==> null
3853:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:492:1 |==> 0
3854:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:492:1 |==> -1
3855:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:492:decPos + 1 |==> decPos % 1
3856:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:492:decPos + 1 |==> decPos * 1
3857:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:492:decPos + 1 |==> decPos - 1
3858:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:492:decPos + 1 |==> decPos / 1
3859:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:494:1 |==> 0
3860:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:494:1 |==> -1
3861:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:494:decPos + 1 |==> decPos % 1
3862:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:494:decPos + 1 |==> decPos * 1
3863:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:494:decPos + 1 |==> decPos - 1
3864:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:494:decPos + 1 |==> decPos / 1
3865:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:496:0 |==> 1
3866:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:496:0 |==> -1
3867:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:497:numDecimals = dec.length() |==> <NO-OP>
3868:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber:499:-1 |==> 0
3869:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:499:-1 |==> 1
3870:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:499:expPos > -1 |==> expPos != -1
3871:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:499:expPos > -1 |==> expPos >= -1
3872:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:499:expPos > -1 |==> false
3873:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:500:expPos > str.length() |==> expPos != str.length()
3874:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:500:expPos > str.length() |==> expPos >= str.length()
3875:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:500:expPos > str.length() |==> false
3876:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:501:" is not a valid number." |==> null
3877:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:503:0 |==> 1
3878:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:503:0 |==> -1
3879:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:505:str |==> null
3880:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:509:lastChar != '.' |==> lastChar < '.'
3881:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:509:lastChar != '.' |==> lastChar > '.'
3882:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:509:lastChar != '.' |==> true
3883:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar) == (lastChar != '.')
3884:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:509:!Character.isDigit(lastChar) && lastChar != '.' |==> false
3885:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:509:!Character.isDigit(lastChar) && lastChar != '.' |==> !Character.isDigit(lastChar)
3886:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:509:!Character.isDigit(lastChar) && lastChar != '.' |==> lastChar != '.'
3887:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber:510:-1 |==> 0
3888:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:510:-1 |==> 1
3889:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 |==> expPos != -1
3890:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 |==> expPos >= -1
3891:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 |==> false
3892:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:510:1 |==> 0
3893:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:510:1 |==> -1
3894:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:str.length() - 1 |==> str.length() % 1
3895:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:str.length() - 1 |==> str.length() * 1
3896:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:str.length() - 1 |==> str.length() + 1
3897:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:str.length() - 1 |==> str.length() / 1
3898:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos < str.length() - 1 |==> expPos != str.length() - 1
3899:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos < str.length() - 1 |==> expPos <= str.length() - 1
3900:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos < str.length() - 1 |==> false
3901:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
3902:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 && expPos < str.length() - 1 |==> false
3903:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
3904:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:510:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
3905:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:511:1 |==> 0
3906:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:511:1 |==> -1
3907:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:expPos + 1 |==> expPos % 1
3908:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:expPos + 1 |==> expPos * 1
3909:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:expPos + 1 |==> expPos - 1
3910:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:expPos + 1 |==> expPos / 1
3911:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:511:1 |==> 0
3912:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:511:1 |==> -1
3913:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:str.length() - 1 |==> str.length() % 1
3914:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:str.length() - 1 |==> str.length() * 1
3915:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:str.length() - 1 |==> str.length() + 1
3916:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:511:str.length() - 1 |==> str.length() / 1
3917:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:516:0 |==> 1
3918:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:516:0 |==> -1
3919:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:516:1 |==> 0
3920:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:516:1 |==> -1
3921:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:516:str.length() - 1 |==> str.length() % 1
3922:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:516:str.length() - 1 |==> str.length() * 1
3923:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:516:str.length() - 1 |==> str.length() + 1
3924:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:516:str.length() - 1 |==> str.length() / 1
3925:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
3926:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:517:isAllZeros(mant) && isAllZeros(exp) |==> false
3927:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
3928:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:517:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
3929:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber:521:dec == null |==> false
3930:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber:522:exp == null |==> false
3931:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:521:dec == null && exp == null |==> dec == null == (exp == null)
3932:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:522:dec == null && exp == null |==> false
3933:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:521:dec == null && exp == null |==> dec == null
3934:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:522:dec == null && exp == null |==> exp == null
3935:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:523:0 |==> 1
3936:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:523:0 |==> -1
3937:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' |==> numeric.charAt(0) <= '-'
3938:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' |==> numeric.charAt(0) >= '-'
3939:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' |==> false
3940:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:523:1 |==> 0
3941:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:523:1 |==> -1
3942:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-' == isDigits(numeric.substring(1))
3943:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> false
3944:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> numeric.charAt(0) == '-'
3945:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) |==> isDigits(numeric.substring(1))
3946:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1))) != isDigits(numeric)
3947:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> numeric.charAt(0) == '-' && isDigits(numeric.substring(1))
3948:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> isDigits(numeric)
3949:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric) |==> true
3950:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (dec == null && exp == null) == (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
3951:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> false
3952:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:521:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> dec == null && exp == null
3953:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:523:dec == null && exp == null && (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric)) |==> (numeric.charAt(0) == '-' && isDigits(numeric.substring(1)) || isDigits(numeric))
3954:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:525:createLong(numeric) |==> null
3955:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:529:createBigInteger(numeric) |==> null
3956:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:532:" is not a valid number." |==> null
3957:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:536:NumberUtils.createFloat(numeric) |==> null
3958:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:537:0.0F |==> 1.0F
3959:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:537:0.0F |==> -1.0F
3960:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
3961:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
3962:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F |==> false
3963:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
3964:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F && !allZeros |==> false
3965:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
3966:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.floatValue() == 0.0F && !allZeros |==> !allZeros
3967:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
3968:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
3969:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
3970:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:537:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
3971:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:540:f |==> null
3972:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:550:NumberUtils.createDouble(numeric) |==> null
3973:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:551:0.0 |==> 1.0
3974:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:551:0.0 |==> -1.0
3975:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 |==> d.floatValue() <= 0.0
3976:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 |==> d.floatValue() >= 0.0
3977:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 |==> false
3978:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0 == !allZeros
3979:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 && !allZeros |==> false
3980:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 && !allZeros |==> d.floatValue() == 0.0
3981:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.floatValue() == 0.0 && !allZeros |==> !allZeros
3982:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.floatValue() == 0.0 && !allZeros)
3983:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> d.isInfinite()
3984:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> (d.floatValue() == 0.0 && !allZeros)
3985:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:551:d.isInfinite() || (d.floatValue() == 0.0 && !allZeros) |==> true
3986:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:552:d |==> null
3987:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:558:createBigDecimal(numeric) |==> null
3988:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createNumber:564:" is not a valid number." |==> null
3989:LVR:NEG:0:org.apache.commons.lang3.math.NumberUtils@createNumber:570:-1 |==> 0
3990:LVR:NEG:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:570:-1 |==> 1
3991:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 |==> expPos != -1
3992:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 |==> expPos >= -1
3993:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 |==> false
3994:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:570:1 |==> 0
3995:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:570:1 |==> -1
3996:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:str.length() - 1 |==> str.length() % 1
3997:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:str.length() - 1 |==> str.length() * 1
3998:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:str.length() - 1 |==> str.length() + 1
3999:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:str.length() - 1 |==> str.length() / 1
4000:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos < str.length() - 1 |==> expPos != str.length() - 1
4001:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos < str.length() - 1 |==> expPos <= str.length() - 1
4002:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos < str.length() - 1 |==> false
4003:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1 == expPos < str.length() - 1
4004:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 && expPos < str.length() - 1 |==> false
4005:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 && expPos < str.length() - 1 |==> expPos > -1
4006:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:570:expPos > -1 && expPos < str.length() - 1 |==> expPos < str.length() - 1
4007:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:571:1 |==> 0
4008:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:571:1 |==> -1
4009:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:571:expPos + 1 |==> expPos % 1
4010:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:571:expPos + 1 |==> expPos * 1
4011:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:571:expPos + 1 |==> expPos - 1
4012:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:571:expPos + 1 |==> expPos / 1
4013:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber:575:dec == null |==> false
4014:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createNumber:575:exp == null |==> false
4015:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:575:dec == null && exp == null |==> dec == null == (exp == null)
4016:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:575:dec == null && exp == null |==> false
4017:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:575:dec == null && exp == null |==> dec == null
4018:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:575:dec == null && exp == null |==> exp == null
4019:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:578:createInteger(str) |==> null
4020:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:583:createLong(str) |==> null
4021:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:587:createBigInteger(str) |==> null
4022:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant) == isAllZeros(exp)
4023:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:591:isAllZeros(mant) && isAllZeros(exp) |==> false
4024:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(mant)
4025:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:591:isAllZeros(mant) && isAllZeros(exp) |==> isAllZeros(exp)
4026:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:593:7 |==> 0
4027:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:593:7 |==> -7
4028:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:593:numDecimals <= 7 |==> numDecimals < 7
4029:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:593:numDecimals <= 7 |==> numDecimals == 7
4030:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:593:numDecimals <= 7 |==> true
4031:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:594:createFloat(str) |==> null
4032:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:595:0.0F |==> 1.0F
4033:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:595:0.0F |==> -1.0F
4034:ROR:==(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F |==> f.floatValue() <= 0.0F
4035:ROR:==(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F |==> f.floatValue() >= 0.0F
4036:ROR:==(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F |==> false
4037:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F == !allZeros
4038:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F && !allZeros |==> false
4039:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F && !allZeros |==> f.floatValue() == 0.0F
4040:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.floatValue() == 0.0F && !allZeros |==> !allZeros
4041:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite() != (f.floatValue() == 0.0F && !allZeros)
4042:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> f.isInfinite()
4043:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> (f.floatValue() == 0.0F && !allZeros)
4044:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:595:f.isInfinite() || (f.floatValue() == 0.0F && !allZeros) |==> true
4045:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:596:f |==> null
4046:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createNumber:603:16 |==> 0
4047:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:603:16 |==> -16
4048:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:603:numDecimals <= 16 |==> numDecimals < 16
4049:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:603:numDecimals <= 16 |==> numDecimals == 16
4050:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@createNumber:603:numDecimals <= 16 |==> true
4051:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:604:createDouble(str) |==> null
4052:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createNumber:605:0.0 |==> 1.0
4053:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createNumber:605:0.0 |==> -1.0
4054:ROR:==(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 |==> d.doubleValue() <= 0.0
4055:ROR:==(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 |==> d.doubleValue() >= 0.0
4056:ROR:==(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 |==> false
4057:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0 == !allZeros
4058:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 && !allZeros |==> false
4059:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 && !allZeros |==> d.doubleValue() == 0.0
4060:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.doubleValue() == 0.0 && !allZeros |==> !allZeros
4061:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite() != (d.doubleValue() == 0.0 && !allZeros)
4062:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> d.isInfinite()
4063:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> (d.doubleValue() == 0.0 && !allZeros)
4064:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createNumber:605:d.isInfinite() || (d.doubleValue() == 0.0 && !allZeros) |==> true
4065:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:606:d |==> null
4066:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createNumber:613:createBigDecimal(str) |==> null
4067:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@isAllZeros:625:str == null |==> false
4068:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isAllZeros:626:true |==> false
4069:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:1 |==> 0
4070:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:1 |==> -1
4071:AOR:-(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:str.length() - 1 |==> str.length() % 1
4072:AOR:-(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:str.length() - 1 |==> str.length() * 1
4073:AOR:-(int,int):+(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:str.length() - 1 |==> str.length() + 1
4074:AOR:-(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:str.length() - 1 |==> str.length() / 1
4075:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:0 |==> 1
4076:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:0 |==> -1
4077:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:i >= 0 |==> i == 0
4078:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:i >= 0 |==> i > 0
4079:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:628:i >= 0 |==> true
4080:ROR:!=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:629:str.charAt(i) != '0' |==> str.charAt(i) < '0'
4081:ROR:!=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:629:str.charAt(i) != '0' |==> str.charAt(i) > '0'
4082:ROR:!=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:629:str.charAt(i) != '0' |==> true
4083:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isAllZeros:630:false |==> true
4084:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isAllZeros:633:0 |==> 1
4085:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isAllZeros:633:0 |==> -1
4086:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:633:str.length() > 0 |==> str.length() != 0
4087:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:633:str.length() > 0 |==> str.length() >= 0
4088:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isAllZeros:633:str.length() > 0 |==> false
4089:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createFloat:647:str == null |==> false
4090:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createFloat:650:Float.valueOf(str) |==> null
4091:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createDouble:663:str == null |==> false
4092:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createDouble:666:Double.valueOf(str) |==> null
4093:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createInteger:680:str == null |==> false
4094:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createInteger:684:Integer.decode(str) |==> null
4095:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createLong:698:str == null |==> false
4096:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createLong:701:Long.decode(str) |==> null
4097:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigInteger:715:str == null |==> false
4098:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@createBigInteger:718:0 |==> 1
4099:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:718:0 |==> -1
4100:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:719:10 |==> 0
4101:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:719:10 |==> -10
4102:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:720:false |==> true
4103:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:721:"-" |==> null
4104:COR:str.startsWith("-"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:721:str.startsWith("-") |==> false
4105:COR:str.startsWith("-"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:721:str.startsWith("-") |==> true
4106:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:722:true |==> false
4107:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:722:negate = true |==> <NO-OP>
4108:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:723:1 |==> 0
4109:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:723:1 |==> -1
4110:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:723:pos = 1 |==> <NO-OP>
4111:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:"0x" |==> null
4112:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:"0x" |==> null
4113:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos) != str.startsWith("0x", pos)
4114:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
4115:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> str.startsWith("0x", pos)
4116:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:725:str.startsWith("0x", pos) || str.startsWith("0x", pos) |==> true
4117:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:726:16 |==> 0
4118:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:726:16 |==> -16
4119:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:726:radix = 16 |==> <NO-OP>
4120:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:727:2 |==> 0
4121:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:727:2 |==> -2
4122:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:727:pos += 2 |==> <NO-OP>
4123:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:728:"#" |==> null
4124:COR:str.startsWith("#", pos):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:728:str.startsWith("#", pos) |==> false
4125:COR:str.startsWith("#", pos):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigInteger:728:str.startsWith("#", pos) |==> true
4126:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:729:16 |==> 0
4127:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:729:16 |==> -16
4128:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:729:radix = 16 |==> <NO-OP>
4129:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:730:pos++ |==> <NO-OP>
4130:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:"0" |==> null
4131:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:1 |==> 0
4132:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:1 |==> -1
4133:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:pos + 1 |==> pos % 1
4134:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:pos + 1 |==> pos * 1
4135:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:pos + 1 |==> pos - 1
4136:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:pos + 1 |==> pos / 1
4137:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.length() > pos + 1 |==> str.length() != pos + 1
4138:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.length() > pos + 1 |==> str.length() >= pos + 1
4139:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.length() > pos + 1 |==> false
4140:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos) == str.length() > pos + 1
4141:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.startsWith("0", pos) && str.length() > pos + 1 |==> false
4142:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.startsWith("0", pos)
4143:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@createBigInteger:731:str.startsWith("0", pos) && str.length() > pos + 1 |==> str.length() > pos + 1
4144:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@createBigInteger:732:8 |==> 0
4145:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@createBigInteger:732:8 |==> -8
4146:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:732:radix = 8 |==> <NO-OP>
4147:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:733:pos++ |==> <NO-OP>
4148:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:736:new BigInteger(str.substring(pos), radix) |==> null
4149:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigInteger:737:negate ? value.negate() : value |==> null
4150:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@createBigDecimal:750:str == null |==> false
4151:COR:StringUtils.isBlank(str):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:754:StringUtils.isBlank(str) |==> false
4152:COR:StringUtils.isBlank(str):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:754:StringUtils.isBlank(str) |==> true
4153:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:755:"A blank string is not a valid number" |==> null
4154:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:757:"--" |==> null
4155:COR:str.trim().startsWith("--"):TRUE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:757:str.trim().startsWith("--") |==> false
4156:COR:str.trim().startsWith("--"):FALSE:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:757:str.trim().startsWith("--") |==> true
4157:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:762:" is not a valid number." |==> null
4158:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@createBigDecimal:764:new BigDecimal(str) |==> null
4159:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:779:validateArray(array) |==> <NO-OP>
4160:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:782:0 |==> 1
4161:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:782:0 |==> -1
4162:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:783:1 |==> 0
4163:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:783:1 |==> -1
4164:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:783:i < array.length |==> i != array.length
4165:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:783:i < array.length |==> i <= array.length
4166:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:783:i < array.length |==> false
4167:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min:784:array[i] < min |==> array[i] != min
4168:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min:784:array[i] < min |==> array[i] <= min
4169:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min:784:array[i] < min |==> false
4170:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:785:min = array[i] |==> <NO-OP>
4171:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:789:min |==> 0L
4172:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:802:validateArray(array) |==> <NO-OP>
4173:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:805:0 |==> 1
4174:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:805:0 |==> -1
4175:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:806:1 |==> 0
4176:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:806:1 |==> -1
4177:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:806:j < array.length |==> j != array.length
4178:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:806:j < array.length |==> j <= array.length
4179:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:806:j < array.length |==> false
4180:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:807:array[j] < min |==> array[j] != min
4181:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:807:array[j] < min |==> array[j] <= min
4182:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:807:array[j] < min |==> false
4183:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:808:min = array[j] |==> <NO-OP>
4184:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:812:min |==> 0
4185:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:825:validateArray(array) |==> <NO-OP>
4186:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:828:0 |==> 1
4187:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:828:0 |==> -1
4188:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:829:1 |==> 0
4189:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:829:1 |==> -1
4190:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:829:i < array.length |==> i != array.length
4191:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:829:i < array.length |==> i <= array.length
4192:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:829:i < array.length |==> false
4193:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:830:array[i] < min |==> array[i] != min
4194:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:830:array[i] < min |==> array[i] <= min
4195:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:830:array[i] < min |==> false
4196:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:831:min = array[i] |==> <NO-OP>
4197:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:835:min |==> 0
4198:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:848:validateArray(array) |==> <NO-OP>
4199:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:851:0 |==> 1
4200:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:851:0 |==> -1
4201:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:852:1 |==> 0
4202:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:852:1 |==> -1
4203:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:852:i < array.length |==> i != array.length
4204:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:852:i < array.length |==> i <= array.length
4205:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:852:i < array.length |==> false
4206:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:853:array[i] < min |==> array[i] != min
4207:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:853:array[i] < min |==> array[i] <= min
4208:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:853:array[i] < min |==> false
4209:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:854:min = array[i] |==> <NO-OP>
4210:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:858:min |==> 0
4211:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:872:validateArray(array) |==> <NO-OP>
4212:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:875:0 |==> 1
4213:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:875:0 |==> -1
4214:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:876:1 |==> 0
4215:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:876:1 |==> -1
4216:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:876:i < array.length |==> i != array.length
4217:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:876:i < array.length |==> i <= array.length
4218:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:876:i < array.length |==> false
4219:COR:Double.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min:877:Double.isNaN(array[i]) |==> false
4220:COR:Double.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min:877:Double.isNaN(array[i]) |==> true
4221:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:878:Double.NaN |==> 0.0
4222:ROR:<(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@min:880:array[i] < min |==> array[i] != min
4223:ROR:<(double,double):<=(double,double):org.apache.commons.lang3.math.NumberUtils@min:880:array[i] < min |==> array[i] <= min
4224:ROR:<(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@min:880:array[i] < min |==> false
4225:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:881:min = array[i] |==> <NO-OP>
4226:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:885:min |==> 0.0
4227:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:899:validateArray(array) |==> <NO-OP>
4228:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@min:902:0 |==> 1
4229:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@min:902:0 |==> -1
4230:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@min:903:1 |==> 0
4231:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@min:903:1 |==> -1
4232:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:903:i < array.length |==> i != array.length
4233:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:903:i < array.length |==> i <= array.length
4234:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:903:i < array.length |==> false
4235:COR:Float.isNaN(array[i]):TRUE:org.apache.commons.lang3.math.NumberUtils@min:904:Float.isNaN(array[i]) |==> false
4236:COR:Float.isNaN(array[i]):FALSE:org.apache.commons.lang3.math.NumberUtils@min:904:Float.isNaN(array[i]) |==> true
4237:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:905:Float.NaN |==> 0.0F
4238:ROR:<(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@min:907:array[i] < min |==> array[i] != min
4239:ROR:<(float,float):<=(float,float):org.apache.commons.lang3.math.NumberUtils@min:907:array[i] < min |==> array[i] <= min
4240:ROR:<(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@min:907:array[i] < min |==> false
4241:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:908:min = array[i] |==> <NO-OP>
4242:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:912:min |==> 0.0F
4243:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:927:validateArray(array) |==> <NO-OP>
4244:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:930:0 |==> 1
4245:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:930:0 |==> -1
4246:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:931:1 |==> 0
4247:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:931:1 |==> -1
4248:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:931:j < array.length |==> j != array.length
4249:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:931:j < array.length |==> j <= array.length
4250:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:931:j < array.length |==> false
4251:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max:932:array[j] > max |==> array[j] != max
4252:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max:932:array[j] > max |==> array[j] >= max
4253:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max:932:array[j] > max |==> false
4254:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:933:max = array[j] |==> <NO-OP>
4255:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:937:max |==> 0L
4256:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:950:validateArray(array) |==> <NO-OP>
4257:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:953:0 |==> 1
4258:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:953:0 |==> -1
4259:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:954:1 |==> 0
4260:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:954:1 |==> -1
4261:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:954:j < array.length |==> j != array.length
4262:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:954:j < array.length |==> j <= array.length
4263:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:954:j < array.length |==> false
4264:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:955:array[j] > max |==> array[j] != max
4265:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:955:array[j] > max |==> array[j] >= max
4266:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:955:array[j] > max |==> false
4267:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:956:max = array[j] |==> <NO-OP>
4268:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:960:max |==> 0
4269:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:973:validateArray(array) |==> <NO-OP>
4270:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:976:0 |==> 1
4271:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:976:0 |==> -1
4272:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:977:1 |==> 0
4273:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:977:1 |==> -1
4274:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:977:i < array.length |==> i != array.length
4275:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:977:i < array.length |==> i <= array.length
4276:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:977:i < array.length |==> false
4277:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:978:array[i] > max |==> array[i] != max
4278:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:978:array[i] > max |==> array[i] >= max
4279:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:978:array[i] > max |==> false
4280:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:979:max = array[i] |==> <NO-OP>
4281:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:983:max |==> 0
4282:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:996:validateArray(array) |==> <NO-OP>
4283:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:999:0 |==> 1
4284:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:999:0 |==> -1
4285:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:1000:1 |==> 0
4286:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:1000:1 |==> -1
4287:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1000:i < array.length |==> i != array.length
4288:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1000:i < array.length |==> i <= array.length
4289:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1000:i < array.length |==> false
4290:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1001:array[i] > max |==> array[i] != max
4291:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1001:array[i] > max |==> array[i] >= max
4292:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1001:array[i] > max |==> false
4293:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1002:max = array[i] |==> <NO-OP>
4294:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1006:max |==> 0
4295:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1020:validateArray(array) |==> <NO-OP>
4296:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:1023:0 |==> 1
4297:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:1023:0 |==> -1
4298:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:1024:1 |==> 0
4299:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:1024:1 |==> -1
4300:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1024:j < array.length |==> j != array.length
4301:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1024:j < array.length |==> j <= array.length
4302:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1024:j < array.length |==> false
4303:COR:Double.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max:1025:Double.isNaN(array[j]) |==> false
4304:COR:Double.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max:1025:Double.isNaN(array[j]) |==> true
4305:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1026:Double.NaN |==> 0.0
4306:ROR:>(double,double):!=(double,double):org.apache.commons.lang3.math.NumberUtils@max:1028:array[j] > max |==> array[j] != max
4307:ROR:>(double,double):>=(double,double):org.apache.commons.lang3.math.NumberUtils@max:1028:array[j] > max |==> array[j] >= max
4308:ROR:>(double,double):FALSE(double,double):org.apache.commons.lang3.math.NumberUtils@max:1028:array[j] > max |==> false
4309:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1029:max = array[j] |==> <NO-OP>
4310:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1033:max |==> 0.0
4311:STD:<CALL>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1047:validateArray(array) |==> <NO-OP>
4312:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@max:1050:0 |==> 1
4313:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@max:1050:0 |==> -1
4314:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@max:1051:1 |==> 0
4315:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@max:1051:1 |==> -1
4316:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1051:j < array.length |==> j != array.length
4317:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1051:j < array.length |==> j <= array.length
4318:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1051:j < array.length |==> false
4319:COR:Float.isNaN(array[j]):TRUE:org.apache.commons.lang3.math.NumberUtils@max:1052:Float.isNaN(array[j]) |==> false
4320:COR:Float.isNaN(array[j]):FALSE:org.apache.commons.lang3.math.NumberUtils@max:1052:Float.isNaN(array[j]) |==> true
4321:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1053:Float.NaN |==> 0.0F
4322:ROR:>(float,float):!=(float,float):org.apache.commons.lang3.math.NumberUtils@max:1055:array[j] > max |==> array[j] != max
4323:ROR:>(float,float):>=(float,float):org.apache.commons.lang3.math.NumberUtils@max:1055:array[j] > max |==> array[j] >= max
4324:ROR:>(float,float):FALSE(float,float):org.apache.commons.lang3.math.NumberUtils@max:1055:array[j] > max |==> false
4325:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1056:max = array[j] |==> <NO-OP>
4326:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1060:max |==> 0.0F
4327:ROR:==(java.lang.Object,java.lang.Object):FALSE(java.lang.Object,java.lang.Object):org.apache.commons.lang3.math.NumberUtils@validateArray:1070:array == null |==> false
4328:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@validateArray:1071:"The Array must not be null" |==> null
4329:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@validateArray:1072:0 |==> 1
4330:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@validateArray:1072:0 |==> -1
4331:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray:1072:Array.getLength(array) == 0 |==> Array.getLength(array) <= 0
4332:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray:1072:Array.getLength(array) == 0 |==> Array.getLength(array) >= 0
4333:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@validateArray:1072:Array.getLength(array) == 0 |==> false
4334:LVR:<CLASS>:<NULL>:org.apache.commons.lang3.math.NumberUtils@validateArray:1073:"Array cannot be empty." |==> null
4335:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min:1088:b < a |==> b != a
4336:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min:1088:b < a |==> b <= a
4337:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min:1088:b < a |==> false
4338:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1089:a = b |==> <NO-OP>
4339:ROR:<(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@min:1091:c < a |==> c != a
4340:ROR:<(long,long):<=(long,long):org.apache.commons.lang3.math.NumberUtils@min:1091:c < a |==> c <= a
4341:ROR:<(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@min:1091:c < a |==> false
4342:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1092:a = c |==> <NO-OP>
4343:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1094:a |==> 0L
4344:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1106:b < a |==> b != a
4345:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1106:b < a |==> b <= a
4346:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1106:b < a |==> false
4347:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1107:a = b |==> <NO-OP>
4348:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1109:c < a |==> c != a
4349:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1109:c < a |==> c <= a
4350:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1109:c < a |==> false
4351:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1110:a = c |==> <NO-OP>
4352:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1112:a |==> 0
4353:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1124:b < a |==> b != a
4354:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1124:b < a |==> b <= a
4355:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1124:b < a |==> false
4356:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1125:a = b |==> <NO-OP>
4357:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1127:c < a |==> c != a
4358:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1127:c < a |==> c <= a
4359:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1127:c < a |==> false
4360:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1128:a = c |==> <NO-OP>
4361:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1130:a |==> 0
4362:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1142:b < a |==> b != a
4363:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1142:b < a |==> b <= a
4364:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1142:b < a |==> false
4365:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1143:a = b |==> <NO-OP>
4366:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1145:c < a |==> c != a
4367:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@min:1145:c < a |==> c <= a
4368:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@min:1145:c < a |==> false
4369:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1146:a = c |==> <NO-OP>
4370:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1148:a |==> 0
4371:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1164:Math.min(Math.min(a, b), c) |==> 0.0
4372:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@min:1180:Math.min(Math.min(a, b), c) |==> 0.0F
4373:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max:1194:b > a |==> b != a
4374:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max:1194:b > a |==> b >= a
4375:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max:1194:b > a |==> false
4376:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1195:a = b |==> <NO-OP>
4377:ROR:>(long,long):!=(long,long):org.apache.commons.lang3.math.NumberUtils@max:1197:c > a |==> c != a
4378:ROR:>(long,long):>=(long,long):org.apache.commons.lang3.math.NumberUtils@max:1197:c > a |==> c >= a
4379:ROR:>(long,long):FALSE(long,long):org.apache.commons.lang3.math.NumberUtils@max:1197:c > a |==> false
4380:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1198:a = c |==> <NO-OP>
4381:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1200:a |==> 0L
4382:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1212:b > a |==> b != a
4383:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1212:b > a |==> b >= a
4384:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1212:b > a |==> false
4385:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1213:a = b |==> <NO-OP>
4386:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1215:c > a |==> c != a
4387:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1215:c > a |==> c >= a
4388:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1215:c > a |==> false
4389:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1216:a = c |==> <NO-OP>
4390:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1218:a |==> 0
4391:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1230:b > a |==> b != a
4392:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1230:b > a |==> b >= a
4393:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1230:b > a |==> false
4394:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1231:a = b |==> <NO-OP>
4395:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1233:c > a |==> c != a
4396:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1233:c > a |==> c >= a
4397:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1233:c > a |==> false
4398:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1234:a = c |==> <NO-OP>
4399:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1236:a |==> 0
4400:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1248:b > a |==> b != a
4401:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1248:b > a |==> b >= a
4402:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1248:b > a |==> false
4403:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1249:a = b |==> <NO-OP>
4404:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1251:c > a |==> c != a
4405:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@max:1251:c > a |==> c >= a
4406:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@max:1251:c > a |==> false
4407:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1252:a = c |==> <NO-OP>
4408:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1254:a |==> 0
4409:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1270:Math.max(Math.max(a, b), c) |==> 0.0
4410:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@max:1286:Math.max(Math.max(a, b), c) |==> 0.0F
4411:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits:1301:StringUtils.isEmpty(str) |==> false
4412:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits:1301:StringUtils.isEmpty(str) |==> true
4413:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits:1302:false |==> true
4414:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isDigits:1304:0 |==> 1
4415:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isDigits:1304:0 |==> -1
4416:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits:1304:i < str.length() |==> i != str.length()
4417:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits:1304:i < str.length() |==> i <= str.length()
4418:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isDigits:1304:i < str.length() |==> false
4419:COR:Character.isDigit(str.charAt(i)):TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits:1305:Character.isDigit(str.charAt(i)) |==> false
4420:COR:Character.isDigit(str.charAt(i)):FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits:1305:Character.isDigit(str.charAt(i)) |==> true
4421:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isDigits:1306:false |==> true
4422:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isDigits:1309:true |==> false
4423:COR:StringUtils.isEmpty(str):TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1326:StringUtils.isEmpty(str) |==> false
4424:COR:StringUtils.isEmpty(str):FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1326:StringUtils.isEmpty(str) |==> true
4425:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1327:false |==> true
4426:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1329:str.toCharArray() |==> null
4427:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1330:chars.length |==> 0
4428:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1331:false |==> true
4429:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1332:false |==> true
4430:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1333:false |==> true
4431:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1334:false |==> true
4432:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:0 |==> 1
4433:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:0 |==> -1
4434:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1336:chars[0] == '-' |==> chars[0] <= '-'
4435:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1336:chars[0] == '-' |==> chars[0] >= '-'
4436:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1336:chars[0] == '-' |==> false
4437:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:1 |==> 0
4438:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:1 |==> -1
4439:LVR:0:POS:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:0 |==> 1
4440:LVR:0:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1336:0 |==> -1
4441:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber:1337:1 |==> 0
4442:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1337:1 |==> -1
4443:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start % 1
4444:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start * 1
4445:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start - 1
4446:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start / 1
4447:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 |==> sz != start + 1
4448:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 |==> sz >= start + 1
4449:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 |==> false
4450:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start] == '0' |==> chars[start] <= '0'
4451:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start] == '0' |==> chars[start] >= '0'
4452:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start] == '0' |==> false
4453:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1 == (chars[start] == '0')
4454:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' |==> false
4455:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' |==> sz > start + 1
4456:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' |==> chars[start] == '0'
4457:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber:1337:1 |==> 0
4458:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1337:1 |==> -1
4459:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start % 1
4460:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start * 1
4461:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start - 1
4462:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:start + 1 |==> start / 1
4463:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start + 1] == 'x' |==> chars[start + 1] <= 'x'
4464:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start + 1] == 'x' |==> chars[start + 1] >= 'x'
4465:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:chars[start + 1] == 'x' |==> false
4466:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> (sz > start + 1 && chars[start] == '0') == (chars[start + 1] == 'x')
4467:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> false
4468:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> sz > start + 1 && chars[start] == '0'
4469:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1337:sz > start + 1 && chars[start] == '0' && chars[start + 1] == 'x' |==> chars[start + 1] == 'x'
4470:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber:1338:2 |==> 0
4471:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1338:2 |==> -2
4472:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1338:start + 2 |==> start % 2
4473:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1338:start + 2 |==> start * 2
4474:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1338:start + 2 |==> start - 2
4475:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1338:start + 2 |==> start / 2
4476:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1339:i == sz |==> i <= sz
4477:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1339:i == sz |==> i >= sz
4478:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1339:i == sz |==> false
4479:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1340:false |==> true
4480:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1343:i < chars.length |==> i != chars.length
4481:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1343:i < chars.length |==> i <= chars.length
4482:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1343:i < chars.length |==> false
4483:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' |==> chars[i] != '0'
4484:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' |==> chars[i] <= '0'
4485:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' |==> false
4486:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] > '9' |==> chars[i] != '9'
4487:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] > '9' |==> chars[i] >= '9'
4488:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] > '9' |==> false
4489:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0' != chars[i] > '9'
4490:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] < '0'
4491:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' || chars[i] > '9' |==> chars[i] > '9'
4492:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:chars[i] < '0' || chars[i] > '9' |==> true
4493:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' |==> chars[i] != 'a'
4494:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' |==> chars[i] <= 'a'
4495:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' |==> false
4496:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] > 'f' |==> chars[i] != 'f'
4497:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] > 'f' |==> chars[i] >= 'f'
4498:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] > 'f' |==> false
4499:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a' != chars[i] > 'f'
4500:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] < 'a'
4501:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' || chars[i] > 'f' |==> chars[i] > 'f'
4502:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:chars[i] < 'a' || chars[i] > 'f' |==> true
4503:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9') == (chars[i] < 'a' || chars[i] > 'f')
4504:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> false
4505:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < '0' || chars[i] > '9')
4506:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1345:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') |==> (chars[i] < 'a' || chars[i] > 'f')
4507:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' |==> chars[i] != 'A'
4508:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' |==> chars[i] <= 'A'
4509:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' |==> false
4510:ROR:>(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] > 'F' |==> chars[i] != 'F'
4511:ROR:>(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] > 'F' |==> chars[i] >= 'F'
4512:ROR:>(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] > 'F' |==> false
4513:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A' != chars[i] > 'F'
4514:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] < 'A'
4515:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' || chars[i] > 'F' |==> chars[i] > 'F'
4516:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:chars[i] < 'A' || chars[i] > 'F' |==> true
4517:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> ((chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')) == (chars[i] < 'A' || chars[i] > 'F')
4518:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> false
4519:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1344:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f')
4520:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1346:(chars[i] < '0' || chars[i] > '9') && (chars[i] < 'a' || chars[i] > 'f') && (chars[i] < 'A' || chars[i] > 'F') |==> (chars[i] < 'A' || chars[i] > 'F')
4521:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1347:false |==> true
4522:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1350:true |==> false
4523:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1352:sz-- |==> <NO-OP>
4524:STD:ASSIGN:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1354:start |==> 0
4525:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz |==> i != sz
4526:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz |==> i <= sz
4527:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz |==> false
4528:LVR:POS:0:org.apache.commons.lang3.math.NumberUtils@isNumber:1357:1 |==> 0
4529:LVR:POS:NEG:org.apache.commons.lang3.math.NumberUtils@isNumber:1357:1 |==> -1
4530:AOR:+(int,int):%(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:sz + 1 |==> sz % 1
4531:AOR:+(int,int):*(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:sz + 1 |==> sz * 1
4532:AOR:+(int,int):-(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:sz + 1 |==> sz - 1
4533:AOR:+(int,int):/(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:sz + 1 |==> sz / 1
4534:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 |==> i != sz + 1
4535:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 |==> i <= sz + 1
4536:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 |==> false
4537:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns |==> i < sz + 1 == allowSigns
4538:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns |==> false
4539:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns |==> i < sz + 1
4540:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns |==> allowSigns
4541:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns && !foundDigit |==> (i < sz + 1 && allowSigns) == !foundDigit
4542:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns && !foundDigit |==> false
4543:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns && !foundDigit |==> i < sz + 1 && allowSigns
4544:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz + 1 && allowSigns && !foundDigit |==> !foundDigit
4545:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz != (i < sz + 1 && allowSigns && !foundDigit)
4546:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> i < sz
4547:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> (i < sz + 1 && allowSigns && !foundDigit)
4548:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1357:i < sz || (i < sz + 1 && allowSigns && !foundDigit) |==> true
4549:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' |==> chars[i] == '0'
4550:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' |==> chars[i] > '0'
4551:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' |==> true
4552:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] <= '9' |==> chars[i] < '9'
4553:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] <= '9' |==> chars[i] == '9'
4554:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] <= '9' |==> true
4555:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
4556:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' && chars[i] <= '9' |==> false
4557:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
4558:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1358:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
4559:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1359:true |==> false
4560:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1359:foundDigit = true |==> <NO-OP>
4561:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1360:false |==> true
4562:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1360:allowSigns = false |==> <NO-OP>
4563:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1362:chars[i] == '.' |==> chars[i] <= '.'
4564:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1362:chars[i] == '.' |==> chars[i] >= '.'
4565:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1362:chars[i] == '.' |==> false
4566:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1363:hasDecPoint || hasExp |==> hasDecPoint != hasExp
4567:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1363:hasDecPoint || hasExp |==> hasDecPoint
4568:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1363:hasDecPoint || hasExp |==> hasExp
4569:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1363:hasDecPoint || hasExp |==> true
4570:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1365:false |==> true
4571:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1367:true |==> false
4572:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1367:hasDecPoint = true |==> <NO-OP>
4573:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' |==> chars[i] <= 'e'
4574:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' |==> chars[i] >= 'e'
4575:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' |==> false
4576:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'E' |==> chars[i] <= 'E'
4577:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'E' |==> chars[i] >= 'E'
4578:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'E' |==> false
4579:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
4580:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
4581:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
4582:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1368:chars[i] == 'e' || chars[i] == 'E' |==> true
4583:COR:hasExp:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1370:hasExp |==> false
4584:COR:hasExp:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1370:hasExp |==> true
4585:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1372:false |==> true
4586:COR:foundDigit:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1374:foundDigit |==> false
4587:COR:foundDigit:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1374:foundDigit |==> true
4588:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1375:false |==> true
4589:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1377:true |==> false
4590:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1377:hasExp = true |==> <NO-OP>
4591:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1378:true |==> false
4592:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1378:allowSigns = true |==> <NO-OP>
4593:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' |==> chars[i] <= '+'
4594:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' |==> chars[i] >= '+'
4595:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' |==> false
4596:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '-' |==> chars[i] <= '-'
4597:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '-' |==> chars[i] >= '-'
4598:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '-' |==> false
4599:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+' != (chars[i] == '-')
4600:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '+'
4601:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' || chars[i] == '-' |==> chars[i] == '-'
4602:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1379:chars[i] == '+' || chars[i] == '-' |==> true
4603:COR:allowSigns:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1380:allowSigns |==> false
4604:COR:allowSigns:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1380:allowSigns |==> true
4605:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1381:false |==> true
4606:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1383:false |==> true
4607:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1383:allowSigns = false |==> <NO-OP>
4608:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1384:false |==> true
4609:STD:<ASSIGN>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1384:foundDigit = false |==> <NO-OP>
4610:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1386:false |==> true
4611:STD:<INC/DEC>:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1388:i++ |==> <NO-OP>
4612:ROR:<(int,int):!=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1390:i < chars.length |==> i != chars.length
4613:ROR:<(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1390:i < chars.length |==> i <= chars.length
4614:ROR:<(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1390:i < chars.length |==> false
4615:ROR:>=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' |==> chars[i] == '0'
4616:ROR:>=(int,int):>(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' |==> chars[i] > '0'
4617:ROR:>=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' |==> true
4618:ROR:<=(int,int):<(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] <= '9' |==> chars[i] < '9'
4619:ROR:<=(int,int):==(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] <= '9' |==> chars[i] == '9'
4620:ROR:<=(int,int):TRUE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] <= '9' |==> true
4621:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0' == chars[i] <= '9'
4622:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' && chars[i] <= '9' |==> false
4623:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] >= '0'
4624:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1391:chars[i] >= '0' && chars[i] <= '9' |==> chars[i] <= '9'
4625:LVR:TRUE:FALSE:org.apache.commons.lang3.math.NumberUtils@isNumber:1393:true |==> false
4626:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' |==> chars[i] <= 'e'
4627:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' |==> chars[i] >= 'e'
4628:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' |==> false
4629:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'E' |==> chars[i] <= 'E'
4630:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'E' |==> chars[i] >= 'E'
4631:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'E' |==> false
4632:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e' != (chars[i] == 'E')
4633:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'e'
4634:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' || chars[i] == 'E' |==> chars[i] == 'E'
4635:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1395:chars[i] == 'e' || chars[i] == 'E' |==> true
4636:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1397:false |==> true
4637:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1399:chars[i] == '.' |==> chars[i] <= '.'
4638:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1399:chars[i] == '.' |==> chars[i] >= '.'
4639:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1399:chars[i] == '.' |==> false
4640:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1400:hasDecPoint || hasExp |==> hasDecPoint != hasExp
4641:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1400:hasDecPoint || hasExp |==> hasDecPoint
4642:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1400:hasDecPoint || hasExp |==> hasExp
4643:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1400:hasDecPoint || hasExp |==> true
4644:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1402:false |==> true
4645:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1405:foundDigit |==> false
4646:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' |==> chars[i] <= 'd'
4647:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' |==> chars[i] >= 'd'
4648:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' |==> false
4649:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1409:chars[i] == 'D' |==> chars[i] <= 'D'
4650:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1409:chars[i] == 'D' |==> chars[i] >= 'D'
4651:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1409:chars[i] == 'D' |==> false
4652:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd' != (chars[i] == 'D')
4653:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'd'
4654:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1409:chars[i] == 'd' || chars[i] == 'D' |==> chars[i] == 'D'
4655:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1409:chars[i] == 'd' || chars[i] == 'D' |==> true
4656:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1410:chars[i] == 'f' |==> chars[i] <= 'f'
4657:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1410:chars[i] == 'f' |==> chars[i] >= 'f'
4658:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1410:chars[i] == 'f' |==> false
4659:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> (chars[i] == 'd' || chars[i] == 'D') != (chars[i] == 'f')
4660:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'd' || chars[i] == 'D'
4661:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1410:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> chars[i] == 'f'
4662:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1410:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' |==> true
4663:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1411:chars[i] == 'F' |==> chars[i] <= 'F'
4664:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1411:chars[i] == 'F' |==> chars[i] >= 'F'
4665:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1411:chars[i] == 'F' |==> false
4666:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f') != (chars[i] == 'F')
4667:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'
4668:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1411:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> chars[i] == 'F'
4669:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1411:chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F' |==> true
4670:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns == (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
4671:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> false
4672:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1407:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> !allowSigns
4673:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1408:!allowSigns && (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F') |==> (chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f' || chars[i] == 'F')
4674:STD:CALL:<NO-OP>:org.apache.commons.lang3.math.NumberUtils@isNumber:1412:foundDigit |==> false
4675:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1414:chars[i] == 'l' |==> chars[i] <= 'l'
4676:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1414:chars[i] == 'l' |==> chars[i] >= 'l'
4677:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1414:chars[i] == 'l' |==> false
4678:ROR:==(int,int):<=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1415:chars[i] == 'L' |==> chars[i] <= 'L'
4679:ROR:==(int,int):>=(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1415:chars[i] == 'L' |==> chars[i] >= 'L'
4680:ROR:==(int,int):FALSE(int,int):org.apache.commons.lang3.math.NumberUtils@isNumber:1415:chars[i] == 'L' |==> false
4681:COR:||(boolean,boolean):!=(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l' != (chars[i] == 'L')
4682:COR:||(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1414:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'l'
4683:COR:||(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1415:chars[i] == 'l' || chars[i] == 'L' |==> chars[i] == 'L'
4684:COR:||(boolean,boolean):TRUE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1415:chars[i] == 'l' || chars[i] == 'L' |==> true
4685:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp |==> foundDigit == !hasExp
4686:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp |==> false
4687:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp |==> foundDigit
4688:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp |==> !hasExp
4689:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp && !hasDecPoint |==> (foundDigit && !hasExp) == !hasDecPoint
4690:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp && !hasDecPoint |==> false
4691:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp && !hasDecPoint |==> foundDigit && !hasExp
4692:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1417:foundDigit && !hasExp && !hasDecPoint |==> !hasDecPoint
4693:LVR:FALSE:TRUE:org.apache.commons.lang3.math.NumberUtils@isNumber:1420:false |==> true
4694:COR:&&(boolean,boolean):==(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1424:!allowSigns && foundDigit |==> !allowSigns == foundDigit
4695:COR:&&(boolean,boolean):FALSE(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1424:!allowSigns && foundDigit |==> false
4696:COR:&&(boolean,boolean):LHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1424:!allowSigns && foundDigit |==> !allowSigns
4697:COR:&&(boolean,boolean):RHS(boolean,boolean):org.apache.commons.lang3.math.NumberUtils@isNumber:1424:!allowSigns && foundDigit |==> foundDigit
